{
    "sourceFile": "frontend/src/components/Home.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1753434643571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753441310246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,500 @@\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import \"./Home.css\";\r\n+\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n+  const handleFileChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"file\", file);\r\n+    formData.append(\"label\", label);\r\n+    formData.append(\"documentType\", documentType);\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n+      if (onFileUploaded) onFileUploaded(label);\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleDeleteClick = async () => {\r\n+    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/delete-document\",\r\n+        { documentType },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      alert(response.data.message);\r\n+      if (onDelete) onDelete(label);\r\n+    } catch (error) {\r\n+      console.error(\"Delete error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"file-upload-container\">\r\n+      <label className=\"custum-file-upload\">\r\n+        <div className=\"icon\">\r\n+          <svg\r\n+            xmlns=\"http://www.w3.org/2000/svg\"\r\n+            fill=\"#000000\"\r\n+            viewBox=\"0 0 24 24\"\r\n+            width=\"48px\"\r\n+            height=\"48px\"\r\n+          >\r\n+            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+            <path\r\n+              fill=\"#e8e8e8\"\r\n+              d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                 9.11 4 6.6 5.64 5.35 8.04 \r\n+                 2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                 2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                 5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                 12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+            />\r\n+          </svg>\r\n+        </div>\r\n+        <div className=\"text\">\r\n+          <span>{label}</span>\r\n+        </div>\r\n+        <input type=\"file\" onChange={handleFileChange} />\r\n+      </label>\r\n+      <button className=\"delete-btn\" onClick={handleDeleteClick} title={`Delete ${label}`}>\r\n+        üóëÔ∏è Delete\r\n+      </button>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default function Home() {\r\n+  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n+  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n+  const [userData, setUserData] = useState({\r\n+    fullNames: \"Loading...\",\r\n+    familyName: \"\",\r\n+    email: \"Loading...\",\r\n+    profileImage: null,\r\n+    documentRequirements: {},\r\n+  });\r\n+  const [editingName, setEditingName] = useState(false);\r\n+  const [editingEmail, setEditingEmail] = useState(false);\r\n+  const [tempName, setTempName] = useState(\"\");\r\n+  const [tempEmail, setTempEmail] = useState(\"\");\r\n+  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const profileInputRef = useRef(null);\r\n+\r\n+  const fetchUserData = async () => {\r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      if (!token) {\r\n+        window.location.href = \"/login\";\r\n+        return;\r\n+      }\r\n+\r\n+      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+\r\n+      setUserData(response.data);\r\n+      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n+      setTempEmail(response.data.email);\r\n+\r\n+      const uploaded = [];\r\n+      if (response.data.documentRequirements) {\r\n+        if (response.data.documentRequirements.politicalDeclaration)\r\n+          uploaded.push(\"528\");\r\n+        if (\r\n+          response.data.documentRequirements.witnessTestimonies &&\r\n+          response.data.documentRequirements.witnessTestimonies.length > 0\r\n+        )\r\n+          uploaded.push(\"928\");\r\n+        if (response.data.documentRequirements.idDocumentFile)\r\n+          uploaded.push(\"Praecipe\");\r\n+      }\r\n+      setUploadedLabels(uploaded);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch user data:\", error);\r\n+      localStorage.removeItem(\"token\");\r\n+      window.location.href = \"/login\";\r\n+    }\r\n+  };\r\n+\r\n+  const fetchPublicViewUsers = async () => {\r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+      setPublicViewUsers(response.data);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch public view users:\", error);\r\n+      alert(\"Failed to load public view users\");\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    fetchUserData();\r\n+  }, []);\r\n+\r\n+  const toggleSidebar = () => {\r\n+    setSidebarOpen((prev) => !prev);\r\n+    if (!sidebarOpen) {\r\n+      fetchPublicViewUsers();\r\n+    }\r\n+  };\r\n+\r\n+  const handleFileUploaded = (label) => {\r\n+    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n+    fetchUserData();\r\n+  };\r\n+\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n+    fetchUserData();\r\n+  };\r\n+\r\n+  const handleProfileImageChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n+\r\n+    try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"file\", file);\r\n+      formData.append(\"type\", \"profileImage\");\r\n+\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      setUserData((prev) => ({\r\n+        ...prev,\r\n+        profileImage: response.data.filePath,\r\n+      }));\r\n+      alert(\"Profile image updated successfully!\");\r\n+      fetchUserData();\r\n+    } catch (error) {\r\n+      console.error(\"Error uploading profile image:\", error);\r\n+      alert(\"Failed to upload profile image\");\r\n+    }\r\n+  };\r\n+\r\n+  const saveUserData = async () => {\r\n+    try {\r\n+      const [fullNames, familyName] = tempName.split(\" \");\r\n+      const token = localStorage.getItem(\"token\");\r\n+\r\n+      const response = await axios.put(\r\n+        \"http://localhost:5000/api/auth/update\",\r\n+        {\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      setUserData(response.data);\r\n+      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n+      setTempEmail(response.data.email);\r\n+      setEditingName(false);\r\n+      setEditingEmail(false);\r\n+      alert(\"Profile updated successfully!\");\r\n+    } catch (error) {\r\n+      console.error(\"Error updating profile:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to update profile\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem(\"token\");\r\n+    window.location.href = \"/login\";\r\n+  };\r\n+\r\n+  const renderSatisfaction = (user) => {\r\n+    return (\r\n+      <div className=\"satisfaction-view\">\r\n+        <h3>{user.fullNames} {user.familyName}</h3>\r\n+        <div className=\"affidavit\">\r\n+          <h4>Affidavit Of My Status</h4>\r\n+          <p>\r\n+            I, a living soul being of sound mind, competent and over the age of maturity, \r\n+            hereby affirm the following testimony is true. I have completed the fullness \r\n+            of the sovereign walk.\r\n+          </p>\r\n+        </div>\r\n+        \r\n+        <div className=\"completed-documents\">\r\n+          <h4>Completed Documents:</h4>\r\n+          \r\n+          {user.documentRequirements?.politicalDeclaration && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n+              <ul>\r\n+                <li>ID Document or Drivers License or Passport</li>\r\n+                <li>Thumbprint (red ink)</li>\r\n+                <li>Utility Bill</li>\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+          \r\n+          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n+              <ul>\r\n+                <li>Act of Expatriation</li>\r\n+                <li>Certificate of Assumed Name</li>\r\n+                <li>Notice of Transfer of Reserved Name</li>\r\n+                <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                <li>Paramount Claim of Life</li>\r\n+                <li>Mandatory Notice</li>\r\n+                <li>Common Carry Declaration Weapon</li>\r\n+                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                <li>Baby Deed Affidavit Testimony</li>\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div\r\n+        className=\"sidebar-toggle\"\r\n+        onClick={toggleSidebar}\r\n+        title=\"Show Info / Upload Profile Pic\"\r\n+      >\r\n+        {userData.profileImage ? (\r\n+          <img\r\n+            src={`http://localhost:5000${userData.profileImage}`}\r\n+            alt=\"Profile\"\r\n+            className=\"profile-img\"\r\n+            style={{\r\n+              cursor: \"pointer\",\r\n+              borderRadius: \"50%\",\r\n+              width: \"36px\",\r\n+              height: \"36px\",\r\n+              objectFit: \"cover\",\r\n+            }}\r\n+          />\r\n+        ) : (\r\n+          \"i\"\r\n+        )}\r\n+      </div>\r\n+\r\n+      <input\r\n+        type=\"file\"\r\n+        accept=\"image/*\"\r\n+        style={{ display: \"none\" }}\r\n+        ref={profileInputRef}\r\n+        onChange={handleProfileImageChange}\r\n+      />\r\n+\r\n+      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n+        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n+          &larr; Back\r\n+        </button>\r\n+        <h2>User Info</h2>\r\n+\r\n+        <div\r\n+          className=\"profile-upload\"\r\n+          onClick={() => profileInputRef.current?.click()}\r\n+          title=\"Click to upload profile picture\"\r\n+          style={{\r\n+            marginBottom: \"1rem\",\r\n+            cursor: \"pointer\",\r\n+            width: 120,\r\n+            height: 120,\r\n+            borderRadius: \"50%\",\r\n+            border: \"2px dashed #2f80ed\",\r\n+            display: \"flex\",\r\n+            justifyContent: \"center\",\r\n+            alignItems: \"center\",\r\n+            overflow: \"hidden\",\r\n+            backgroundColor: \"#f0f0f0\",\r\n+            color: \"#555\",\r\n+            fontSize: \"1.2rem\",\r\n+            userSelect: \"none\",\r\n+          }}\r\n+        >\r\n+          {userData.profileImage ? (\r\n+            <img\r\n+              src={`http://localhost:5000${userData.profileImage}`}\r\n+              alt=\"Profile\"\r\n+              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n+            />\r\n+          ) : (\r\n+            <span>Upload Profile Pic</span>\r\n+          )}\r\n+        </div>\r\n+\r\n+        <div className=\"editable-field\">\r\n+          <label>Name:</label>\r\n+          {editingName ? (\r\n+            <input\r\n+              type=\"text\"\r\n+              value={tempName}\r\n+              onChange={(e) => setTempName(e.target.value)}\r\n+              autoFocus\r\n+            />\r\n+          ) : (\r\n+            <span>{tempName}</span>\r\n+          )}\r\n+          {!editingName && (\r\n+            <button\r\n+              className=\"edit-btn\"\r\n+              title=\"Edit Name\"\r\n+              onClick={() => setEditingName(true)}\r\n+            >\r\n+              ‚úèÔ∏è\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        <div className=\"editable-field\">\r\n+          <label>Email:</label>\r\n+          {editingEmail ? (\r\n+            <input\r\n+              type=\"email\"\r\n+              value={tempEmail}\r\n+              onChange={(e) => setTempEmail(e.target.value)}\r\n+              autoFocus\r\n+            />\r\n+          ) : (\r\n+            <span>{tempEmail}</span>\r\n+          )}\r\n+          {!editingEmail && (\r\n+            <button\r\n+              className=\"edit-btn\"\r\n+              title=\"Edit Email\"\r\n+              onClick={() => setEditingEmail(true)}\r\n+            >\r\n+              ‚úèÔ∏è\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {(editingName || editingEmail) && (\r\n+          <div className=\"save-section\">\r\n+            <button className=\"save-btn\" onClick={saveUserData}>\r\n+              Save Changes\r\n+            </button>\r\n+            <button\r\n+              className=\"cancel-btn\"\r\n+              onClick={() => {\r\n+                setEditingName(false);\r\n+                setEditingEmail(false);\r\n+                setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+                setTempEmail(userData.email);\r\n+              }}\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n+        )}\r\n+\r\n+        <div className=\"document-uploads\">\r\n+          <h3>Document Uploads</h3>\r\n+          {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n+            <div key={label} className=\"upload-item\">\r\n+              <FileUpload\r\n+                label={label}\r\n+                onFileUploaded={handleFileUploaded}\r\n+                onDelete={handleFileDeleted}\r\n+                documentType={\r\n+                  label === \"528\"\r\n+                    ? \"politicalDeclaration\"\r\n+                    : label === \"928\"\r\n+                    ? \"witnessTestimonies\"\r\n+                    : \"idDocument\"\r\n+                }\r\n+              />\r\n+              {uploadedLabels.includes(label) && (\r\n+                <span className=\"tick\">‚úî</span>\r\n+              )}\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+\r\n+        <div className=\"public-view-section\">\r\n+          <h3>Public View</h3>\r\n+          <div className=\"user-list\">\r\n+            {publicViewUsers.map((user) => (\r\n+              <div \r\n+                key={user._id} \r\n+                className=\"user-item\"\r\n+                onClick={() => setSelectedUser(user)}\r\n+              >\r\n+                {user.fullNames} {user.familyName}\r\n+                {user.documentRequirements?.politicalDeclaration && \r\n+                 user.documentRequirements?.witnessTestimonies?.length > 0 && \r\n+                 user.documentRequirements?.idDocumentFile && (\r\n+                  <span className=\"completed-badge\">Completed</span>\r\n+                )}\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"logout-section\">\r\n+          <button className=\"logout-btn\" onClick={handleLogout}>\r\n+            Logout\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n+        {selectedUser ? (\r\n+          renderSatisfaction(selectedUser)\r\n+        ) : (\r\n+          <div className=\"welcome-message\">\r\n+            <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n+            <p>Click the menu button to upload documents or view public records</p>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753441741420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,61 @@\n     </div>\r\n   );\r\n }\r\n \r\n+function SatisfactionPopup({ user, onClose }) {\r\n+  return (\r\n+    <div className=\"popup-overlay\">\r\n+      <div className=\"satisfaction-popup\">\r\n+        <button className=\"close-popup\" onClick={onClose}>\r\n+          &times;\r\n+        </button>\r\n+        <h3>{user.fullNames} {user.familyName}</h3>\r\n+        <div className=\"affidavit\">\r\n+          <h4>Affidavit Of My Status</h4>\r\n+          <p>\r\n+            I, a living soul being of sound mind, competent and over the age of maturity, \r\n+            hereby affirm the following testimony is true. I have completed the fullness \r\n+            of the sovereign walk.\r\n+          </p>\r\n+        </div>\r\n+        \r\n+        <div className=\"completed-documents\">\r\n+          <h4>Completed Documents:</h4>\r\n+          \r\n+          {user.documentRequirements?.politicalDeclaration && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n+              <ul>\r\n+                <li>ID Document or Drivers License or Passport</li>\r\n+                <li>Thumbprint (red ink)</li>\r\n+                <li>Utility Bill</li>\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+          \r\n+          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n+              <ul>\r\n+                <li>Act of Expatriation</li>\r\n+                <li>Certificate of Assumed Name</li>\r\n+                <li>Notice of Transfer of Reserved Name</li>\r\n+                <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                <li>Paramount Claim of Life</li>\r\n+                <li>Mandatory Notice</li>\r\n+                <li>Common Carry Declaration Weapon</li>\r\n+                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                <li>Baby Deed Affidavit Testimony</li>\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n export default function Home() {\r\n   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n   const [uploadedLabels, setUploadedLabels] = useState([]);\r\n   const [userData, setUserData] = useState({\r\n@@ -104,8 +157,9 @@\n   const [editingEmail, setEditingEmail] = useState(false);\r\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n   const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n+  const [showPublicView, setShowPublicView] = useState(false);\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n@@ -166,9 +220,13 @@\n   }, []);\r\n \r\n   const toggleSidebar = () => {\r\n     setSidebarOpen((prev) => !prev);\r\n-    if (!sidebarOpen) {\r\n+  };\r\n+\r\n+  const togglePublicView = () => {\r\n+    setShowPublicView(!showPublicView);\r\n+    if (!showPublicView) {\r\n       fetchPublicViewUsers();\r\n     }\r\n   };\r\n \r\n@@ -250,56 +308,16 @@\n     localStorage.removeItem(\"token\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n-  const renderSatisfaction = (user) => {\r\n-    return (\r\n-      <div className=\"satisfaction-view\">\r\n-        <h3>{user.fullNames} {user.familyName}</h3>\r\n-        <div className=\"affidavit\">\r\n-          <h4>Affidavit Of My Status</h4>\r\n-          <p>\r\n-            I, a living soul being of sound mind, competent and over the age of maturity, \r\n-            hereby affirm the following testimony is true. I have completed the fullness \r\n-            of the sovereign walk.\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        <div className=\"completed-documents\">\r\n-          <h4>Completed Documents:</h4>\r\n-          \r\n-          {user.documentRequirements?.politicalDeclaration && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n-              <ul>\r\n-                <li>ID Document or Drivers License or Passport</li>\r\n-                <li>Thumbprint (red ink)</li>\r\n-                <li>Utility Bill</li>\r\n-              </ul>\r\n-            </div>\r\n-          )}\r\n-          \r\n-          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n-              <ul>\r\n-                <li>Act of Expatriation</li>\r\n-                <li>Certificate of Assumed Name</li>\r\n-                <li>Notice of Transfer of Reserved Name</li>\r\n-                <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                <li>Paramount Claim of Life</li>\r\n-                <li>Mandatory Notice</li>\r\n-                <li>Common Carry Declaration Weapon</li>\r\n-                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                <li>Baby Deed Affidavit Testimony</li>\r\n-              </ul>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-    );\r\n+  const handleUserClick = (user) => {\r\n+    setSelectedUser(user);\r\n   };\r\n \r\n+  const closeSatisfactionPopup = () => {\r\n+    setSelectedUser(null);\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <div\r\n         className=\"sidebar-toggle\"\r\n@@ -457,459 +475,61 @@\n             </div>\r\n           ))}\r\n         </div>\r\n \r\n-        <div className=\"public-view-section\">\r\n-          <h3>Public View</h3>\r\n-          <div className=\"user-list\">\r\n-            {publicViewUsers.map((user) => (\r\n-              <div \r\n-                key={user._id} \r\n-                className=\"user-item\"\r\n-                onClick={() => setSelectedUser(user)}\r\n-              >\r\n-                {user.fullNames} {user.familyName}\r\n-                {user.documentRequirements?.politicalDeclaration && \r\n-                 user.documentRequirements?.witnessTestimonies?.length > 0 && \r\n-                 user.documentRequirements?.idDocumentFile && (\r\n-                  <span className=\"completed-badge\">Completed</span>\r\n-                )}\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </div>\r\n-\r\n         <div className=\"logout-section\">\r\n           <button className=\"logout-btn\" onClick={handleLogout}>\r\n             Logout\r\n           </button>\r\n         </div>\r\n       </div>\r\n \r\n       <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-        {selectedUser ? (\r\n-          renderSatisfaction(selectedUser)\r\n-        ) : (\r\n-          <div className=\"welcome-message\">\r\n-            <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n-            <p>Click the menu button to upload documents or view public records</p>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </>\r\n-  );\r\n-}\n-import React, { useState, useRef, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"./Home.css\";\r\n-\r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n-  const handleFileChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    const formData = new FormData();\r\n-    formData.append(\"file\", file);\r\n-    formData.append(\"label\", label);\r\n-    formData.append(\"documentType\", documentType);\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n-      if (onFileUploaded) onFileUploaded(label);\r\n-    } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-      alert(response.data.message);\r\n-      if (onDelete) onDelete(label);\r\n-    } catch (error) {\r\n-      console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"file-upload-container\">\r\n-      <label className=\"custum-file-upload\">\r\n-        <div className=\"icon\">\r\n-          <svg\r\n-            xmlns=\"http://www.w3.org/2000/svg\"\r\n-            fill=\"#000000\"\r\n-            viewBox=\"0 0 24 24\"\r\n-            width=\"48px\"\r\n-            height=\"48px\"\r\n+        <div className=\"main-content\">\r\n+          <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n+          \r\n+          <button \r\n+            className=\"public-view-btn\"\r\n+            onClick={togglePublicView}\r\n           >\r\n-            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-            <path\r\n-              fill=\"#e8e8e8\"\r\n-              d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                 9.11 4 6.6 5.64 5.35 8.04 \r\n-                 2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                 2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                 5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                 12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-            />\r\n-          </svg>\r\n-        </div>\r\n-        <div className=\"text\">\r\n-          <span>{label}</span>\r\n-        </div>\r\n-        <input type=\"file\" onChange={handleFileChange} />\r\n-      </label>\r\n-      <button className=\"delete-btn\" onClick={handleDeleteClick} title={`Delete ${label}`}>\r\n-        üóëÔ∏è Delete\r\n-      </button>\r\n-    </div>\r\n-  );\r\n-}\r\n+            {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n+          </button>\r\n \r\n-export default function Home() {\r\n-  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n-  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n-  const [userData, setUserData] = useState({\r\n-    fullNames: \"Loading...\",\r\n-    familyName: \"\",\r\n-    email: \"Loading...\",\r\n-    profileImage: null,\r\n-    documentRequirements: {},\r\n-  });\r\n-  const [editingName, setEditingName] = useState(false);\r\n-  const [editingEmail, setEditingEmail] = useState(false);\r\n-  const [tempName, setTempName] = useState(\"\");\r\n-  const [tempEmail, setTempEmail] = useState(\"\");\r\n-  const profileInputRef = useRef(null);\r\n-\r\n-  // Fetch user data on mount, also after updates to keep UI synced\r\n-  const fetchUserData = async () => {\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      if (!token) {\r\n-        window.location.href = \"/login\";\r\n-        return;\r\n-      }\r\n-\r\n-      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n-\r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n-\r\n-      // Extract uploaded document labels\r\n-      const uploaded = [];\r\n-      if (response.data.documentRequirements) {\r\n-        if (response.data.documentRequirements.politicalDeclaration)\r\n-          uploaded.push(\"528\");\r\n-        if (\r\n-          response.data.documentRequirements.witnessTestimonies &&\r\n-          response.data.documentRequirements.witnessTestimonies.length > 0\r\n-        )\r\n-          uploaded.push(\"928\");\r\n-        if (response.data.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"Praecipe\");\r\n-      }\r\n-      setUploadedLabels(uploaded);\r\n-    } catch (error) {\r\n-      console.error(\"Failed to fetch user data:\", error);\r\n-      localStorage.removeItem(\"token\");\r\n-      window.location.href = \"/login\";\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    fetchUserData();\r\n-  }, []);\r\n-\r\n-  const toggleDropdown = () => setDropdownOpen((prev) => !prev);\r\n-  const toggleSidebar = () => setSidebarOpen((prev) => !prev);\r\n-\r\n-  const handleFileUploaded = (label) => {\r\n-    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n-    fetchUserData(); // Refresh user data after upload\r\n-  };\r\n-\r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n-    fetchUserData(); // Refresh user data after delete\r\n-  };\r\n-\r\n-  const handleProfileImageChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    try {\r\n-      const formData = new FormData();\r\n-      formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n-\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      // Update profile image locally & refresh user data\r\n-      setUserData((prev) => ({\r\n-        ...prev,\r\n-        profileImage: response.data.filePath,\r\n-      }));\r\n-      alert(\"Profile image updated successfully!\");\r\n-      fetchUserData();\r\n-    } catch (error) {\r\n-      console.error(\"Error uploading profile image:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n-    }\r\n-  };\r\n-\r\n-  const saveUserData = async () => {\r\n-    try {\r\n-      const [fullNames, familyName] = tempName.split(\" \");\r\n-      const token = localStorage.getItem(\"token\");\r\n-\r\n-      const response = await axios.put(\r\n-        \"http://localhost:5000/api/auth/update\",\r\n-        {\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n-      setEditingName(false);\r\n-      setEditingEmail(false);\r\n-      alert(\"Profile updated successfully!\");\r\n-    } catch (error) {\r\n-      console.error(\"Error updating profile:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to update profile\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleLogout = () => {\r\n-    localStorage.removeItem(\"token\");\r\n-    window.location.href = \"/login\";\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div\r\n-        className=\"sidebar-toggle\"\r\n-        onClick={toggleSidebar}\r\n-        title=\"Show Info / Upload Profile Pic\"\r\n-      >\r\n-        {userData.profileImage ? (\r\n-          <img\r\n-            src={`http://localhost:5000${userData.profileImage}`}\r\n-            alt=\"Profile\"\r\n-            className=\"profile-img\"\r\n-            style={{\r\n-              cursor: \"pointer\",\r\n-              borderRadius: \"50%\",\r\n-              width: \"36px\",\r\n-              height: \"36px\",\r\n-              objectFit: \"cover\",\r\n-            }}\r\n-          />\r\n-        ) : (\r\n-          \"i\"\r\n-        )}\r\n-      </div>\r\n-\r\n-      <input\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        style={{ display: \"none\" }}\r\n-        ref={profileInputRef}\r\n-        onChange={handleProfileImageChange}\r\n-      />\r\n-\r\n-      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n-        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n-          &larr; Back\r\n-        </button>\r\n-        <h2>User Info</h2>\r\n-\r\n-        <div\r\n-          className=\"profile-upload\"\r\n-          onClick={() => profileInputRef.current?.click()}\r\n-          title=\"Click to upload profile picture\"\r\n-          style={{\r\n-            marginBottom: \"1rem\",\r\n-            cursor: \"pointer\",\r\n-            width: 120,\r\n-            height: 120,\r\n-            borderRadius: \"50%\",\r\n-            border: \"2px dashed #2f80ed\",\r\n-            display: \"flex\",\r\n-            justifyContent: \"center\",\r\n-            alignItems: \"center\",\r\n-            overflow: \"hidden\",\r\n-            backgroundColor: \"#f0f0f0\",\r\n-            color: \"#555\",\r\n-            fontSize: \"1.2rem\",\r\n-            userSelect: \"none\",\r\n-          }}\r\n-        >\r\n-          {userData.profileImage ? (\r\n-            <img\r\n-              src={`http://localhost:5000${userData.profileImage}`}\r\n-              alt=\"Profile\"\r\n-              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n-            />\r\n-          ) : (\r\n-            <span>Upload Profile Pic</span>\r\n+          {showPublicView && (\r\n+            <div className=\"public-view-container\">\r\n+              <h3>Users with Completed Documents</h3>\r\n+              {publicViewUsers.length === 0 ? (\r\n+                <p>No users have completed all documents yet</p>\r\n+              ) : (\r\n+                <div className=\"completed-users-list\">\r\n+                  {publicViewUsers.map((user) => (\r\n+                    <div \r\n+                      key={user._id} \r\n+                      className=\"completed-user\"\r\n+                      onClick={() => handleUserClick(user)}\r\n+                    >\r\n+                      {user.fullNames} {user.familyName}\r\n+                      <span className=\"completed-badge\">Completed</span>\r\n+                    </div>\r\n+                  ))}\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n           )}\r\n-        </div>\r\n \r\n-        {/* Editable Name */}\r\n-        <div className=\"editable-field\">\r\n-          <label>Name:</label>\r\n-          {editingName ? (\r\n-            <input\r\n-              type=\"text\"\r\n-              value={tempName}\r\n-              onChange={(e) => setTempName(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{tempName}</span>\r\n+          {!showPublicView && (\r\n+            <p className=\"instructions\">\r\n+              Click the menu button to upload documents or view public records\r\n+            </p>\r\n           )}\r\n-          {!editingName && (\r\n-            <button\r\n-              className=\"edit-btn\"\r\n-              title=\"Edit Name\"\r\n-              onClick={() => setEditingName(true)}\r\n-            >\r\n-              ‚úèÔ∏è\r\n-            </button>\r\n-          )}\r\n         </div>\r\n-\r\n-        {/* Editable Email */}\r\n-        <div className=\"editable-field\">\r\n-          <label>Email:</label>\r\n-          {editingEmail ? (\r\n-            <input\r\n-              type=\"email\"\r\n-              value={tempEmail}\r\n-              onChange={(e) => setTempEmail(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{tempEmail}</span>\r\n-          )}\r\n-          {!editingEmail && (\r\n-            <button\r\n-              className=\"edit-btn\"\r\n-              title=\"Edit Email\"\r\n-              onClick={() => setEditingEmail(true)}\r\n-            >\r\n-              ‚úèÔ∏è\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Save Button - Only shown when editing */}\r\n-        {(editingName || editingEmail) && (\r\n-          <div className=\"save-section\">\r\n-            <button className=\"save-btn\" onClick={saveUserData}>\r\n-              Save Changes\r\n-            </button>\r\n-            <button\r\n-              className=\"cancel-btn\"\r\n-              onClick={() => {\r\n-                setEditingName(false);\r\n-                setEditingEmail(false);\r\n-                setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-                setTempEmail(userData.email);\r\n-              }}\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n-        )}\r\n-\r\n-        <div className=\"logout-section\">\r\n-          <button className=\"logout-btn\" onClick={handleLogout}>\r\n-            Logout\r\n-          </button>\r\n-        </div>\r\n       </div>\r\n \r\n-      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-        <div className=\"upload-container\">\r\n-          <button className=\"upload-btn\" onClick={toggleDropdown}>\r\n-            Upload Documents ‚ñº\r\n-          </button>\r\n-          {dropdownOpen && (\r\n-            <div className=\"dropdown-menu\">\r\n-              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n-                <div key={label} className=\"dropdown-item\">\r\n-                  <FileUpload\r\n-                    label={label}\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n-                    documentType={\r\n-                      label === \"528\"\r\n-                        ? \"politicalDeclaration\"\r\n-                        : label === \"928\"\r\n-                        ? \"witnessTestimonies\"\r\n-                        : \"idDocument\"\r\n-                    }\r\n-                  />\r\n-                  {uploadedLabels.includes(label) && (\r\n-                    <span className=\"tick\">‚úî</span>\r\n-                  )}\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n+      {selectedUser && (\r\n+        <SatisfactionPopup \r\n+          user={selectedUser} \r\n+          onClose={closeSatisfactionPopup} \r\n+        />\r\n+      )}\r\n     </>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753444425854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,681 @@\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import \"./Home.css\";\r\n+\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n+  const [isUploading, setIsUploading] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+\r\n+  const handleFileChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n+\r\n+    // Check file size (max 5MB)\r\n+    if (file.size > 5 * 1024 * 1024) {\r\n+      alert(\"File size too large (max 5MB)\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"file\", file);\r\n+    formData.append(\"label\", label);\r\n+    formData.append(\"documentType\", documentType);\r\n+\r\n+    try {\r\n+      setIsUploading(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n+      if (onFileUploaded) onFileUploaded(label);\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n+    } finally {\r\n+      setIsUploading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDeleteClick = async () => {\r\n+    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/delete-document\",\r\n+        { documentType },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      alert(response.data.message);\r\n+      if (onDelete) onDelete(label);\r\n+    } catch (error) {\r\n+      console.error(\"Delete error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"file-upload-container\">\r\n+      <label className=\"custum-file-upload\" style={{ opacity: isUploading ? 0.7 : 1 }}>\r\n+        <div className=\"icon\">\r\n+          {isUploading ? (\r\n+            <div className=\"loading-spinner-small\"></div>\r\n+          ) : (\r\n+            <svg\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              fill=\"#000000\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              width=\"48px\"\r\n+              height=\"48px\"\r\n+            >\r\n+              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+              <path\r\n+                fill=\"#e8e8e8\"\r\n+                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                   9.11 4 6.6 5.64 5.35 8.04 \r\n+                   2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                   2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                   5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                   12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+              />\r\n+            </svg>\r\n+          )}\r\n+        </div>\r\n+        <div className=\"text\">\r\n+          <span>{label}</span>\r\n+        </div>\r\n+        <input \r\n+          type=\"file\" \r\n+          onChange={handleFileChange} \r\n+          disabled={isUploading}\r\n+          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n+        />\r\n+      </label>\r\n+      <button \r\n+        className=\"delete-btn\" \r\n+        onClick={handleDeleteClick} \r\n+        title={`Delete ${label}`}\r\n+        disabled={isDeleting}\r\n+      >\r\n+        {isDeleting ? <div className=\"loading-spinner-small\"></div> : \"üóëÔ∏è Delete\"}\r\n+      </button>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+function SatisfactionPopup({ user, onClose }) {\r\n+  return (\r\n+    <div className=\"popup-overlay\">\r\n+      <div className=\"satisfaction-popup\">\r\n+        <button className=\"close-popup\" onClick={onClose}>\r\n+          &times;\r\n+        </button>\r\n+        \r\n+        <div className=\"user-header\">\r\n+          {user.profileImage && (\r\n+            <img\r\n+              src={`http://localhost:5000${user.profileImage}`}\r\n+              alt=\"Profile\"\r\n+              className=\"popup-profile-img\"\r\n+            />\r\n+          )}\r\n+          <h3>{user.fullNames} {user.familyName}</h3>\r\n+        </div>\r\n+        \r\n+        <div className=\"affidavit\">\r\n+          <h4>Affidavit Of My Status</h4>\r\n+          <p>\r\n+            I, a living soul being of sound mind, competent and over the age of maturity, \r\n+            hereby affirm the following testimony is true. I have completed the fullness \r\n+            of the sovereign walk.\r\n+          </p>\r\n+        </div>\r\n+        \r\n+        <div className=\"completed-documents\">\r\n+          <h4>Completed Documents:</h4>\r\n+          \r\n+          {user.documentRequirements?.politicalDeclaration && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n+              <ul>\r\n+                <li>Political Declaration Document</li>\r\n+                {user.documentRequirements.idDocumentFile && (\r\n+                  <li>ID Document: {user.documentRequirements.idDocument || \"Not specified\"}</li>\r\n+                )}\r\n+                {user.documentRequirements.redThumbprint && (\r\n+                  <li>Thumbprint (red ink)</li>\r\n+                )}\r\n+                {user.documentRequirements.utilityBill && (\r\n+                  <li>Utility Bill</li>\r\n+                )}\r\n+                {user.documentRequirements.photoWithWhiteBg && (\r\n+                  <li>Photo with White Background</li>\r\n+                )}\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+          \r\n+          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+            <div className=\"document-section\">\r\n+              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n+              <ul>\r\n+                <li>Act of Expatriation</li>\r\n+                <li>Certificate of Assumed Name</li>\r\n+                <li>Notice of Transfer of Reserved Name</li>\r\n+                <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                <li>Paramount Claim of Life</li>\r\n+                <li>Mandatory Notice</li>\r\n+                <li>Common Carry Declaration Weapon</li>\r\n+                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                <li>Baby Deed Affidavit Testimony</li>\r\n+              </ul>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+        \r\n+        <div className=\"verification-status\">\r\n+          <h4>Verification Status:</h4>\r\n+          <p className={user.documentRequirements?.isValid ? \"status-verified\" : \"status-pending\"}>\r\n+            {user.documentRequirements?.isValid ? \"‚úÖ Verified\" : \"‚è≥ Pending Verification\"}\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default function Home() {\r\n+  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n+  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n+  const [userData, setUserData] = useState({\r\n+    fullNames: \"Loading...\",\r\n+    familyName: \"\",\r\n+    email: \"Loading...\",\r\n+    profileImage: null,\r\n+    documentRequirements: {},\r\n+  });\r\n+  const [editingName, setEditingName] = useState(false);\r\n+  const [editingEmail, setEditingEmail] = useState(false);\r\n+  const [tempName, setTempName] = useState(\"\");\r\n+  const [tempEmail, setTempEmail] = useState(\"\");\r\n+  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n+  const [showPublicView, setShowPublicView] = useState(\r\n+    localStorage.getItem('showPublicView') === 'true'\r\n+  );\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const [loadingUserData, setLoadingUserData] = useState(true);\r\n+  const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n+  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n+  const profileInputRef = useRef(null);\r\n+\r\n+  const fetchUserData = async () => {\r\n+    try {\r\n+      setLoadingUserData(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      if (!token) {\r\n+        window.location.href = \"/login\";\r\n+        return;\r\n+      }\r\n+\r\n+      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+\r\n+      setUserData(response.data);\r\n+      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n+      setTempEmail(response.data.email);\r\n+\r\n+      const uploaded = [];\r\n+      if (response.data.documentRequirements) {\r\n+        if (response.data.documentRequirements.politicalDeclaration)\r\n+          uploaded.push(\"528\");\r\n+        if (\r\n+          response.data.documentRequirements.witnessTestimonies &&\r\n+          response.data.documentRequirements.witnessTestimonies.length > 0\r\n+        )\r\n+          uploaded.push(\"928\");\r\n+        if (response.data.documentRequirements.idDocumentFile)\r\n+          uploaded.push(\"Praecipe\");\r\n+      }\r\n+      setUploadedLabels(uploaded);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch user data:\", error);\r\n+      localStorage.removeItem(\"token\");\r\n+      window.location.href = \"/login\";\r\n+    } finally {\r\n+      setLoadingUserData(false);\r\n+    }\r\n+  };\r\n+\r\n+  const fetchPublicViewUsers = async () => {\r\n+    try {\r\n+      setLoadingPublicView(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+      setPublicViewUsers(response.data);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch public view users:\", error);\r\n+      alert(\"Failed to load public view users\");\r\n+    } finally {\r\n+      setLoadingPublicView(false);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    fetchUserData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (showPublicView) {\r\n+      fetchPublicViewUsers();\r\n+    }\r\n+  }, [showPublicView]);\r\n+\r\n+  const toggleSidebar = () => {\r\n+    setSidebarOpen((prev) => !prev);\r\n+  };\r\n+\r\n+  const togglePublicView = () => {\r\n+    const newState = !showPublicView;\r\n+    setShowPublicView(newState);\r\n+    localStorage.setItem('showPublicView', newState.toString());\r\n+  };\r\n+\r\n+  const handleFileUploaded = (label) => {\r\n+    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n+    fetchUserData();\r\n+  };\r\n+\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n+    fetchUserData();\r\n+  };\r\n+\r\n+  const handleProfileImageChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n+\r\n+    // Check file size (max 2MB for profile images)\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      alert(\"Profile image too large (max 2MB)\");\r\n+      return;\r\n+    }\r\n+\r\n+    // Check file type\r\n+    if (!file.type.match(/image.*/)) {\r\n+      alert(\"Only image files are allowed for profile pictures\");\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"file\", file);\r\n+      formData.append(\"type\", \"profileImage\");\r\n+\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      setUserData((prev) => ({\r\n+        ...prev,\r\n+        profileImage: response.data.filePath,\r\n+      }));\r\n+      alert(\"Profile image updated successfully!\");\r\n+      fetchUserData();\r\n+    } catch (error) {\r\n+      console.error(\"Error uploading profile image:\", error);\r\n+      alert(\"Failed to upload profile image\");\r\n+    }\r\n+  };\r\n+\r\n+  const saveUserData = async () => {\r\n+    if (!tempName.trim() || !tempEmail.trim()) {\r\n+      alert(\"Name and email cannot be empty\");\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsUpdatingProfile(true);\r\n+      const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n+      const familyName = familyNameParts.join(\" \");\r\n+      \r\n+      if (!familyName) {\r\n+        alert(\"Please provide both first and last names\");\r\n+        return;\r\n+      }\r\n+\r\n+      const token = localStorage.getItem(\"token\");\r\n+\r\n+      const response = await axios.put(\r\n+        \"http://localhost:5000/api/auth/update\",\r\n+        {\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      setUserData(response.data);\r\n+      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n+      setTempEmail(response.data.email);\r\n+      setEditingName(false);\r\n+      setEditingEmail(false);\r\n+      alert(\"Profile updated successfully!\");\r\n+    } catch (error) {\r\n+      console.error(\"Error updating profile:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to update profile\");\r\n+    } finally {\r\n+      setIsUpdatingProfile(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem(\"token\");\r\n+    localStorage.removeItem('showPublicView');\r\n+    window.location.href = \"/login\";\r\n+  };\r\n+\r\n+  const handleUserClick = (user) => {\r\n+    setSelectedUser(user);\r\n+  };\r\n+\r\n+  const closeSatisfactionPopup = () => {\r\n+    setSelectedUser(null);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div\r\n+        className=\"sidebar-toggle\"\r\n+        onClick={toggleSidebar}\r\n+        title=\"Show Info / Upload Profile Pic\"\r\n+      >\r\n+        {loadingUserData ? (\r\n+          <div className=\"loading-spinner\"></div>\r\n+        ) : userData.profileImage ? (\r\n+          <img\r\n+            src={`http://localhost:5000${userData.profileImage}`}\r\n+            alt=\"Profile\"\r\n+            className=\"profile-img\"\r\n+          />\r\n+        ) : (\r\n+          <div className=\"profile-placeholder\">i</div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <input\r\n+        type=\"file\"\r\n+        accept=\"image/*\"\r\n+        style={{ display: \"none\" }}\r\n+        ref={profileInputRef}\r\n+        onChange={handleProfileImageChange}\r\n+      />\r\n+\r\n+      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n+        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n+          &larr; Back\r\n+        </button>\r\n+        <h2>User Info</h2>\r\n+\r\n+        {loadingUserData ? (\r\n+          <div className=\"loading-container\">\r\n+            <div className=\"loading-spinner\"></div>\r\n+            <p>Loading user data...</p>\r\n+          </div>\r\n+        ) : (\r\n+          <>\r\n+            <div\r\n+              className=\"profile-upload\"\r\n+              onClick={() => profileInputRef.current?.click()}\r\n+              title=\"Click to upload profile picture\"\r\n+            >\r\n+              {userData.profileImage ? (\r\n+                <img\r\n+                  src={`http://localhost:5000${userData.profileImage}`}\r\n+                  alt=\"Profile\"\r\n+                  className=\"profile-image\"\r\n+                />\r\n+              ) : (\r\n+                <span>Upload Profile Pic</span>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"editable-field\">\r\n+              <label>Name:</label>\r\n+              {editingName ? (\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={tempName}\r\n+                  onChange={(e) => setTempName(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n+              ) : (\r\n+                <span>{tempName}</span>\r\n+              )}\r\n+              {!editingName && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  title=\"Edit Name\"\r\n+                  onClick={() => setEditingName(true)}\r\n+                >\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"editable-field\">\r\n+              <label>Email:</label>\r\n+              {editingEmail ? (\r\n+                <input\r\n+                  type=\"email\"\r\n+                  value={tempEmail}\r\n+                  onChange={(e) => setTempEmail(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n+              ) : (\r\n+                <span>{tempEmail}</span>\r\n+              )}\r\n+              {!editingEmail && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  title=\"Edit Email\"\r\n+                  onClick={() => setEditingEmail(true)}\r\n+                >\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+\r\n+            {(editingName || editingEmail) && (\r\n+              <div className=\"save-section\">\r\n+                <button \r\n+                  className=\"save-btn\" \r\n+                  onClick={saveUserData}\r\n+                  disabled={isUpdatingProfile}\r\n+                >\r\n+                  {isUpdatingProfile ? (\r\n+                    <div className=\"loading-spinner-small\"></div>\r\n+                  ) : (\r\n+                    \"Save Changes\"\r\n+                  )}\r\n+                </button>\r\n+                <button\r\n+                  className=\"cancel-btn\"\r\n+                  onClick={() => {\r\n+                    setEditingName(false);\r\n+                    setEditingEmail(false);\r\n+                    setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+                    setTempEmail(userData.email);\r\n+                  }}\r\n+                  disabled={isUpdatingProfile}\r\n+                >\r\n+                  Cancel\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"document-uploads\">\r\n+              <h3>Document Uploads</h3>\r\n+              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n+                <div key={label} className=\"upload-item\">\r\n+                  <FileUpload\r\n+                    label={label}\r\n+                    onFileUploaded={handleFileUploaded}\r\n+                    onDelete={handleFileDeleted}\r\n+                    documentType={\r\n+                      label === \"528\"\r\n+                        ? \"politicalDeclaration\"\r\n+                        : label === \"928\"\r\n+                        ? \"witnessTestimonies\"\r\n+                        : \"idDocument\"\r\n+                    }\r\n+                  />\r\n+                  {uploadedLabels.includes(label) && (\r\n+                    <span className=\"tick\">‚úî</span>\r\n+                  )}\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+\r\n+            <div className=\"verification-status-sidebar\">\r\n+              <h4>Your Verification Status:</h4>\r\n+              <p className={userData.documentRequirements?.isValid ? \"status-verified\" : \"status-pending\"}>\r\n+                {userData.documentRequirements?.isValid \r\n+                  ? \"‚úÖ Verified - All documents complete\" \r\n+                  : \"‚è≥ Pending - Upload required documents\"}\r\n+              </p>\r\n+            </div>\r\n+\r\n+            <div className=\"logout-section\">\r\n+              <button className=\"logout-btn\" onClick={handleLogout}>\r\n+                Logout\r\n+              </button>\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n+        <div className=\"main-content\">\r\n+          {loadingUserData ? (\r\n+            <div className=\"loading-container\">\r\n+              <div className=\"loading-spinner\"></div>\r\n+              <p>Loading your data...</p>\r\n+            </div>\r\n+          ) : (\r\n+            <>\r\n+              <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n+              \r\n+              <button \r\n+                className=\"public-view-btn\"\r\n+                onClick={togglePublicView}\r\n+              >\r\n+                {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n+              </button>\r\n+\r\n+              {showPublicView && (\r\n+                <div className=\"public-view-container\">\r\n+                  <h3>Users with Completed Documents</h3>\r\n+                  {loadingPublicView ? (\r\n+                    <div className=\"loading-container\">\r\n+                      <div className=\"loading-spinner\"></div>\r\n+                      <p>Loading public records...</p>\r\n+                    </div>\r\n+                  ) : publicViewUsers.length === 0 ? (\r\n+                    <p>No users have completed all documents yet</p>\r\n+                  ) : (\r\n+                    <div className=\"completed-users-list\">\r\n+                      {publicViewUsers.map((user) => (\r\n+                        <div \r\n+                          key={user._id} \r\n+                          className=\"completed-user\"\r\n+                          onClick={() => handleUserClick(user)}\r\n+                        >\r\n+                          <div className=\"user-info\">\r\n+                            {user.profileImage && (\r\n+                              <img \r\n+                                src={`http://localhost:5000${user.profileImage}`} \r\n+                                alt=\"Profile\" \r\n+                                className=\"user-avatar\"\r\n+                              />\r\n+                            )}\r\n+                            <span>\r\n+                              {user.fullNames} {user.familyName}\r\n+                            </span>\r\n+                          </div>\r\n+                          <span className=\"completed-badge\">Completed</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              )}\r\n+\r\n+              {!showPublicView && (\r\n+                <div className=\"dashboard-info\">\r\n+                  <p className=\"instructions\">\r\n+                    Click the menu button to upload documents or view public records\r\n+                  </p>\r\n+                  <div className=\"completion-status\">\r\n+                    <h4>Your Document Completion:</h4>\r\n+                    <div className=\"progress-bar\">\r\n+                      <div \r\n+                        className=\"progress-fill\"\r\n+                        style={{\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`\r\n+                        }}\r\n+                      ></div>\r\n+                    </div>\r\n+                    <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {selectedUser && (\r\n+        <SatisfactionPopup \r\n+          user={selectedUser} \r\n+          onClose={closeSatisfactionPopup} \r\n+        />\r\n+      )}\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753444902320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n   const handleFileChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    // Check file size (max 5MB)\r\n     if (file.size > 5 * 1024 * 1024) {\r\n       alert(\"File size too large (max 5MB)\");\r\n       return;\r\n     }\r\n@@ -118,83 +117,53 @@\n     </div>\r\n   );\r\n }\r\n \r\n-function SatisfactionPopup({ user, onClose }) {\r\n+function SatisfactionCertificate({ user, onClose }) {\r\n   return (\r\n-    <div className=\"popup-overlay\">\r\n-      <div className=\"satisfaction-popup\">\r\n-        <button className=\"close-popup\" onClick={onClose}>\r\n+    <div className=\"certificate-overlay\">\r\n+      <div className=\"certificate-container\">\r\n+        <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n         \r\n-        <div className=\"user-header\">\r\n-          {user.profileImage && (\r\n-            <img\r\n-              src={`http://localhost:5000${user.profileImage}`}\r\n-              alt=\"Profile\"\r\n-              className=\"popup-profile-img\"\r\n-            />\r\n-          )}\r\n-          <h3>{user.fullNames} {user.familyName}</h3>\r\n+        <div className=\"certificate-header\">\r\n+          <div className=\"certificate-seal\">‚úß</div>\r\n+          <h2>Certificate of Completion</h2>\r\n+          <div className=\"certificate-seal\">‚úß</div>\r\n         </div>\r\n         \r\n-        <div className=\"affidavit\">\r\n-          <h4>Affidavit Of My Status</h4>\r\n-          <p>\r\n-            I, a living soul being of sound mind, competent and over the age of maturity, \r\n-            hereby affirm the following testimony is true. I have completed the fullness \r\n-            of the sovereign walk.\r\n+        <div className=\"certificate-body\">\r\n+          <p className=\"certificate-issued\">This certifies that</p>\r\n+          \r\n+          <h3 className=\"certificate-name\">\r\n+            {user.fullNames} {user.familyName}\r\n+          </h3>\r\n+          \r\n+          <p className=\"certificate-text\">\r\n+            has successfully completed all required documentation and fulfilled\r\n+            the necessary requirements for sovereign status recognition.\r\n           </p>\r\n-        </div>\r\n-        \r\n-        <div className=\"completed-documents\">\r\n-          <h4>Completed Documents:</h4>\r\n           \r\n-          {user.documentRequirements?.politicalDeclaration && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n-              <ul>\r\n-                <li>Political Declaration Document</li>\r\n-                {user.documentRequirements.idDocumentFile && (\r\n-                  <li>ID Document: {user.documentRequirements.idDocument || \"Not specified\"}</li>\r\n-                )}\r\n-                {user.documentRequirements.redThumbprint && (\r\n-                  <li>Thumbprint (red ink)</li>\r\n-                )}\r\n-                {user.documentRequirements.utilityBill && (\r\n-                  <li>Utility Bill</li>\r\n-                )}\r\n-                {user.documentRequirements.photoWithWhiteBg && (\r\n-                  <li>Photo with White Background</li>\r\n-                )}\r\n-              </ul>\r\n+          <div className=\"certificate-details\">\r\n+            <div className=\"certificate-detail\">\r\n+              <span className=\"detail-label\">Date Completed:</span>\r\n+              <span className=\"detail-value\">{new Date().toLocaleDateString()}</span>\r\n             </div>\r\n-          )}\r\n+            <div className=\"certificate-detail\">\r\n+              <span className=\"detail-label\">Document Type:</span>\r\n+              <span className=\"detail-value\">528/928 Package</span>\r\n+            </div>\r\n+          </div>\r\n           \r\n-          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n-              <ul>\r\n-                <li>Act of Expatriation</li>\r\n-                <li>Certificate of Assumed Name</li>\r\n-                <li>Notice of Transfer of Reserved Name</li>\r\n-                <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                <li>Paramount Claim of Life</li>\r\n-                <li>Mandatory Notice</li>\r\n-                <li>Common Carry Declaration Weapon</li>\r\n-                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                <li>Baby Deed Affidavit Testimony</li>\r\n-              </ul>\r\n-            </div>\r\n-          )}\r\n+          <div className=\"certificate-signatures\">\r\n+            <div className=\"signature-line\"></div>\r\n+            <p>Authorized Signature</p>\r\n+          </div>\r\n         </div>\r\n         \r\n-        <div className=\"verification-status\">\r\n-          <h4>Verification Status:</h4>\r\n-          <p className={user.documentRequirements?.isValid ? \"status-verified\" : \"status-pending\"}>\r\n-            {user.documentRequirements?.isValid ? \"‚úÖ Verified\" : \"‚è≥ Pending Verification\"}\r\n-          </p>\r\n+        <div className=\"certificate-footer\">\r\n+          <p>This certificate is issued under the authority of the Sovereign Records Office</p>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n@@ -316,15 +285,13 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    // Check file size (max 2MB for profile images)\r\n     if (file.size > 2 * 1024 * 1024) {\r\n       alert(\"Profile image too large (max 2MB)\");\r\n       return;\r\n     }\r\n \r\n-    // Check file type\r\n     if (!file.type.match(/image.*/)) {\r\n       alert(\"Only image files are allowed for profile pictures\");\r\n       return;\r\n     }\r\n@@ -413,9 +380,9 @@\n   const handleUserClick = (user) => {\r\n     setSelectedUser(user);\r\n   };\r\n \r\n-  const closeSatisfactionPopup = () => {\r\n+  const closeCertificate = () => {\r\n     setSelectedUser(null);\r\n   };\r\n \r\n   return (\r\n@@ -571,16 +538,20 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n-            <div className=\"verification-status-sidebar\">\r\n-              <h4>Your Verification Status:</h4>\r\n-              <p className={userData.documentRequirements?.isValid ? \"status-verified\" : \"status-pending\"}>\r\n-                {userData.documentRequirements?.isValid \r\n-                  ? \"‚úÖ Verified - All documents complete\" \r\n-                  : \"‚è≥ Pending - Upload required documents\"}\r\n-              </p>\r\n-            </div>\r\n+            {uploadedLabels.length === 3 && (\r\n+              <div className=\"certificate-preview\" onClick={() => handleUserClick(userData)}>\r\n+                <h4>Your Completion Certificate</h4>\r\n+                <div className=\"certificate-thumbnail\">\r\n+                  <div className=\"certificate-thumbnail-content\">\r\n+                    <p>Certificate of Completion</p>\r\n+                    <p>{userData.fullNames} {userData.familyName}</p>\r\n+                  </div>\r\n+                </div>\r\n+                <p className=\"view-certificate-text\">Click to view full certificate</p>\r\n+              </div>\r\n+            )}\r\n \r\n             <div className=\"logout-section\">\r\n               <button className=\"logout-btn\" onClick={handleLogout}>\r\n                 Logout\r\n@@ -637,9 +608,9 @@\n                             <span>\r\n                               {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">Completed</span>\r\n+                          <span className=\"completed-badge\">View Certificate</span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n                   )}\r\n@@ -661,8 +632,13 @@\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n+                    {uploadedLabels.length === 3 && (\r\n+                      <p className=\"completion-message\">\r\n+                        Congratulations! You've completed all required documents.\r\n+                      </p>\r\n+                    )}\r\n                   </div>\r\n                 </div>\r\n               )}\r\n             </>\r\n@@ -670,547 +646,12 @@\n         </div>\r\n       </div>\r\n \r\n       {selectedUser && (\r\n-        <SatisfactionPopup \r\n+        <SatisfactionCertificate \r\n           user={selectedUser} \r\n-          onClose={closeSatisfactionPopup} \r\n+          onClose={closeCertificate} \r\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n-import React, { useState, useRef, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"./Home.css\";\r\n-\r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n-  const handleFileChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    const formData = new FormData();\r\n-    formData.append(\"file\", file);\r\n-    formData.append(\"label\", label);\r\n-    formData.append(\"documentType\", documentType);\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n-      if (onFileUploaded) onFileUploaded(label);\r\n-    } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-      alert(response.data.message);\r\n-      if (onDelete) onDelete(label);\r\n-    } catch (error) {\r\n-      console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"file-upload-container\">\r\n-      <label className=\"custum-file-upload\">\r\n-        <div className=\"icon\">\r\n-          <svg\r\n-            xmlns=\"http://www.w3.org/2000/svg\"\r\n-            fill=\"#000000\"\r\n-            viewBox=\"0 0 24 24\"\r\n-            width=\"48px\"\r\n-            height=\"48px\"\r\n-          >\r\n-            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-            <path\r\n-              fill=\"#e8e8e8\"\r\n-              d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                 9.11 4 6.6 5.64 5.35 8.04 \r\n-                 2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                 2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                 5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                 12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-            />\r\n-          </svg>\r\n-        </div>\r\n-        <div className=\"text\">\r\n-          <span>{label}</span>\r\n-        </div>\r\n-        <input type=\"file\" onChange={handleFileChange} />\r\n-      </label>\r\n-      <button className=\"delete-btn\" onClick={handleDeleteClick} title={`Delete ${label}`}>\r\n-        üóëÔ∏è Delete\r\n-      </button>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-function SatisfactionPopup({ user, onClose }) {\r\n-  return (\r\n-    <div className=\"popup-overlay\">\r\n-      <div className=\"satisfaction-popup\">\r\n-        <button className=\"close-popup\" onClick={onClose}>\r\n-          &times;\r\n-        </button>\r\n-        <h3>{user.fullNames} {user.familyName}</h3>\r\n-        <div className=\"affidavit\">\r\n-          <h4>Affidavit Of My Status</h4>\r\n-          <p>\r\n-            I, a living soul being of sound mind, competent and over the age of maturity, \r\n-            hereby affirm the following testimony is true. I have completed the fullness \r\n-            of the sovereign walk.\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        <div className=\"completed-documents\">\r\n-          <h4>Completed Documents:</h4>\r\n-          \r\n-          {user.documentRequirements?.politicalDeclaration && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Universal Public Declaration of Political Status (528):</h5>\r\n-              <ul>\r\n-                <li>ID Document or Drivers License or Passport</li>\r\n-                <li>Thumbprint (red ink)</li>\r\n-                <li>Utility Bill</li>\r\n-              </ul>\r\n-            </div>\r\n-          )}\r\n-          \r\n-          {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-            <div className=\"document-section\">\r\n-              <h5>Acknowledgement, Acceptance and Deed of Re-Conveyance (928):</h5>\r\n-              <ul>\r\n-                <li>Act of Expatriation</li>\r\n-                <li>Certificate of Assumed Name</li>\r\n-                <li>Notice of Transfer of Reserved Name</li>\r\n-                <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                <li>Paramount Claim of Life</li>\r\n-                <li>Mandatory Notice</li>\r\n-                <li>Common Carry Declaration Weapon</li>\r\n-                <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                <li>Baby Deed Affidavit Testimony</li>\r\n-              </ul>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default function Home() {\r\n-  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n-  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n-  const [userData, setUserData] = useState({\r\n-    fullNames: \"Loading...\",\r\n-    familyName: \"\",\r\n-    email: \"Loading...\",\r\n-    profileImage: null,\r\n-    documentRequirements: {},\r\n-  });\r\n-  const [editingName, setEditingName] = useState(false);\r\n-  const [editingEmail, setEditingEmail] = useState(false);\r\n-  const [tempName, setTempName] = useState(\"\");\r\n-  const [tempEmail, setTempEmail] = useState(\"\");\r\n-  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n-  const [showPublicView, setShowPublicView] = useState(false);\r\n-  const [selectedUser, setSelectedUser] = useState(null);\r\n-  const profileInputRef = useRef(null);\r\n-\r\n-  const fetchUserData = async () => {\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      if (!token) {\r\n-        window.location.href = \"/login\";\r\n-        return;\r\n-      }\r\n-\r\n-      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n-\r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n-\r\n-      const uploaded = [];\r\n-      if (response.data.documentRequirements) {\r\n-        if (response.data.documentRequirements.politicalDeclaration)\r\n-          uploaded.push(\"528\");\r\n-        if (\r\n-          response.data.documentRequirements.witnessTestimonies &&\r\n-          response.data.documentRequirements.witnessTestimonies.length > 0\r\n-        )\r\n-          uploaded.push(\"928\");\r\n-        if (response.data.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"Praecipe\");\r\n-      }\r\n-      setUploadedLabels(uploaded);\r\n-    } catch (error) {\r\n-      console.error(\"Failed to fetch user data:\", error);\r\n-      localStorage.removeItem(\"token\");\r\n-      window.location.href = \"/login\";\r\n-    }\r\n-  };\r\n-\r\n-  const fetchPublicViewUsers = async () => {\r\n-    try {\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n-      setPublicViewUsers(response.data);\r\n-    } catch (error) {\r\n-      console.error(\"Failed to fetch public view users:\", error);\r\n-      alert(\"Failed to load public view users\");\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    fetchUserData();\r\n-  }, []);\r\n-\r\n-  const toggleSidebar = () => {\r\n-    setSidebarOpen((prev) => !prev);\r\n-  };\r\n-\r\n-  const togglePublicView = () => {\r\n-    setShowPublicView(!showPublicView);\r\n-    if (!showPublicView) {\r\n-      fetchPublicViewUsers();\r\n-    }\r\n-  };\r\n-\r\n-  const handleFileUploaded = (label) => {\r\n-    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n-    fetchUserData();\r\n-  };\r\n-\r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n-    fetchUserData();\r\n-  };\r\n-\r\n-  const handleProfileImageChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    try {\r\n-      const formData = new FormData();\r\n-      formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n-\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      setUserData((prev) => ({\r\n-        ...prev,\r\n-        profileImage: response.data.filePath,\r\n-      }));\r\n-      alert(\"Profile image updated successfully!\");\r\n-      fetchUserData();\r\n-    } catch (error) {\r\n-      console.error(\"Error uploading profile image:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n-    }\r\n-  };\r\n-\r\n-  const saveUserData = async () => {\r\n-    try {\r\n-      const [fullNames, familyName] = tempName.split(\" \");\r\n-      const token = localStorage.getItem(\"token\");\r\n-\r\n-      const response = await axios.put(\r\n-        \"http://localhost:5000/api/auth/update\",\r\n-        {\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n-      setEditingName(false);\r\n-      setEditingEmail(false);\r\n-      alert(\"Profile updated successfully!\");\r\n-    } catch (error) {\r\n-      console.error(\"Error updating profile:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to update profile\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleLogout = () => {\r\n-    localStorage.removeItem(\"token\");\r\n-    window.location.href = \"/login\";\r\n-  };\r\n-\r\n-  const handleUserClick = (user) => {\r\n-    setSelectedUser(user);\r\n-  };\r\n-\r\n-  const closeSatisfactionPopup = () => {\r\n-    setSelectedUser(null);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div\r\n-        className=\"sidebar-toggle\"\r\n-        onClick={toggleSidebar}\r\n-        title=\"Show Info / Upload Profile Pic\"\r\n-      >\r\n-        {userData.profileImage ? (\r\n-          <img\r\n-            src={`http://localhost:5000${userData.profileImage}`}\r\n-            alt=\"Profile\"\r\n-            className=\"profile-img\"\r\n-            style={{\r\n-              cursor: \"pointer\",\r\n-              borderRadius: \"50%\",\r\n-              width: \"36px\",\r\n-              height: \"36px\",\r\n-              objectFit: \"cover\",\r\n-            }}\r\n-          />\r\n-        ) : (\r\n-          \"i\"\r\n-        )}\r\n-      </div>\r\n-\r\n-      <input\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        style={{ display: \"none\" }}\r\n-        ref={profileInputRef}\r\n-        onChange={handleProfileImageChange}\r\n-      />\r\n-\r\n-      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n-        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n-          &larr; Back\r\n-        </button>\r\n-        <h2>User Info</h2>\r\n-\r\n-        <div\r\n-          className=\"profile-upload\"\r\n-          onClick={() => profileInputRef.current?.click()}\r\n-          title=\"Click to upload profile picture\"\r\n-          style={{\r\n-            marginBottom: \"1rem\",\r\n-            cursor: \"pointer\",\r\n-            width: 120,\r\n-            height: 120,\r\n-            borderRadius: \"50%\",\r\n-            border: \"2px dashed #2f80ed\",\r\n-            display: \"flex\",\r\n-            justifyContent: \"center\",\r\n-            alignItems: \"center\",\r\n-            overflow: \"hidden\",\r\n-            backgroundColor: \"#f0f0f0\",\r\n-            color: \"#555\",\r\n-            fontSize: \"1.2rem\",\r\n-            userSelect: \"none\",\r\n-          }}\r\n-        >\r\n-          {userData.profileImage ? (\r\n-            <img\r\n-              src={`http://localhost:5000${userData.profileImage}`}\r\n-              alt=\"Profile\"\r\n-              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n-            />\r\n-          ) : (\r\n-            <span>Upload Profile Pic</span>\r\n-          )}\r\n-        </div>\r\n-\r\n-        <div className=\"editable-field\">\r\n-          <label>Name:</label>\r\n-          {editingName ? (\r\n-            <input\r\n-              type=\"text\"\r\n-              value={tempName}\r\n-              onChange={(e) => setTempName(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{tempName}</span>\r\n-          )}\r\n-          {!editingName && (\r\n-            <button\r\n-              className=\"edit-btn\"\r\n-              title=\"Edit Name\"\r\n-              onClick={() => setEditingName(true)}\r\n-            >\r\n-              ‚úèÔ∏è\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        <div className=\"editable-field\">\r\n-          <label>Email:</label>\r\n-          {editingEmail ? (\r\n-            <input\r\n-              type=\"email\"\r\n-              value={tempEmail}\r\n-              onChange={(e) => setTempEmail(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{tempEmail}</span>\r\n-          )}\r\n-          {!editingEmail && (\r\n-            <button\r\n-              className=\"edit-btn\"\r\n-              title=\"Edit Email\"\r\n-              onClick={() => setEditingEmail(true)}\r\n-            >\r\n-              ‚úèÔ∏è\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {(editingName || editingEmail) && (\r\n-          <div className=\"save-section\">\r\n-            <button className=\"save-btn\" onClick={saveUserData}>\r\n-              Save Changes\r\n-            </button>\r\n-            <button\r\n-              className=\"cancel-btn\"\r\n-              onClick={() => {\r\n-                setEditingName(false);\r\n-                setEditingEmail(false);\r\n-                setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-                setTempEmail(userData.email);\r\n-              }}\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n-        )}\r\n-\r\n-        <div className=\"document-uploads\">\r\n-          <h3>Document Uploads</h3>\r\n-          {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n-            <div key={label} className=\"upload-item\">\r\n-              <FileUpload\r\n-                label={label}\r\n-                onFileUploaded={handleFileUploaded}\r\n-                onDelete={handleFileDeleted}\r\n-                documentType={\r\n-                  label === \"528\"\r\n-                    ? \"politicalDeclaration\"\r\n-                    : label === \"928\"\r\n-                    ? \"witnessTestimonies\"\r\n-                    : \"idDocument\"\r\n-                }\r\n-              />\r\n-              {uploadedLabels.includes(label) && (\r\n-                <span className=\"tick\">‚úî</span>\r\n-              )}\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-\r\n-        <div className=\"logout-section\">\r\n-          <button className=\"logout-btn\" onClick={handleLogout}>\r\n-            Logout\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-        <div className=\"main-content\">\r\n-          <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n-          \r\n-          <button \r\n-            className=\"public-view-btn\"\r\n-            onClick={togglePublicView}\r\n-          >\r\n-            {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n-          </button>\r\n-\r\n-          {showPublicView && (\r\n-            <div className=\"public-view-container\">\r\n-              <h3>Users with Completed Documents</h3>\r\n-              {publicViewUsers.length === 0 ? (\r\n-                <p>No users have completed all documents yet</p>\r\n-              ) : (\r\n-                <div className=\"completed-users-list\">\r\n-                  {publicViewUsers.map((user) => (\r\n-                    <div \r\n-                      key={user._id} \r\n-                      className=\"completed-user\"\r\n-                      onClick={() => handleUserClick(user)}\r\n-                    >\r\n-                      {user.fullNames} {user.familyName}\r\n-                      <span className=\"completed-badge\">Completed</span>\r\n-                    </div>\r\n-                  ))}\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {!showPublicView && (\r\n-            <p className=\"instructions\">\r\n-              Click the menu button to upload documents or view public records\r\n-            </p>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {selectedUser && (\r\n-        <SatisfactionPopup \r\n-          user={selectedUser} \r\n-          onClose={closeSatisfactionPopup} \r\n-        />\r\n-      )}\r\n-    </>\r\n-  );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753446205612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,12 @@\n   };\r\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n-      <label className=\"custum-file-upload\" style={{ opacity: isUploading ? 0.7 : 1 }}>\r\n+      <label\r\n+        className=\"custum-file-upload\"\r\n+        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n+      >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n           ) : (\r\n@@ -98,22 +101,26 @@\n         </div>\r\n         <div className=\"text\">\r\n           <span>{label}</span>\r\n         </div>\r\n-        <input \r\n-          type=\"file\" \r\n-          onChange={handleFileChange} \r\n+        <input\r\n+          type=\"file\"\r\n+          onChange={handleFileChange}\r\n           disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n         />\r\n       </label>\r\n-      <button \r\n-        className=\"delete-btn\" \r\n-        onClick={handleDeleteClick} \r\n+      <button\r\n+        className=\"delete-btn\"\r\n+        onClick={handleDeleteClick}\r\n         title={`Delete ${label}`}\r\n         disabled={isDeleting}\r\n       >\r\n-        {isDeleting ? <div className=\"loading-spinner-small\"></div> : \"üóëÔ∏è Delete\"}\r\n+        {isDeleting ? (\r\n+          <div className=\"loading-spinner-small\"></div>\r\n+        ) : (\r\n+          \"üóëÔ∏è Delete\"\r\n+        )}\r\n       </button>\r\n     </div>\r\n   );\r\n }\r\n@@ -124,47 +131,77 @@\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-        \r\n+\r\n         <div className=\"certificate-header\">\r\n-          <div className=\"certificate-seal\">‚úß</div>\r\n-          <h2>Certificate of Completion</h2>\r\n-          <div className=\"certificate-seal\">‚úß</div>\r\n+          <h2>Affidavit of My Status</h2>\r\n         </div>\r\n-        \r\n+\r\n         <div className=\"certificate-body\">\r\n-          <p className=\"certificate-issued\">This certifies that</p>\r\n-          \r\n-          <h3 className=\"certificate-name\">\r\n-            {user.fullNames} {user.familyName}\r\n-          </h3>\r\n-          \r\n-          <p className=\"certificate-text\">\r\n-            has successfully completed all required documentation and fulfilled\r\n-            the necessary requirements for sovereign status recognition.\r\n-          </p>\r\n-          \r\n-          <div className=\"certificate-details\">\r\n-            <div className=\"certificate-detail\">\r\n-              <span className=\"detail-label\">Date Completed:</span>\r\n-              <span className=\"detail-value\">{new Date().toLocaleDateString()}</span>\r\n-            </div>\r\n-            <div className=\"certificate-detail\">\r\n-              <span className=\"detail-label\">Document Type:</span>\r\n-              <span className=\"detail-value\">528/928 Package</span>\r\n-            </div>\r\n+          <div className=\"affidavit-statement\">\r\n+            <p>\r\n+              I, a living soul being of sound mind, competent and over the age\r\n+              of maturity, hereby affirm the following testimony is true. I have\r\n+              completed the fullness of the sovereign walk.\r\n+            </p>\r\n           </div>\r\n-          \r\n-          <div className=\"certificate-signatures\">\r\n+\r\n+          <div className=\"completed-documents-section\">\r\n+            <h3>Completed Documents:</h3>\r\n+\r\n+            {user.documentRequirements?.politicalDeclaration && (\r\n+              <div className=\"document-group\">\r\n+                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                <ul>\r\n+                  <li>Political Declaration Document</li>\r\n+                  {user.documentRequirements.idDocumentFile && (\r\n+                    <li>\r\n+                      ID Document:{\" \"}\r\n+                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                    </li>\r\n+                  )}\r\n+                  {user.documentRequirements.photoWithWhiteBg && (\r\n+                    <li>Photo with White Background</li>\r\n+                  )}\r\n+                  {user.documentRequirements.redThumbprint && (\r\n+                    <li>Thumbprint (red ink)</li>\r\n+                  )}\r\n+                  {user.documentRequirements.utilityBill && (\r\n+                    <li>Utility Bill</li>\r\n+                  )}\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+\r\n+            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+              <div className=\"document-group\">\r\n+                <h4>\r\n+                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                </h4>\r\n+                <ul>\r\n+                  <li>Act of Expatriation</li>\r\n+                  <li>Certificate of Assumed Name</li>\r\n+                  <li>Notice of Transfer of Reserved Name</li>\r\n+                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                  <li>Paramount Claim of Life</li>\r\n+                  <li>Mandatory Notice</li>\r\n+                  <li>Common Carry Declaration Weapon</li>\r\n+                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                  <li>Baby Deed Affidavit Testimony</li>\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n-            <p>Authorized Signature</p>\r\n+            <p>\r\n+              {user.fullNames} {user.familyName}\r\n+            </p>\r\n+            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n           </div>\r\n         </div>\r\n-        \r\n-        <div className=\"certificate-footer\">\r\n-          <p>This certificate is issued under the authority of the Sovereign Records Office</p>\r\n-        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n@@ -184,9 +221,9 @@\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n   const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n   const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem('showPublicView') === 'true'\r\n+    localStorage.getItem(\"showPublicView\") === \"true\"\r\n   );\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n@@ -237,13 +274,16 @@\n   const fetchPublicViewUsers = async () => {\r\n     try {\r\n       setLoadingPublicView(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n+      const response = await axios.get(\r\n+        \"http://localhost:5000/api/home/public-view\",\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n       setPublicViewUsers(response.data);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n       alert(\"Failed to load public view users\");\r\n@@ -268,9 +308,9 @@\n \r\n   const togglePublicView = () => {\r\n     const newState = !showPublicView;\r\n     setShowPublicView(newState);\r\n-    localStorage.setItem('showPublicView', newState.toString());\r\n+    localStorage.setItem(\"showPublicView\", newState.toString());\r\n   };\r\n \r\n   const handleFileUploaded = (label) => {\r\n     setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n@@ -334,9 +374,9 @@\n     try {\r\n       setIsUpdatingProfile(true);\r\n       const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n       const familyName = familyNameParts.join(\" \");\r\n-      \r\n+\r\n       if (!familyName) {\r\n         alert(\"Please provide both first and last names\");\r\n         return;\r\n       }\r\n@@ -372,9 +412,9 @@\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem('showPublicView');\r\n+    localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n   const handleUserClick = (user) => {\r\n@@ -489,10 +529,10 @@\n             </div>\r\n \r\n             {(editingName || editingEmail) && (\r\n               <div className=\"save-section\">\r\n-                <button \r\n-                  className=\"save-btn\" \r\n+                <button\r\n+                  className=\"save-btn\"\r\n                   onClick={saveUserData}\r\n                   disabled={isUpdatingProfile}\r\n                 >\r\n                   {isUpdatingProfile ? (\r\n@@ -539,17 +579,24 @@\n               ))}\r\n             </div>\r\n \r\n             {uploadedLabels.length === 3 && (\r\n-              <div className=\"certificate-preview\" onClick={() => handleUserClick(userData)}>\r\n+              <div\r\n+                className=\"certificate-preview\"\r\n+                onClick={() => handleUserClick(userData)}\r\n+              >\r\n                 <h4>Your Completion Certificate</h4>\r\n                 <div className=\"certificate-thumbnail\">\r\n                   <div className=\"certificate-thumbnail-content\">\r\n                     <p>Certificate of Completion</p>\r\n-                    <p>{userData.fullNames} {userData.familyName}</p>\r\n+                    <p>\r\n+                      {userData.fullNames} {userData.familyName}\r\n+                    </p>\r\n                   </div>\r\n                 </div>\r\n-                <p className=\"view-certificate-text\">Click to view full certificate</p>\r\n+                <p className=\"view-certificate-text\">\r\n+                  Click to view full certificate\r\n+                </p>\r\n               </div>\r\n             )}\r\n \r\n             <div className=\"logout-section\">\r\n@@ -569,14 +616,13 @@\n               <p>Loading your data...</p>\r\n             </div>\r\n           ) : (\r\n             <>\r\n-              <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n-              \r\n-              <button \r\n-                className=\"public-view-btn\"\r\n-                onClick={togglePublicView}\r\n-              >\r\n+              <h2>\r\n+                Welcome, {userData.fullNames} {userData.familyName}\r\n+              </h2>\r\n+\r\n+              <button className=\"public-view-btn\" onClick={togglePublicView}>\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n               {showPublicView && (\r\n@@ -591,26 +637,28 @@\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n                     <div className=\"completed-users-list\">\r\n                       {publicViewUsers.map((user) => (\r\n-                        <div \r\n-                          key={user._id} \r\n+                        <div\r\n+                          key={user._id}\r\n                           className=\"completed-user\"\r\n                           onClick={() => handleUserClick(user)}\r\n                         >\r\n                           <div className=\"user-info\">\r\n                             {user.profileImage && (\r\n-                              <img \r\n-                                src={`http://localhost:5000${user.profileImage}`} \r\n-                                alt=\"Profile\" \r\n+                              <img\r\n+                                src={`http://localhost:5000${user.profileImage}`}\r\n+                                alt=\"Profile\"\r\n                                 className=\"user-avatar\"\r\n                               />\r\n                             )}\r\n                             <span>\r\n                               {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">View Certificate</span>\r\n+                          <span className=\"completed-badge\">\r\n+                            View Certificate\r\n+                          </span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n                   )}\r\n@@ -619,24 +667,26 @@\n \r\n               {!showPublicView && (\r\n                 <div className=\"dashboard-info\">\r\n                   <p className=\"instructions\">\r\n-                    Click the menu button to upload documents or view public records\r\n+                    Click the menu button to upload documents or view public\r\n+                    records\r\n                   </p>\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n-                      <div \r\n+                      <div\r\n                         className=\"progress-fill\"\r\n                         style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n                     {uploadedLabels.length === 3 && (\r\n                       <p className=\"completion-message\">\r\n-                        Congratulations! You've completed all required documents.\r\n+                        Congratulations! You've completed all required\r\n+                        documents.\r\n                       </p>\r\n                     )}\r\n                   </div>\r\n                 </div>\r\n@@ -646,12 +696,12 @@\n         </div>\r\n       </div>\r\n \r\n       {selectedUser && (\r\n-        <SatisfactionCertificate \r\n-          user={selectedUser} \r\n-          onClose={closeCertificate} \r\n+        <SatisfactionCertificate\r\n+          user={selectedUser}\r\n+          onClose={closeCertificate}\r\n         />\r\n       )}\r\n\\ No newline at end of file\n     </>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1753453074778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -703,5 +703,5 @@\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1753453171404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,12 +70,9 @@\n   };\r\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n-      <label\r\n-        className=\"custum-file-upload\"\r\n-        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n-      >\r\n+      <label className=\"custum-file-upload\" style={{ opacity: isUploading ? 0.7 : 1 }}>\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n           ) : (\r\n@@ -101,26 +98,22 @@\n         </div>\r\n         <div className=\"text\">\r\n           <span>{label}</span>\r\n         </div>\r\n-        <input\r\n-          type=\"file\"\r\n-          onChange={handleFileChange}\r\n+        <input \r\n+          type=\"file\" \r\n+          onChange={handleFileChange} \r\n           disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n         />\r\n       </label>\r\n-      <button\r\n-        className=\"delete-btn\"\r\n-        onClick={handleDeleteClick}\r\n+      <button \r\n+        className=\"delete-btn\" \r\n+        onClick={handleDeleteClick} \r\n         title={`Delete ${label}`}\r\n         disabled={isDeleting}\r\n       >\r\n-        {isDeleting ? (\r\n-          <div className=\"loading-spinner-small\"></div>\r\n-        ) : (\r\n-          \"üóëÔ∏è Delete\"\r\n-        )}\r\n+        {isDeleting ? <div className=\"loading-spinner-small\"></div> : \"üóëÔ∏è Delete\"}\r\n       </button>\r\n     </div>\r\n   );\r\n }\r\n@@ -131,77 +124,47 @@\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-\r\n+        \r\n         <div className=\"certificate-header\">\r\n-          <h2>Affidavit of My Status</h2>\r\n+          <div className=\"certificate-seal\">‚úß</div>\r\n+          <h2>Certificate of Completion</h2>\r\n+          <div className=\"certificate-seal\">‚úß</div>\r\n         </div>\r\n-\r\n+        \r\n         <div className=\"certificate-body\">\r\n-          <div className=\"affidavit-statement\">\r\n-            <p>\r\n-              I, a living soul being of sound mind, competent and over the age\r\n-              of maturity, hereby affirm the following testimony is true. I have\r\n-              completed the fullness of the sovereign walk.\r\n-            </p>\r\n+          <p className=\"certificate-issued\">This certifies that</p>\r\n+          \r\n+          <h3 className=\"certificate-name\">\r\n+            {user.fullNames} {user.familyName}\r\n+          </h3>\r\n+          \r\n+          <p className=\"certificate-text\">\r\n+            has successfully completed all required documentation and fulfilled\r\n+            the necessary requirements for sovereign status recognition.\r\n+          </p>\r\n+          \r\n+          <div className=\"certificate-details\">\r\n+            <div className=\"certificate-detail\">\r\n+              <span className=\"detail-label\">Date Completed:</span>\r\n+              <span className=\"detail-value\">{new Date().toLocaleDateString()}</span>\r\n+            </div>\r\n+            <div className=\"certificate-detail\">\r\n+              <span className=\"detail-label\">Document Type:</span>\r\n+              <span className=\"detail-value\">528/928 Package</span>\r\n+            </div>\r\n           </div>\r\n-\r\n-          <div className=\"completed-documents-section\">\r\n-            <h3>Completed Documents:</h3>\r\n-\r\n-            {user.documentRequirements?.politicalDeclaration && (\r\n-              <div className=\"document-group\">\r\n-                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <ul>\r\n-                  <li>Political Declaration Document</li>\r\n-                  {user.documentRequirements.idDocumentFile && (\r\n-                    <li>\r\n-                      ID Document:{\" \"}\r\n-                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                    </li>\r\n-                  )}\r\n-                  {user.documentRequirements.photoWithWhiteBg && (\r\n-                    <li>Photo with White Background</li>\r\n-                  )}\r\n-                  {user.documentRequirements.redThumbprint && (\r\n-                    <li>Thumbprint (red ink)</li>\r\n-                  )}\r\n-                  {user.documentRequirements.utilityBill && (\r\n-                    <li>Utility Bill</li>\r\n-                  )}\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-\r\n-            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-              <div className=\"document-group\">\r\n-                <h4>\r\n-                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                </h4>\r\n-                <ul>\r\n-                  <li>Act of Expatriation</li>\r\n-                  <li>Certificate of Assumed Name</li>\r\n-                  <li>Notice of Transfer of Reserved Name</li>\r\n-                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                  <li>Paramount Claim of Life</li>\r\n-                  <li>Mandatory Notice</li>\r\n-                  <li>Common Carry Declaration Weapon</li>\r\n-                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                  <li>Baby Deed Affidavit Testimony</li>\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"signature-section\">\r\n+          \r\n+          <div className=\"certificate-signatures\">\r\n             <div className=\"signature-line\"></div>\r\n-            <p>\r\n-              {user.fullNames} {user.familyName}\r\n-            </p>\r\n-            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+            <p>Authorized Signature</p>\r\n           </div>\r\n         </div>\r\n+        \r\n+        <div className=\"certificate-footer\">\r\n+          <p>This certificate is issued under the authority of the Sovereign Records Office</p>\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n@@ -221,9 +184,9 @@\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n   const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n   const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem(\"showPublicView\") === \"true\"\r\n+    localStorage.getItem('showPublicView') === 'true'\r\n   );\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n@@ -274,16 +237,13 @@\n   const fetchPublicViewUsers = async () => {\r\n     try {\r\n       setLoadingPublicView(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\r\n-        \"http://localhost:5000/api/home/public-view\",\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n+      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n       setPublicViewUsers(response.data);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n       alert(\"Failed to load public view users\");\r\n@@ -308,9 +268,9 @@\n \r\n   const togglePublicView = () => {\r\n     const newState = !showPublicView;\r\n     setShowPublicView(newState);\r\n-    localStorage.setItem(\"showPublicView\", newState.toString());\r\n+    localStorage.setItem('showPublicView', newState.toString());\r\n   };\r\n \r\n   const handleFileUploaded = (label) => {\r\n     setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n@@ -374,9 +334,9 @@\n     try {\r\n       setIsUpdatingProfile(true);\r\n       const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n       const familyName = familyNameParts.join(\" \");\r\n-\r\n+      \r\n       if (!familyName) {\r\n         alert(\"Please provide both first and last names\");\r\n         return;\r\n       }\r\n@@ -412,9 +372,9 @@\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem(\"showPublicView\");\r\n+    localStorage.removeItem('showPublicView');\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n   const handleUserClick = (user) => {\r\n@@ -529,10 +489,10 @@\n             </div>\r\n \r\n             {(editingName || editingEmail) && (\r\n               <div className=\"save-section\">\r\n-                <button\r\n-                  className=\"save-btn\"\r\n+                <button \r\n+                  className=\"save-btn\" \r\n                   onClick={saveUserData}\r\n                   disabled={isUpdatingProfile}\r\n                 >\r\n                   {isUpdatingProfile ? (\r\n@@ -579,24 +539,17 @@\n               ))}\r\n             </div>\r\n \r\n             {uploadedLabels.length === 3 && (\r\n-              <div\r\n-                className=\"certificate-preview\"\r\n-                onClick={() => handleUserClick(userData)}\r\n-              >\r\n+              <div className=\"certificate-preview\" onClick={() => handleUserClick(userData)}>\r\n                 <h4>Your Completion Certificate</h4>\r\n                 <div className=\"certificate-thumbnail\">\r\n                   <div className=\"certificate-thumbnail-content\">\r\n                     <p>Certificate of Completion</p>\r\n-                    <p>\r\n-                      {userData.fullNames} {userData.familyName}\r\n-                    </p>\r\n+                    <p>{userData.fullNames} {userData.familyName}</p>\r\n                   </div>\r\n                 </div>\r\n-                <p className=\"view-certificate-text\">\r\n-                  Click to view full certificate\r\n-                </p>\r\n+                <p className=\"view-certificate-text\">Click to view full certificate</p>\r\n               </div>\r\n             )}\r\n \r\n             <div className=\"logout-section\">\r\n@@ -616,13 +569,14 @@\n               <p>Loading your data...</p>\r\n             </div>\r\n           ) : (\r\n             <>\r\n-              <h2>\r\n-                Welcome, {userData.fullNames} {userData.familyName}\r\n-              </h2>\r\n-\r\n-              <button className=\"public-view-btn\" onClick={togglePublicView}>\r\n+              <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n+              \r\n+              <button \r\n+                className=\"public-view-btn\"\r\n+                onClick={togglePublicView}\r\n+              >\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n               {showPublicView && (\r\n@@ -637,28 +591,26 @@\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n                     <div className=\"completed-users-list\">\r\n                       {publicViewUsers.map((user) => (\r\n-                        <div\r\n-                          key={user._id}\r\n+                        <div \r\n+                          key={user._id} \r\n                           className=\"completed-user\"\r\n                           onClick={() => handleUserClick(user)}\r\n                         >\r\n                           <div className=\"user-info\">\r\n                             {user.profileImage && (\r\n-                              <img\r\n-                                src={`http://localhost:5000${user.profileImage}`}\r\n-                                alt=\"Profile\"\r\n+                              <img \r\n+                                src={`http://localhost:5000${user.profileImage}`} \r\n+                                alt=\"Profile\" \r\n                                 className=\"user-avatar\"\r\n                               />\r\n                             )}\r\n                             <span>\r\n                               {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">\r\n-                            View Certificate\r\n-                          </span>\r\n+                          <span className=\"completed-badge\">View Certificate</span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n                   )}\r\n@@ -667,26 +619,24 @@\n \r\n               {!showPublicView && (\r\n                 <div className=\"dashboard-info\">\r\n                   <p className=\"instructions\">\r\n-                    Click the menu button to upload documents or view public\r\n-                    records\r\n+                    Click the menu button to upload documents or view public records\r\n                   </p>\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n-                      <div\r\n+                      <div \r\n                         className=\"progress-fill\"\r\n                         style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n                     {uploadedLabels.length === 3 && (\r\n                       <p className=\"completion-message\">\r\n-                        Congratulations! You've completed all required\r\n-                        documents.\r\n+                        Congratulations! You've completed all required documents.\r\n                       </p>\r\n                     )}\r\n                   </div>\r\n                 </div>\r\n@@ -696,12 +646,12 @@\n         </div>\r\n       </div>\r\n \r\n       {selectedUser && (\r\n-        <SatisfactionCertificate\r\n-          user={selectedUser}\r\n-          onClose={closeCertificate}\r\n+        <SatisfactionCertificate \r\n+          user={selectedUser} \r\n+          onClose={closeCertificate} \r\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753453812907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,12 @@\n   };\r\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n-      <label className=\"custum-file-upload\" style={{ opacity: isUploading ? 0.7 : 1 }}>\r\n+      <label\r\n+        className=\"custum-file-upload\"\r\n+        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n+      >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n           ) : (\r\n@@ -98,22 +101,26 @@\n         </div>\r\n         <div className=\"text\">\r\n           <span>{label}</span>\r\n         </div>\r\n-        <input \r\n-          type=\"file\" \r\n-          onChange={handleFileChange} \r\n+        <input\r\n+          type=\"file\"\r\n+          onChange={handleFileChange}\r\n           disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n         />\r\n       </label>\r\n-      <button \r\n-        className=\"delete-btn\" \r\n-        onClick={handleDeleteClick} \r\n+      <button\r\n+        className=\"delete-btn\"\r\n+        onClick={handleDeleteClick}\r\n         title={`Delete ${label}`}\r\n         disabled={isDeleting}\r\n       >\r\n-        {isDeleting ? <div className=\"loading-spinner-small\"></div> : \"üóëÔ∏è Delete\"}\r\n+        {isDeleting ? (\r\n+          <div className=\"loading-spinner-small\"></div>\r\n+        ) : (\r\n+          \"üóëÔ∏è Delete\"\r\n+        )}\r\n       </button>\r\n     </div>\r\n   );\r\n }\r\n@@ -124,47 +131,77 @@\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-        \r\n+\r\n         <div className=\"certificate-header\">\r\n-          <div className=\"certificate-seal\">‚úß</div>\r\n-          <h2>Certificate of Completion</h2>\r\n-          <div className=\"certificate-seal\">‚úß</div>\r\n+          <h2>Affidavit of My Status</h2>\r\n         </div>\r\n-        \r\n+\r\n         <div className=\"certificate-body\">\r\n-          <p className=\"certificate-issued\">This certifies that</p>\r\n-          \r\n-          <h3 className=\"certificate-name\">\r\n-            {user.fullNames} {user.familyName}\r\n-          </h3>\r\n-          \r\n-          <p className=\"certificate-text\">\r\n-            has successfully completed all required documentation and fulfilled\r\n-            the necessary requirements for sovereign status recognition.\r\n-          </p>\r\n-          \r\n-          <div className=\"certificate-details\">\r\n-            <div className=\"certificate-detail\">\r\n-              <span className=\"detail-label\">Date Completed:</span>\r\n-              <span className=\"detail-value\">{new Date().toLocaleDateString()}</span>\r\n-            </div>\r\n-            <div className=\"certificate-detail\">\r\n-              <span className=\"detail-label\">Document Type:</span>\r\n-              <span className=\"detail-value\">528/928 Package</span>\r\n-            </div>\r\n+          <div className=\"affidavit-statement\">\r\n+            <p>\r\n+              I, a living soul being of sound mind, competent and over the age\r\n+              of maturity, hereby affirm the following testimony is true. I have\r\n+              completed the fullness of the sovereign walk.\r\n+            </p>\r\n           </div>\r\n-          \r\n-          <div className=\"certificate-signatures\">\r\n+\r\n+          <div className=\"completed-documents-section\">\r\n+            <h3>Completed Documents:</h3>\r\n+\r\n+            {user.documentRequirements?.politicalDeclaration && (\r\n+              <div className=\"document-group\">\r\n+                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                <ul>\r\n+                  <li>Political Declaration Document</li>\r\n+                  {user.documentRequirements.idDocumentFile && (\r\n+                    <li>\r\n+                      ID Document:{\" \"}\r\n+                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                    </li>\r\n+                  )}\r\n+                  {user.documentRequirements.photoWithWhiteBg && (\r\n+                    <li>Photo with White Background</li>\r\n+                  )}\r\n+                  {user.documentRequirements.redThumbprint && (\r\n+                    <li>Thumbprint (red ink)</li>\r\n+                  )}\r\n+                  {user.documentRequirements.utilityBill && (\r\n+                    <li>Utility Bill</li>\r\n+                  )}\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+\r\n+            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+              <div className=\"document-group\">\r\n+                <h4>\r\n+                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                </h4>\r\n+                <ul>\r\n+                  <li>Act of Expatriation</li>\r\n+                  <li>Certificate of Assumed Name</li>\r\n+                  <li>Notice of Transfer of Reserved Name</li>\r\n+                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                  <li>Paramount Claim of Life</li>\r\n+                  <li>Mandatory Notice</li>\r\n+                  <li>Common Carry Declaration Weapon</li>\r\n+                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                  <li>Baby Deed Affidavit Testimony</li>\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n-            <p>Authorized Signature</p>\r\n+            <p>\r\n+              {user.fullNames} {user.familyName}\r\n+            </p>\r\n+            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n           </div>\r\n         </div>\r\n-        \r\n-        <div className=\"certificate-footer\">\r\n-          <p>This certificate is issued under the authority of the Sovereign Records Office</p>\r\n-        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n@@ -184,9 +221,9 @@\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n   const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n   const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem('showPublicView') === 'true'\r\n+    localStorage.getItem(\"showPublicView\") === \"true\"\r\n   );\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n@@ -237,13 +274,16 @@\n   const fetchPublicViewUsers = async () => {\r\n     try {\r\n       setLoadingPublicView(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\"http://localhost:5000/api/home/public-view\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n+      const response = await axios.get(\r\n+        \"http://localhost:5000/api/home/public-view\",\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n       setPublicViewUsers(response.data);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n       alert(\"Failed to load public view users\");\r\n@@ -268,9 +308,9 @@\n \r\n   const togglePublicView = () => {\r\n     const newState = !showPublicView;\r\n     setShowPublicView(newState);\r\n-    localStorage.setItem('showPublicView', newState.toString());\r\n+    localStorage.setItem(\"showPublicView\", newState.toString());\r\n   };\r\n \r\n   const handleFileUploaded = (label) => {\r\n     setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n@@ -334,9 +374,9 @@\n     try {\r\n       setIsUpdatingProfile(true);\r\n       const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n       const familyName = familyNameParts.join(\" \");\r\n-      \r\n+\r\n       if (!familyName) {\r\n         alert(\"Please provide both first and last names\");\r\n         return;\r\n       }\r\n@@ -372,9 +412,9 @@\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem('showPublicView');\r\n+    localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n   const handleUserClick = (user) => {\r\n@@ -489,10 +529,10 @@\n             </div>\r\n \r\n             {(editingName || editingEmail) && (\r\n               <div className=\"save-section\">\r\n-                <button \r\n-                  className=\"save-btn\" \r\n+                <button\r\n+                  className=\"save-btn\"\r\n                   onClick={saveUserData}\r\n                   disabled={isUpdatingProfile}\r\n                 >\r\n                   {isUpdatingProfile ? (\r\n@@ -539,17 +579,24 @@\n               ))}\r\n             </div>\r\n \r\n             {uploadedLabels.length === 3 && (\r\n-              <div className=\"certificate-preview\" onClick={() => handleUserClick(userData)}>\r\n+              <div\r\n+                className=\"certificate-preview\"\r\n+                onClick={() => handleUserClick(userData)}\r\n+              >\r\n                 <h4>Your Completion Certificate</h4>\r\n                 <div className=\"certificate-thumbnail\">\r\n                   <div className=\"certificate-thumbnail-content\">\r\n                     <p>Certificate of Completion</p>\r\n-                    <p>{userData.fullNames} {userData.familyName}</p>\r\n+                    <p>\r\n+                      {userData.fullNames} {userData.familyName}\r\n+                    </p>\r\n                   </div>\r\n                 </div>\r\n-                <p className=\"view-certificate-text\">Click to view full certificate</p>\r\n+                <p className=\"view-certificate-text\">\r\n+                  Click to view full certificate\r\n+                </p>\r\n               </div>\r\n             )}\r\n \r\n             <div className=\"logout-section\">\r\n@@ -569,14 +616,13 @@\n               <p>Loading your data...</p>\r\n             </div>\r\n           ) : (\r\n             <>\r\n-              <h2>Welcome, {userData.fullNames} {userData.familyName}</h2>\r\n-              \r\n-              <button \r\n-                className=\"public-view-btn\"\r\n-                onClick={togglePublicView}\r\n-              >\r\n+              <h2>\r\n+                Welcome, {userData.fullNames} {userData.familyName}\r\n+              </h2>\r\n+\r\n+              <button className=\"public-view-btn\" onClick={togglePublicView}>\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n               {showPublicView && (\r\n@@ -591,26 +637,28 @@\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n                     <div className=\"completed-users-list\">\r\n                       {publicViewUsers.map((user) => (\r\n-                        <div \r\n-                          key={user._id} \r\n+                        <div\r\n+                          key={user._id}\r\n                           className=\"completed-user\"\r\n                           onClick={() => handleUserClick(user)}\r\n                         >\r\n                           <div className=\"user-info\">\r\n                             {user.profileImage && (\r\n-                              <img \r\n-                                src={`http://localhost:5000${user.profileImage}`} \r\n-                                alt=\"Profile\" \r\n+                              <img\r\n+                                src={`http://localhost:5000${user.profileImage}`}\r\n+                                alt=\"Profile\"\r\n                                 className=\"user-avatar\"\r\n                               />\r\n                             )}\r\n                             <span>\r\n                               {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">View Certificate</span>\r\n+                          <span className=\"completed-badge\">\r\n+                            View Certificate\r\n+                          </span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n                   )}\r\n@@ -619,24 +667,26 @@\n \r\n               {!showPublicView && (\r\n                 <div className=\"dashboard-info\">\r\n                   <p className=\"instructions\">\r\n-                    Click the menu button to upload documents or view public records\r\n+                    Click the menu button to upload documents or view public\r\n+                    records\r\n                   </p>\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n-                      <div \r\n+                      <div\r\n                         className=\"progress-fill\"\r\n                         style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n                     {uploadedLabels.length === 3 && (\r\n                       <p className=\"completion-message\">\r\n-                        Congratulations! You've completed all required documents.\r\n+                        Congratulations! You've completed all required\r\n+                        documents.\r\n                       </p>\r\n                     )}\r\n                   </div>\r\n                 </div>\r\n@@ -646,11 +696,11 @@\n         </div>\r\n       </div>\r\n \r\n       {selectedUser && (\r\n-        <SatisfactionCertificate \r\n-          user={selectedUser} \r\n-          onClose={closeCertificate} \r\n+        <SatisfactionCertificate\r\n+          user={selectedUser}\r\n+          onClose={closeCertificate}\r\n         />\r\n       )}\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1753459647252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,20 +4,27 @@\n \r\n function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n+  const fileInputRef = useRef(null);\r\n \r\n-  const handleFileChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n+  const handleFolderUpload = (e) => {\r\n+    const files = Array.from(e.target.files);\r\n+    if (files.length === 0) return;\r\n \r\n-    if (file.size > 5 * 1024 * 1024) {\r\n-      alert(\"File size too large (max 5MB)\");\r\n+    // Check total size\r\n+    const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n+    if (totalSize > 50 * 1024 * 1024) {\r\n+      alert(\"Total folder size too large (max 50MB)\");\r\n       return;\r\n     }\r\n \r\n+    handleUpload(files);\r\n+  };\r\n+\r\n+  const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-    formData.append(\"file\", file);\r\n+    files.forEach((file) => formData.append(\"files\", file));\r\n     formData.append(\"label\", label);\r\n     formData.append(\"documentType\", documentType);\r\n \r\n     try {\r\n@@ -33,15 +40,18 @@\n           },\r\n         }\r\n       );\r\n \r\n-      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n+      alert(\r\n+        `‚úÖ ${files.length} files uploaded for ${label}: ${response.data.message}`\r\n+      );\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n     } finally {\r\n       setIsUploading(false);\r\n+      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n     }\r\n   };\r\n \r\n   const handleDeleteClick = async () => {\r\n@@ -103,11 +113,15 @@\n           <span>{label}</span>\r\n         </div>\r\n         <input\r\n           type=\"file\"\r\n-          onChange={handleFileChange}\r\n+          ref={fileInputRef}\r\n+          onChange={handleFolderUpload}\r\n           disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n+          multiple\r\n+          webkitdirectory=\"true\" // For folder upload in Chrome\r\n+          directory=\"true\" // For folder upload in Firefox\r\n         />\r\n       </label>\r\n       <button\r\n         className=\"delete-btn\"\r\n@@ -703,5 +717,5 @@\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1753463093423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,28 +258,47 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n+      // Ensure all required fields are set, even if null\r\n+      const userData = {\r\n+        fullNames: response.data.user.fullNames || \"Unknown\",\r\n+        familyName: response.data.user.familyName || \"\",\r\n+        email: response.data.user.email || \"No email\",\r\n+        profileImage: response.data.user.profileImage || null,\r\n+        documentRequirements: response.data.user.documentRequirements || {},\r\n+      };\r\n \r\n+      setUserData(userData);\r\n+      setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+      setTempEmail(userData.email);\r\n+\r\n+      // Update uploaded labels based on documents\r\n       const uploaded = [];\r\n-      if (response.data.documentRequirements) {\r\n-        if (response.data.documentRequirements.politicalDeclaration)\r\n+      if (userData.documentRequirements) {\r\n+        if (userData.documentRequirements.politicalDeclaration)\r\n           uploaded.push(\"528\");\r\n-        if (\r\n-          response.data.documentRequirements.witnessTestimonies &&\r\n-          response.data.documentRequirements.witnessTestimonies.length > 0\r\n-        )\r\n+        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n           uploaded.push(\"928\");\r\n-        if (response.data.documentRequirements.idDocumentFile)\r\n+        if (userData.documentRequirements.idDocumentFile)\r\n           uploaded.push(\"Praecipe\");\r\n       }\r\n       setUploadedLabels(uploaded);\r\n+\r\n+      // Store basic user data in localStorage for immediate display\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames: userData.fullNames,\r\n+          familyName: userData.familyName,\r\n+          email: userData.email,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n       localStorage.removeItem(\"token\");\r\n+      localStorage.removeItem(\"userData\");\r\n       window.location.href = \"/login\";\r\n     } finally {\r\n       setLoadingUserData(false);\r\n     }\r\n"
                },
                {
                    "date": 1753463203540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -354,50 +354,60 @@\n     setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n     fetchUserData();\r\n   };\r\n \r\n-  const handleProfileImageChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n+ const handleProfileImageChange = async (e) => {\r\n+  const file = e.target.files[0];\r\n+  if (!file) return;\r\n \r\n-    if (file.size > 2 * 1024 * 1024) {\r\n-      alert(\"Profile image too large (max 2MB)\");\r\n-      return;\r\n-    }\r\n+  if (file.size > 2 * 1024 * 1024) {\r\n+    alert(\"Profile image too large (max 2MB)\");\r\n+    return;\r\n+  }\r\n \r\n-    if (!file.type.match(/image.*/)) {\r\n-      alert(\"Only image files are allowed for profile pictures\");\r\n-      return;\r\n-    }\r\n+  if (!file.type.match(/image.*/)) {\r\n+    alert(\"Only image files are allowed for profile pictures\");\r\n+    return;\r\n+  }\r\n \r\n-    try {\r\n-      const formData = new FormData();\r\n-      formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n+  try {\r\n+    const formData = new FormData();\r\n+    formData.append(\"file\", file);\r\n+    formData.append(\"type\", \"profileImage\");\r\n \r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n+    const token = localStorage.getItem(\"token\");\r\n+    const response = await axios.post(\r\n+      \"http://localhost:5000/api/home/upload\",\r\n+      formData,\r\n+      {\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      }\r\n+    );\r\n \r\n-      setUserData((prev) => ({\r\n-        ...prev,\r\n-        profileImage: response.data.filePath,\r\n-      }));\r\n-      alert(\"Profile image updated successfully!\");\r\n-      fetchUserData();\r\n-    } catch (error) {\r\n-      console.error(\"Error uploading profile image:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n-    }\r\n-  };\r\n+    // Update both state and localStorage\r\n+    const updatedUserData = {\r\n+      ...userData,\r\n+      profileImage: response.data.filePath\r\n+    };\r\n+    \r\n+    setUserData(updatedUserData);\r\n+    localStorage.setItem(\"userData\", JSON.stringify({\r\n+      fullNames: updatedUserData.fullNames,\r\n+      familyName: updatedUserData.familyName,\r\n+      email: updatedUserData.email,\r\n+      profileImage: updatedUserData.profileImage\r\n+    }));\r\n+    \r\n+    alert(\"Profile image updated successfully!\");\r\n+    fetchUserData(); // Refresh all user data\r\n+  } catch (error) {\r\n+    console.error(\"Error uploading profile image:\", error);\r\n+    alert(\"Failed to upload profile image\");\r\n+  }\r\n+};\r\n \r\n   const saveUserData = async () => {\r\n     if (!tempName.trim() || !tempEmail.trim()) {\r\n       alert(\"Name and email cannot be empty\");\r\n"
                },
                {
                    "date": 1753463253416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -354,61 +354,64 @@\n     setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n     fetchUserData();\r\n   };\r\n \r\n- const handleProfileImageChange = async (e) => {\r\n-  const file = e.target.files[0];\r\n-  if (!file) return;\r\n+  const handleProfileImageChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n \r\n-  if (file.size > 2 * 1024 * 1024) {\r\n-    alert(\"Profile image too large (max 2MB)\");\r\n-    return;\r\n-  }\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      alert(\"Profile image too large (max 2MB)\");\r\n+      return;\r\n+    }\r\n \r\n-  if (!file.type.match(/image.*/)) {\r\n-    alert(\"Only image files are allowed for profile pictures\");\r\n-    return;\r\n-  }\r\n+    if (!file.type.match(/image.*/)) {\r\n+      alert(\"Only image files are allowed for profile pictures\");\r\n+      return;\r\n+    }\r\n \r\n-  try {\r\n-    const formData = new FormData();\r\n-    formData.append(\"file\", file);\r\n-    formData.append(\"type\", \"profileImage\");\r\n+    try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"file\", file);\r\n+      formData.append(\"type\", \"profileImage\");\r\n \r\n-    const token = localStorage.getItem(\"token\");\r\n-    const response = await axios.post(\r\n-      \"http://localhost:5000/api/home/upload\",\r\n-      formData,\r\n-      {\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      }\r\n-    );\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n \r\n-    // Update both state and localStorage\r\n-    const updatedUserData = {\r\n-      ...userData,\r\n-      profileImage: response.data.filePath\r\n-    };\r\n-    \r\n-    setUserData(updatedUserData);\r\n-    localStorage.setItem(\"userData\", JSON.stringify({\r\n-      fullNames: updatedUserData.fullNames,\r\n-      familyName: updatedUserData.familyName,\r\n-      email: updatedUserData.email,\r\n-      profileImage: updatedUserData.profileImage\r\n-    }));\r\n-    \r\n-    alert(\"Profile image updated successfully!\");\r\n-    fetchUserData(); // Refresh all user data\r\n-  } catch (error) {\r\n-    console.error(\"Error uploading profile image:\", error);\r\n-    alert(\"Failed to upload profile image\");\r\n-  }\r\n-};\r\n+      // Update both state and localStorage\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        profileImage: response.data.filePath,\r\n+      };\r\n \r\n+      setUserData(updatedUserData);\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames: updatedUserData.fullNames,\r\n+          familyName: updatedUserData.familyName,\r\n+          email: updatedUserData.email,\r\n+          profileImage: updatedUserData.profileImage,\r\n+        })\r\n+      );\r\n+\r\n+      alert(\"Profile image updated successfully!\");\r\n+      fetchUserData(); // Refresh all user data\r\n+    } catch (error) {\r\n+      console.error(\"Error uploading profile image:\", error);\r\n+      alert(\"Failed to upload profile image\");\r\n+    }\r\n+  };\r\n+\r\n   const saveUserData = async () => {\r\n     if (!tempName.trim() || !tempEmail.trim()) {\r\n       alert(\"Name and email cannot be empty\");\r\n       return;\r\n@@ -481,11 +484,17 @@\n           <img\r\n             src={`http://localhost:5000${userData.profileImage}`}\r\n             alt=\"Profile\"\r\n             className=\"profile-img\"\r\n+            onError={(e) => {\r\n+              e.target.onerror = null;\r\n+              e.target.src = \"default-profile.png\"; // Add a default image fallback\r\n+            }}\r\n           />\r\n         ) : (\r\n-          <div className=\"profile-placeholder\">i</div>\r\n+          <div className=\"profile-placeholder\">\r\n+            {userData.fullNames.charAt(0).toUpperCase()}\r\n+          </div>\r\n         )}\r\n       </div>\r\n \r\n       <input\r\n"
                },
                {
                    "date": 1753463420863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -428,9 +428,10 @@\n       }\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n \r\n-      const response = await axios.put(\r\n+      // Remove the const response assignment since we don't use it\r\n+      await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n           fullNames,\r\n           familyName,\r\n@@ -442,11 +443,30 @@\n           },\r\n         }\r\n       );\r\n \r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n+      // Update both state and localStorage\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        fullNames,\r\n+        familyName,\r\n+        email: tempEmail,\r\n+      };\r\n+\r\n+      setUserData(updatedUserData);\r\n+      setTempName(`${fullNames} ${familyName}`);\r\n+      setTempEmail(tempEmail);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n+\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1753464007677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n           &times;\r\n         </button>\r\n \r\n         <div className=\"certificate-header\">\r\n-          <h2>Affidavit of My Status</h2>\r\n+          <h2>Affidavit Testimony of My Status</h2>\r\n         </div>\r\n \r\n         <div className=\"certificate-body\">\r\n           <div className=\"affidavit-statement\">\r\n"
                },
                {
                    "date": 1753464213022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -358,22 +358,24 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    if (file.size > 2 * 1024 * 1024) {\r\n-      alert(\"Profile image too large (max 2MB)\");\r\n+    // Validate file before upload\r\n+    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n+      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n       return;\r\n     }\r\n \r\n-    if (!file.type.match(/image.*/)) {\r\n-      alert(\"Only image files are allowed for profile pictures\");\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      // 2MB limit\r\n+      alert(\"Image size must be less than 2MB\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n+      formData.append(\"type\", \"profileImage\"); // This is crucial for the backend\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n@@ -385,30 +387,48 @@\n           },\r\n         }\r\n       );\r\n \r\n-      // Update both state and localStorage\r\n-      const updatedUserData = {\r\n-        ...userData,\r\n-        profileImage: response.data.filePath,\r\n-      };\r\n+      if (response.data.success) {\r\n+        // Update both state and localStorage\r\n+        const updatedUser = {\r\n+          ...userData,\r\n+          profileImage: response.data.filePath,\r\n+        };\r\n \r\n-      setUserData(updatedUserData);\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames: updatedUserData.fullNames,\r\n-          familyName: updatedUserData.familyName,\r\n-          email: updatedUserData.email,\r\n-          profileImage: updatedUserData.profileImage,\r\n-        })\r\n-      );\r\n+        setUserData(updatedUser);\r\n \r\n-      alert(\"Profile image updated successfully!\");\r\n-      fetchUserData(); // Refresh all user data\r\n+        localStorage.setItem(\r\n+          \"userData\",\r\n+          JSON.stringify({\r\n+            ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n+            profileImage: response.data.filePath,\r\n+          })\r\n+        );\r\n+\r\n+        alert(\"Profile image updated successfully!\");\r\n+      } else {\r\n+        throw new Error(\r\n+          response.data.message || \"Failed to update profile image\"\r\n+        );\r\n+      }\r\n     } catch (error) {\r\n       console.error(\"Error uploading profile image:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n+\r\n+      // Detailed error message\r\n+      let errorMessage = \"Failed to upload profile image\";\r\n+      if (error.response) {\r\n+        if (error.response.status === 400) {\r\n+          errorMessage =\r\n+            error.response.data?.message || \"Invalid file format or size\";\r\n+        } else if (error.response.status === 413) {\r\n+          errorMessage = \"File too large (max 2MB)\";\r\n+        }\r\n+      } else if (error.message) {\r\n+        errorMessage = error.message;\r\n+      }\r\n+\r\n+      alert(errorMessage);\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n"
                },
                {
                    "date": 1753464219028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,9 +364,9 @@\n       alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n       return;\r\n     }\r\n \r\n-    if (file.size > 2 * 1024 * 1024) {\r\n+    if (file.size > 20 * 1024 * 1024) {\r\n       // 2MB limit\r\n       alert(\"Image size must be less than 2MB\");\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1753464916205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -358,24 +358,22 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    // Validate file before upload\r\n-    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n-      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      alert(\"Profile image too large (max 2MB)\");\r\n       return;\r\n     }\r\n \r\n-    if (file.size > 20 * 1024 * 1024) {\r\n-      // 2MB limit\r\n-      alert(\"Image size must be less than 2MB\");\r\n+    if (!file.type.match(/image.*/)) {\r\n+      alert(\"Only image files are allowed for profile pictures\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\"); // This is crucial for the backend\r\n+      formData.append(\"type\", \"profileImage\");\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n@@ -387,48 +385,30 @@\n           },\r\n         }\r\n       );\r\n \r\n-      if (response.data.success) {\r\n-        // Update both state and localStorage\r\n-        const updatedUser = {\r\n-          ...userData,\r\n-          profileImage: response.data.filePath,\r\n-        };\r\n+      // Update both state and localStorage\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        profileImage: response.data.filePath,\r\n+      };\r\n \r\n-        setUserData(updatedUser);\r\n+      setUserData(updatedUserData);\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames: updatedUserData.fullNames,\r\n+          familyName: updatedUserData.familyName,\r\n+          email: updatedUserData.email,\r\n+          profileImage: updatedUserData.profileImage,\r\n+        })\r\n+      );\r\n \r\n-        localStorage.setItem(\r\n-          \"userData\",\r\n-          JSON.stringify({\r\n-            ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n-            profileImage: response.data.filePath,\r\n-          })\r\n-        );\r\n-\r\n-        alert(\"Profile image updated successfully!\");\r\n-      } else {\r\n-        throw new Error(\r\n-          response.data.message || \"Failed to update profile image\"\r\n-        );\r\n-      }\r\n+      alert(\"Profile image updated successfully!\");\r\n+      fetchUserData(); // Refresh all user data\r\n     } catch (error) {\r\n       console.error(\"Error uploading profile image:\", error);\r\n-\r\n-      // Detailed error message\r\n-      let errorMessage = \"Failed to upload profile image\";\r\n-      if (error.response) {\r\n-        if (error.response.status === 400) {\r\n-          errorMessage =\r\n-            error.response.data?.message || \"Invalid file format or size\";\r\n-        } else if (error.response.status === 413) {\r\n-          errorMessage = \"File too large (max 2MB)\";\r\n-        }\r\n-      } else if (error.message) {\r\n-        errorMessage = error.message;\r\n-      }\r\n-\r\n-      alert(errorMessage);\r\n+      alert(\"Failed to upload profile image\");\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n"
                },
                {
                    "date": 1753464941779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n           &times;\r\n         </button>\r\n \r\n         <div className=\"certificate-header\">\r\n-          <h2>Affidavit Testimony of My Status</h2>\r\n+          <h2>Affidavit of My Status</h2>\r\n         </div>\r\n \r\n         <div className=\"certificate-body\">\r\n           <div className=\"affidavit-statement\">\r\n@@ -428,10 +428,9 @@\n       }\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n \r\n-      // Remove the const response assignment since we don't use it\r\n-      await axios.put(\r\n+      const response = await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n           fullNames,\r\n           familyName,\r\n@@ -443,30 +442,11 @@\n           },\r\n         }\r\n       );\r\n \r\n-      // Update both state and localStorage\r\n-      const updatedUserData = {\r\n-        ...userData,\r\n-        fullNames,\r\n-        familyName,\r\n-        email: tempEmail,\r\n-      };\r\n-\r\n-      setUserData(updatedUserData);\r\n-      setTempName(`${fullNames} ${familyName}`);\r\n-      setTempEmail(tempEmail);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n-\r\n+      setUserData(response.data);\r\n+      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n+      setTempEmail(response.data.email);\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1753465186769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n           &times;\r\n         </button>\r\n \r\n         <div className=\"certificate-header\">\r\n-          <h2>Affidavit of My Status</h2>\r\n+          <h2>Affidavit Testimony of My Status</h2>\r\n         </div>\r\n \r\n         <div className=\"certificate-body\">\r\n           <div className=\"affidavit-statement\">\r\n@@ -428,9 +428,10 @@\n       }\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n \r\n-      const response = await axios.put(\r\n+      // Remove the const response assignment since we don't use it\r\n+      await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n           fullNames,\r\n           familyName,\r\n@@ -442,11 +443,30 @@\n           },\r\n         }\r\n       );\r\n \r\n-      setUserData(response.data);\r\n-      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n-      setTempEmail(response.data.email);\r\n+      // Update both state and localStorage\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        fullNames,\r\n+        familyName,\r\n+        email: tempEmail,\r\n+      };\r\n+\r\n+      setUserData(updatedUserData);\r\n+      setTempName(`${fullNames} ${familyName}`);\r\n+      setTempEmail(tempEmail);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n+\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1753466165768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n   const handleFolderUpload = (e) => {\r\n     const files = Array.from(e.target.files);\r\n     if (files.length === 0) return;\r\n \r\n-    // Check total size\r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n     if (totalSize > 50 * 1024 * 1024) {\r\n       alert(\"Total folder size too large (max 50MB)\");\r\n       return;\r\n@@ -29,22 +28,17 @@\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n+      // Remove the assignment to response since we're not using it\r\n+      await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n \r\n-      alert(\r\n-        `‚úÖ ${files.length} files uploaded for ${label}: ${response.data.message}`\r\n-      );\r\n+      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n@@ -59,18 +53,17 @@\n \r\n     try {\r\n       setIsDeleting(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n+      await axios.post(\r\n         \"http://localhost:5000/api/home/delete-document\",\r\n         { documentType },\r\n         {\r\n           headers: {\r\n             Authorization: `Bearer ${token}`,\r\n           },\r\n         }\r\n       );\r\n-      alert(response.data.message);\r\n       if (onDelete) onDelete(label);\r\n     } catch (error) {\r\n       console.error(\"Delete error:\", error);\r\n       alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n@@ -99,13 +92,13 @@\n               <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n               <path\r\n                 fill=\"#e8e8e8\"\r\n                 d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                   9.11 4 6.6 5.64 5.35 8.04 \r\n-                   2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                   2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                   5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                   12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+                9.11 4 6.6 5.64 5.35 8.04 \r\n+                2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n               />\r\n             </svg>\r\n           )}\r\n         </div>\r\n@@ -118,10 +111,10 @@\n           onChange={handleFolderUpload}\r\n           disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n           multiple\r\n-          webkitdirectory=\"true\" // For folder upload in Chrome\r\n-          directory=\"true\" // For folder upload in Firefox\r\n+          webkitdirectory=\"true\"\r\n+          directory=\"true\"\r\n         />\r\n       </label>\r\n       <button\r\n         className=\"delete-btn\"\r\n@@ -145,25 +138,21 @@\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-\r\n         <div className=\"certificate-header\">\r\n           <h2>Affidavit Testimony of My Status</h2>\r\n         </div>\r\n-\r\n         <div className=\"certificate-body\">\r\n           <div className=\"affidavit-statement\">\r\n             <p>\r\n               I, a living soul being of sound mind, competent and over the age\r\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-\r\n           <div className=\"completed-documents-section\">\r\n             <h3>Completed Documents:</h3>\r\n-\r\n             {user.documentRequirements?.politicalDeclaration && (\r\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n                 <ul>\r\n@@ -185,9 +174,8 @@\n                   )}\r\n                 </ul>\r\n               </div>\r\n             )}\r\n-\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n               <div className=\"document-group\">\r\n                 <h4>\r\n                   928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n@@ -205,9 +193,8 @@\n                 </ul>\r\n               </div>\r\n             )}\r\n           </div>\r\n-\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n               {user.fullNames} {user.familyName}\r\n@@ -258,9 +245,8 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n-      // Ensure all required fields are set, even if null\r\n       const userData = {\r\n         fullNames: response.data.user.fullNames || \"Unknown\",\r\n         familyName: response.data.user.familyName || \"\",\r\n         email: response.data.user.email || \"No email\",\r\n@@ -271,9 +257,8 @@\n       setUserData(userData);\r\n       setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n       setTempEmail(userData.email);\r\n \r\n-      // Update uploaded labels based on documents\r\n       const uploaded = [];\r\n       if (userData.documentRequirements) {\r\n         if (userData.documentRequirements.politicalDeclaration)\r\n           uploaded.push(\"528\");\r\n@@ -283,9 +268,8 @@\n           uploaded.push(\"Praecipe\");\r\n       }\r\n       setUploadedLabels(uploaded);\r\n \r\n-      // Store basic user data in localStorage for immediate display\r\n       localStorage.setItem(\r\n         \"userData\",\r\n         JSON.stringify({\r\n           fullNames: userData.fullNames,\r\n@@ -318,9 +302,8 @@\n       );\r\n       setPublicViewUsers(response.data);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n-      alert(\"Failed to load public view users\");\r\n     } finally {\r\n       setLoadingPublicView(false);\r\n     }\r\n   };\r\n@@ -334,47 +317,33 @@\n       fetchPublicViewUsers();\r\n     }\r\n   }, [showPublicView]);\r\n \r\n-  const toggleSidebar = () => {\r\n-    setSidebarOpen((prev) => !prev);\r\n-  };\r\n-\r\n-  const togglePublicView = () => {\r\n-    const newState = !showPublicView;\r\n-    setShowPublicView(newState);\r\n-    localStorage.setItem(\"showPublicView\", newState.toString());\r\n-  };\r\n-\r\n-  const handleFileUploaded = (label) => {\r\n-    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n-    fetchUserData();\r\n-  };\r\n-\r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n-    fetchUserData();\r\n-  };\r\n-\r\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    if (file.size > 2 * 1024 * 1024) {\r\n-      alert(\"Profile image too large (max 2MB)\");\r\n+    // Validate file\r\n+    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n+      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n       return;\r\n     }\r\n \r\n-    if (!file.type.match(/image.*/)) {\r\n-      alert(\"Only image files are allowed for profile pictures\");\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      alert(\"Image size must be less than 2MB\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n       formData.append(\"type\", \"profileImage\");\r\n \r\n+      console.log(\"FormData contents:\");\r\n+      for (let [key, value] of formData.entries()) {\r\n+        console.log(key, value);\r\n+      }\r\n+\r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n         formData,\r\n@@ -385,30 +354,45 @@\n           },\r\n         }\r\n       );\r\n \r\n-      // Update both state and localStorage\r\n-      const updatedUserData = {\r\n+      console.log(\"Upload response:\", response.data);\r\n+\r\n+      const updatedUser = {\r\n         ...userData,\r\n         profileImage: response.data.filePath,\r\n       };\r\n \r\n-      setUserData(updatedUserData);\r\n+      setUserData(updatedUser);\r\n+\r\n       localStorage.setItem(\r\n         \"userData\",\r\n         JSON.stringify({\r\n-          fullNames: updatedUserData.fullNames,\r\n-          familyName: updatedUserData.familyName,\r\n-          email: updatedUserData.email,\r\n-          profileImage: updatedUserData.profileImage,\r\n+          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n+          profileImage: response.data.filePath,\r\n         })\r\n       );\r\n \r\n       alert(\"Profile image updated successfully!\");\r\n-      fetchUserData(); // Refresh all user data\r\n     } catch (error) {\r\n-      console.error(\"Error uploading profile image:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n+      console.error(\"Upload error details:\", {\r\n+        message: error.message,\r\n+        response: error.response?.data,\r\n+        status: error.response?.status,\r\n+        config: error.config,\r\n+      });\r\n+\r\n+      let errorMessage = \"Failed to upload profile image\";\r\n+      if (error.response) {\r\n+        if (error.response.status === 400) {\r\n+          errorMessage =\r\n+            error.response.data?.message || \"Invalid file format or size\";\r\n+        } else if (error.response.status === 413) {\r\n+          errorMessage = \"File too large (max 2MB)\";\r\n+        }\r\n+      }\r\n+\r\n+      alert(errorMessage);\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n@@ -428,9 +412,8 @@\n       }\r\n \r\n       const token = localStorage.getItem(\"token\");\r\n \r\n-      // Remove the const response assignment since we don't use it\r\n       await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n           fullNames,\r\n@@ -443,9 +426,8 @@\n           },\r\n         }\r\n       );\r\n \r\n-      // Update both state and localStorage\r\n       const updatedUserData = {\r\n         ...userData,\r\n         fullNames,\r\n         familyName,\r\n@@ -482,33 +464,22 @@\n     localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n-  const handleUserClick = (user) => {\r\n-    setSelectedUser(user);\r\n-  };\r\n-\r\n-  const closeCertificate = () => {\r\n-    setSelectedUser(null);\r\n-  };\r\n-\r\n   return (\r\n     <>\r\n       <div\r\n         className=\"sidebar-toggle\"\r\n-        onClick={toggleSidebar}\r\n-        title=\"Show Info / Upload Profile Pic\"\r\n+        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n       >\r\n-        {loadingUserData ? (\r\n-          <div className=\"loading-spinner\"></div>\r\n-        ) : userData.profileImage ? (\r\n+        {userData.profileImage ? (\r\n           <img\r\n             src={`http://localhost:5000${userData.profileImage}`}\r\n             alt=\"Profile\"\r\n             className=\"profile-img\"\r\n             onError={(e) => {\r\n               e.target.onerror = null;\r\n-              e.target.src = \"default-profile.png\"; // Add a default image fallback\r\n+              e.target.src = \"/default-profile.png\";\r\n             }}\r\n           />\r\n         ) : (\r\n           <div className=\"profile-placeholder\">\r\n@@ -525,9 +496,9 @@\n         onChange={handleProfileImageChange}\r\n       />\r\n \r\n       <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n-        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n+        <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n           &larr; Back\r\n         </button>\r\n         <h2>User Info</h2>\r\n \r\n@@ -540,9 +511,8 @@\n           <>\r\n             <div\r\n               className=\"profile-upload\"\r\n               onClick={() => profileInputRef.current?.click()}\r\n-              title=\"Click to upload profile picture\"\r\n             >\r\n               {userData.profileImage ? (\r\n                 <img\r\n                   src={`http://localhost:5000${userData.profileImage}`}\r\n@@ -568,9 +538,8 @@\n               )}\r\n               {!editingName && (\r\n                 <button\r\n                   className=\"edit-btn\"\r\n-                  title=\"Edit Name\"\r\n                   onClick={() => setEditingName(true)}\r\n                 >\r\n                   ‚úèÔ∏è\r\n                 </button>\r\n@@ -591,9 +560,8 @@\n               )}\r\n               {!editingEmail && (\r\n                 <button\r\n                   className=\"edit-btn\"\r\n-                  title=\"Edit Email\"\r\n                   onClick={() => setEditingEmail(true)}\r\n                 >\r\n                   ‚úèÔ∏è\r\n                 </button>\r\n@@ -620,9 +588,8 @@\n                     setEditingEmail(false);\r\n                     setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n                     setTempEmail(userData.email);\r\n                   }}\r\n-                  disabled={isUpdatingProfile}\r\n                 >\r\n                   Cancel\r\n                 </button>\r\n               </div>\r\n@@ -633,10 +600,8 @@\n               {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n                 <div key={label} className=\"upload-item\">\r\n                   <FileUpload\r\n                     label={label}\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n                     documentType={\r\n                       label === \"528\"\r\n                         ? \"politicalDeclaration\"\r\n                         : label === \"928\"\r\n@@ -650,28 +615,8 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n-            {uploadedLabels.length === 3 && (\r\n-              <div\r\n-                className=\"certificate-preview\"\r\n-                onClick={() => handleUserClick(userData)}\r\n-              >\r\n-                <h4>Your Completion Certificate</h4>\r\n-                <div className=\"certificate-thumbnail\">\r\n-                  <div className=\"certificate-thumbnail-content\">\r\n-                    <p>Certificate of Completion</p>\r\n-                    <p>\r\n-                      {userData.fullNames} {userData.familyName}\r\n-                    </p>\r\n-                  </div>\r\n-                </div>\r\n-                <p className=\"view-certificate-text\">\r\n-                  Click to view full certificate\r\n-                </p>\r\n-              </div>\r\n-            )}\r\n-\r\n             <div className=\"logout-section\">\r\n               <button className=\"logout-btn\" onClick={handleLogout}>\r\n                 Logout\r\n               </button>\r\n@@ -692,9 +637,12 @@\n               <h2>\r\n                 Welcome, {userData.fullNames} {userData.familyName}\r\n               </h2>\r\n \r\n-              <button className=\"public-view-btn\" onClick={togglePublicView}>\r\n+              <button\r\n+                className=\"public-view-btn\"\r\n+                onClick={() => setShowPublicView(!showPublicView)}\r\n+              >\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n               {showPublicView && (\r\n@@ -712,9 +660,9 @@\n                       {publicViewUsers.map((user) => (\r\n                         <div\r\n                           key={user._id}\r\n                           className=\"completed-user\"\r\n-                          onClick={() => handleUserClick(user)}\r\n+                          onClick={() => setSelectedUser(user)}\r\n                         >\r\n                           <div className=\"user-info\">\r\n                             {user.profileImage && (\r\n                               <img\r\n@@ -738,12 +686,8 @@\n               )}\r\n \r\n               {!showPublicView && (\r\n                 <div className=\"dashboard-info\">\r\n-                  <p className=\"instructions\">\r\n-                    Click the menu button to upload documents or view public\r\n-                    records\r\n-                  </p>\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n                       <div\r\n@@ -753,14 +697,8 @@\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n-                    {uploadedLabels.length === 3 && (\r\n-                      <p className=\"completion-message\">\r\n-                        Congratulations! You've completed all required\r\n-                        documents.\r\n-                      </p>\r\n-                    )}\r\n                   </div>\r\n                 </div>\r\n               )}\r\n             </>\r\n@@ -770,9 +708,9 @@\n \r\n       {selectedUser && (\r\n         <SatisfactionCertificate\r\n           user={selectedUser}\r\n-          onClose={closeCertificate}\r\n+          onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1753466348031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,35 +652,36 @@\n                     <div className=\"loading-container\">\r\n                       <div className=\"loading-spinner\"></div>\r\n                       <p>Loading public records...</p>\r\n                     </div>\r\n-                  ) : publicViewUsers.length === 0 ? (\r\n+                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n                     <div className=\"completed-users-list\">\r\n-                      {publicViewUsers.map((user) => (\r\n-                        <div\r\n-                          key={user._id}\r\n-                          className=\"completed-user\"\r\n-                          onClick={() => setSelectedUser(user)}\r\n-                        >\r\n-                          <div className=\"user-info\">\r\n-                            {user.profileImage && (\r\n-                              <img\r\n-                                src={`http://localhost:5000${user.profileImage}`}\r\n-                                alt=\"Profile\"\r\n-                                className=\"user-avatar\"\r\n-                              />\r\n-                            )}\r\n-                            <span>\r\n-                              {user.fullNames} {user.familyName}\r\n+                      {Array.isArray(publicViewUsers) &&\r\n+                        publicViewUsers.map((user) => (\r\n+                          <div\r\n+                            key={user._id}\r\n+                            className=\"completed-user\"\r\n+                            onClick={() => setSelectedUser(user)}\r\n+                          >\r\n+                            <div className=\"user-info\">\r\n+                              {user.profileImage && (\r\n+                                <img\r\n+                                  src={`http://localhost:5000${user.profileImage}`}\r\n+                                  alt=\"Profile\"\r\n+                                  className=\"user-avatar\"\r\n+                                />\r\n+                              )}\r\n+                              <span>\r\n+                                {user.fullNames} {user.familyName}\r\n+                              </span>\r\n+                            </div>\r\n+                            <span className=\"completed-badge\">\r\n+                              View Certificate\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">\r\n-                            View Certificate\r\n-                          </span>\r\n-                        </div>\r\n-                      ))}\r\n+                        ))}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n               )}\r\n"
                },
                {
                    "date": 1753469433447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n   const fileInputRef = useRef(null);\r\n \r\n@@ -28,9 +28,8 @@\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      // Remove the assignment to response since we're not using it\r\n       await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n           Authorization: `Bearer ${token}`,\r\n@@ -80,8 +79,10 @@\n       >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n+          ) : isUploaded ? (\r\n+            <div className=\"upload-success\">‚úî</div>\r\n           ) : (\r\n             <svg\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n               fill=\"#000000\"\r\n@@ -108,9 +109,9 @@\n         <input\r\n           type=\"file\"\r\n           ref={fileInputRef}\r\n           onChange={handleFolderUpload}\r\n-          disabled={isUploading}\r\n+          disabled={isUploading || isUploaded}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n           multiple\r\n           webkitdirectory=\"true\"\r\n           directory=\"true\"\r\n@@ -119,9 +120,9 @@\n       <button\r\n         className=\"delete-btn\"\r\n         onClick={handleDeleteClick}\r\n         title={`Delete ${label}`}\r\n-        disabled={isDeleting}\r\n+        disabled={isDeleting || !isUploaded}\r\n       >\r\n         {isDeleting ? (\r\n           <div className=\"loading-spinner-small\"></div>\r\n         ) : (\r\n@@ -132,8 +133,13 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n+  const hasCompletedDocuments = \r\n+    user.documentRequirements?.politicalDeclaration && \r\n+    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    user.documentRequirements?.idDocumentFile;\r\n+\r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n@@ -149,52 +155,54 @@\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-          <div className=\"completed-documents-section\">\r\n-            <h3>Completed Documents:</h3>\r\n-            {user.documentRequirements?.politicalDeclaration && (\r\n-              <div className=\"document-group\">\r\n-                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <ul>\r\n-                  <li>Political Declaration Document</li>\r\n-                  {user.documentRequirements.idDocumentFile && (\r\n-                    <li>\r\n-                      ID Document:{\" \"}\r\n-                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                    </li>\r\n-                  )}\r\n-                  {user.documentRequirements.photoWithWhiteBg && (\r\n-                    <li>Photo with White Background</li>\r\n-                  )}\r\n-                  {user.documentRequirements.redThumbprint && (\r\n-                    <li>Thumbprint (red ink)</li>\r\n-                  )}\r\n-                  {user.documentRequirements.utilityBill && (\r\n-                    <li>Utility Bill</li>\r\n-                  )}\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-              <div className=\"document-group\">\r\n-                <h4>\r\n-                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                </h4>\r\n-                <ul>\r\n-                  <li>Act of Expatriation</li>\r\n-                  <li>Certificate of Assumed Name</li>\r\n-                  <li>Notice of Transfer of Reserved Name</li>\r\n-                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                  <li>Paramount Claim of Life</li>\r\n-                  <li>Mandatory Notice</li>\r\n-                  <li>Common Carry Declaration Weapon</li>\r\n-                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                  <li>Baby Deed Affidavit Testimony</li>\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n+          {hasCompletedDocuments && (\r\n+            <div className=\"completed-documents-section\">\r\n+              <h3>Completed Documents:</h3>\r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <ul>\r\n+                    <li>Political Declaration Document</li>\r\n+                    {user.documentRequirements.idDocumentFile && (\r\n+                      <li>\r\n+                        ID Document:{\" \"}\r\n+                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                      </li>\r\n+                    )}\r\n+                    {user.documentRequirements.photoWithWhiteBg && (\r\n+                      <li>Photo with White Background</li>\r\n+                    )}\r\n+                    {user.documentRequirements.redThumbprint && (\r\n+                      <li>Thumbprint (red ink)</li>\r\n+                    )}\r\n+                    {user.documentRequirements.utilityBill && (\r\n+                      <li>Utility Bill</li>\r\n+                    )}\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>\r\n+                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                  </h4>\r\n+                  <ul>\r\n+                    <li>Act of Expatriation</li>\r\n+                    <li>Certificate of Assumed Name</li>\r\n+                    <li>Notice of Transfer of Reserved Name</li>\r\n+                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                    <li>Paramount Claim of Life</li>\r\n+                    <li>Mandatory Notice</li>\r\n+                    <li>Common Carry Declaration Weapon</li>\r\n+                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                    <li>Baby Deed Affidavit Testimony</li>\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n               {user.fullNames} {user.familyName}\r\n@@ -228,8 +236,9 @@\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n   const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n+  const [showCertificate, setShowCertificate] = useState(false);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n@@ -321,29 +330,13 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    // Validate file\r\n-    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n-      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n-      return;\r\n-    }\r\n-\r\n-    if (file.size > 2 * 1024 * 1024) {\r\n-      alert(\"Image size must be less than 2MB\");\r\n-      return;\r\n-    }\r\n-\r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n       formData.append(\"type\", \"profileImage\");\r\n \r\n-      console.log(\"FormData contents:\");\r\n-      for (let [key, value] of formData.entries()) {\r\n-        console.log(key, value);\r\n-      }\r\n-\r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n         formData,\r\n@@ -354,10 +347,8 @@\n           },\r\n         }\r\n       );\r\n \r\n-      console.log(\"Upload response:\", response.data);\r\n-\r\n       const updatedUser = {\r\n         ...userData,\r\n         profileImage: response.data.filePath,\r\n       };\r\n@@ -373,26 +364,10 @@\n       );\r\n \r\n       alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n-      console.error(\"Upload error details:\", {\r\n-        message: error.message,\r\n-        response: error.response?.data,\r\n-        status: error.response?.status,\r\n-        config: error.config,\r\n-      });\r\n-\r\n-      let errorMessage = \"Failed to upload profile image\";\r\n-      if (error.response) {\r\n-        if (error.response.status === 400) {\r\n-          errorMessage =\r\n-            error.response.data?.message || \"Invalid file format or size\";\r\n-        } else if (error.response.status === 413) {\r\n-          errorMessage = \"File too large (max 2MB)\";\r\n-        }\r\n-      }\r\n-\r\n-      alert(errorMessage);\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n@@ -464,8 +439,25 @@\n     localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n+  const handleFileUploaded = (label) => {\r\n+    if (!uploadedLabels.includes(label)) {\r\n+      setUploadedLabels([...uploadedLabels, label]);\r\n+    }\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const hasCompletedAllDocuments = \r\n+    userData.documentRequirements?.politicalDeclaration && \r\n+    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    userData.documentRequirements?.idDocumentFile;\r\n+\r\n   return (\r\n     <>\r\n       <div\r\n         className=\"sidebar-toggle\"\r\n@@ -511,17 +503,20 @@\n           <>\r\n             <div\r\n               className=\"profile-upload\"\r\n               onClick={() => profileInputRef.current?.click()}\r\n+              title=\"Click to upload profile image\"\r\n             >\r\n               {userData.profileImage ? (\r\n                 <img\r\n                   src={`http://localhost:5000${userData.profileImage}`}\r\n                   alt=\"Profile\"\r\n                   className=\"profile-image\"\r\n                 />\r\n               ) : (\r\n-                <span>Upload Profile Pic</span>\r\n+                <div className=\"profile-upload-placeholder\">\r\n+                  <span>+ Upload Profile Image</span>\r\n+                </div>\r\n               )}\r\n             </div>\r\n \r\n             <div className=\"editable-field\">\r\n@@ -607,16 +602,31 @@\n                         : label === \"928\"\r\n                         ? \"witnessTestimonies\"\r\n                         : \"idDocument\"\r\n                     }\r\n+                    onFileUploaded={handleFileUploaded}\r\n+                    onDelete={handleFileDeleted}\r\n+                    isUploaded={\r\n+                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n+                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n+                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n+                    }\r\n                   />\r\n-                  {uploadedLabels.includes(label) && (\r\n-                    <span className=\"tick\">‚úî</span>\r\n-                  )}\r\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n+            {hasCompletedAllDocuments && (\r\n+              <div className=\"certificate-section\">\r\n+                <button \r\n+                  className=\"view-certificate-btn\"\r\n+                  onClick={() => setShowCertificate(true)}\r\n+                >\r\n+                  View My Certificate\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n             <div className=\"logout-section\">\r\n               <button className=\"logout-btn\" onClick={handleLogout}>\r\n                 Logout\r\n               </button>\r\n@@ -644,9 +654,9 @@\n               >\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n-              {showPublicView && (\r\n+              {showPublicView ? (\r\n                 <div className=\"public-view-container\">\r\n                   <h3>Users with Completed Documents</h3>\r\n                   {loadingPublicView ? (\r\n                     <div className=\"loading-container\">\r\n@@ -683,11 +693,9 @@\n                         ))}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n-              )}\r\n-\r\n-              {!showPublicView && (\r\n+              ) : (\r\n                 <div className=\"dashboard-info\">\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n@@ -697,9 +705,17 @@\n                           width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n-                    <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n+                    <p>\r\n+                      {hasCompletedAllDocuments ? (\r\n+                        <span className=\"completed-text\">\r\n+                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                        </span>\r\n+                      ) : (\r\n+                        `${uploadedLabels.length} of 3 documents uploaded`\r\n+                      )}\r\n+                    </p>\r\n                   </div>\r\n                 </div>\r\n               )}\r\n             </>\r\n@@ -712,7 +728,14 @@\n           user={selectedUser}\r\n           onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n+\r\n+      {showCertificate && (\r\n+        <SatisfactionCertificate\r\n+          user={userData}\r\n+          onClose={() => setShowCertificate(false)}\r\n+        />\r\n+      )}\r\n     </>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753469963143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,16 +73,16 @@\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n       <label\r\n-        className=\"custum-file-upload\"\r\n+        className={`custum-file-upload ${isUploaded ? \"uploaded\" : \"\"}`}\r\n         style={{ opacity: isUploading ? 0.7 : 1 }}\r\n       >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n           ) : isUploaded ? (\r\n-            <div className=\"upload-success\">‚úî</div>\r\n+            <div className=\"upload-success\">‚úì</div>\r\n           ) : (\r\n             <svg\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n               fill=\"#000000\"\r\n@@ -362,9 +362,13 @@\n           profileImage: response.data.filePath,\r\n         })\r\n       );\r\n \r\n-      alert(\"Profile image updated successfully!\");\r\n+      // Force refresh the image by adding a timestamp query parameter\r\n+      setUserData(prev => ({\r\n+        ...prev,\r\n+        profileImage: `${response.data.filePath}?${Date.now()}`\r\n+      }));\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n     }\r\n@@ -510,8 +514,12 @@\n                 <img\r\n                   src={`http://localhost:5000${userData.profileImage}`}\r\n                   alt=\"Profile\"\r\n                   className=\"profile-image\"\r\n+                  onError={(e) => {\r\n+                    e.target.onerror = null;\r\n+                    e.target.src = \"/default-profile.png\";\r\n+                  }}\r\n                 />\r\n               ) : (\r\n                 <div className=\"profile-upload-placeholder\">\r\n                   <span>+ Upload Profile Image</span>\r\n@@ -679,8 +687,12 @@\n                                 <img\r\n                                   src={`http://localhost:5000${user.profileImage}`}\r\n                                   alt=\"Profile\"\r\n                                   className=\"user-avatar\"\r\n+                                  onError={(e) => {\r\n+                                    e.target.onerror = null;\r\n+                                    e.target.src = \"/default-profile.png\";\r\n+                                  }}\r\n                                 />\r\n                               )}\r\n                               <span>\r\n                                 {user.fullNames} {user.familyName}\r\n@@ -708,9 +720,9 @@\n                     </div>\r\n                     <p>\r\n                       {hasCompletedAllDocuments ? (\r\n                         <span className=\"completed-text\">\r\n-                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                          ‚úÖ All 3 documents completed! You can now view your certificate.\r\n                         </span>\r\n                       ) : (\r\n                         `${uploadedLabels.length} of 3 documents uploaded`\r\n                       )}\r\n"
                },
                {
                    "date": 1753470624141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,62 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n+function FileUpload({\r\n+  label,\r\n+  onFileUploaded,\r\n+  documentType,\r\n+  onDelete,\r\n+  isUploaded,\r\n+}) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n   const fileInputRef = useRef(null);\r\n \r\n   const handleFolderUpload = (e) => {\r\n     const files = Array.from(e.target.files);\r\n-    if (files.length === 0) return;\r\n \r\n+    // Check if this is an empty folder\r\n+    if (files.length === 0) {\r\n+      // Create a dummy file to represent empty folder\r\n+      const emptyFolderBlob = new Blob([], {\r\n+        type: \"application/x-empty-folder\",\r\n+      });\r\n+      const emptyFolderFile = new File(\r\n+        [emptyFolderBlob],\r\n+        \"empty-folder.placeholder\",\r\n+        {\r\n+          type: \"application/x-empty-folder\",\r\n+        }\r\n+      );\r\n+      handleUpload([emptyFolderFile]);\r\n+      return;\r\n+    }\r\n+\r\n+    // Check file size (now up to 1GB)\r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 50 * 1024 * 1024) {\r\n-      alert(\"Total folder size too large (max 50MB)\");\r\n+    if (totalSize > 1024 * 1024 * 1024) {\r\n+      // 1GB in bytes\r\n+      alert(\"Total folder size too large (max 1GB)\");\r\n       return;\r\n     }\r\n \r\n     handleUpload(files);\r\n   };\r\n-\r\n   const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-    files.forEach((file) => formData.append(\"files\", file));\r\n+\r\n+    // Check if this is an empty folder placeholder\r\n+    const isEmptyFolder =\r\n+      files.length === 1 && files[0].type === \"application/x-empty-folder\";\r\n+\r\n+    if (!isEmptyFolder) {\r\n+      files.forEach((file) => formData.append(\"files\", file));\r\n+    } else {\r\n+      formData.append(\"isEmptyFolder\", \"true\");\r\n+    }\r\n+\r\n     formData.append(\"label\", label);\r\n     formData.append(\"documentType\", documentType);\r\n \r\n     try {\r\n@@ -33,11 +66,18 @@\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n           Authorization: `Bearer ${token}`,\r\n         },\r\n+        maxContentLength: 1024 * 1024 * 1024, // 1GB\r\n+        maxBodyLength: 1024 * 1024 * 1024, // 1GB\r\n       });\r\n \r\n-      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n+      alert(\r\n+        isEmptyFolder\r\n+          ? `‚úÖ Empty folder marked for ${label}`\r\n+          : `‚úÖ ${files.length} files uploaded for ${label}`\r\n+      );\r\n+\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n@@ -133,10 +173,10 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n-  const hasCompletedDocuments = \r\n-    user.documentRequirements?.politicalDeclaration && \r\n+  const hasCompletedDocuments =\r\n+    user.documentRequirements?.politicalDeclaration &&\r\n     user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n     user.documentRequirements?.idDocumentFile;\r\n \r\n   return (\r\n@@ -160,15 +200,18 @@\n             <div className=\"completed-documents-section\">\r\n               <h3>Completed Documents:</h3>\r\n               {user.documentRequirements?.politicalDeclaration && (\r\n                 <div className=\"document-group\">\r\n-                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <h4>\r\n+                    528 - Universal Public Declaration of Political Status:\r\n+                  </h4>\r\n                   <ul>\r\n                     <li>Political Declaration Document</li>\r\n                     {user.documentRequirements.idDocumentFile && (\r\n                       <li>\r\n                         ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                        {user.documentRequirements.idDocument ||\r\n+                          \"Not specified\"}\r\n                       </li>\r\n                     )}\r\n                     {user.documentRequirements.photoWithWhiteBg && (\r\n                       <li>Photo with White Background</li>\r\n@@ -363,11 +406,11 @@\n         })\r\n       );\r\n \r\n       // Force refresh the image by adding a timestamp query parameter\r\n-      setUserData(prev => ({\r\n+      setUserData((prev) => ({\r\n         ...prev,\r\n-        profileImage: `${response.data.filePath}?${Date.now()}`\r\n+        profileImage: `${response.data.filePath}?${Date.now()}`,\r\n       }));\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n@@ -451,14 +494,14 @@\n     fetchUserData(); // Refresh user data to get latest document status\r\n   };\r\n \r\n   const handleFileDeleted = (label) => {\r\n-    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    setUploadedLabels(uploadedLabels.filter((l) => l !== label));\r\n     fetchUserData(); // Refresh user data to get latest document status\r\n   };\r\n \r\n-  const hasCompletedAllDocuments = \r\n-    userData.documentRequirements?.politicalDeclaration && \r\n+  const hasCompletedAllDocuments =\r\n+    userData.documentRequirements?.politicalDeclaration &&\r\n     userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n     userData.documentRequirements?.idDocumentFile;\r\n \r\n   return (\r\n@@ -613,20 +656,24 @@\n                     }\r\n                     onFileUploaded={handleFileUploaded}\r\n                     onDelete={handleFileDeleted}\r\n                     isUploaded={\r\n-                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n-                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n-                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n+                      (label === \"528\" &&\r\n+                        userData.documentRequirements?.politicalDeclaration) ||\r\n+                      (label === \"928\" &&\r\n+                        userData.documentRequirements?.witnessTestimonies\r\n+                          ?.length > 0) ||\r\n+                      (label === \"Praecipe\" &&\r\n+                        userData.documentRequirements?.idDocumentFile)\r\n                     }\r\n                   />\r\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n             {hasCompletedAllDocuments && (\r\n               <div className=\"certificate-section\">\r\n-                <button \r\n+                <button\r\n                   className=\"view-certificate-btn\"\r\n                   onClick={() => setShowCertificate(true)}\r\n                 >\r\n                   View My Certificate\r\n@@ -720,9 +767,10 @@\n                     </div>\r\n                     <p>\r\n                       {hasCompletedAllDocuments ? (\r\n                         <span className=\"completed-text\">\r\n-                          ‚úÖ All 3 documents completed! You can now view your certificate.\r\n+                          ‚úÖ All 3 documents completed! You can now view your\r\n+                          certificate.\r\n                         </span>\r\n                       ) : (\r\n                         `${uploadedLabels.length} of 3 documents uploaded`\r\n                       )}\r\n@@ -749,5 +797,5 @@\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1753473847754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,44 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({\r\n-  label,\r\n-  onFileUploaded,\r\n-  documentType,\r\n-  onDelete,\r\n-  isUploaded,\r\n-}) {\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n   const fileInputRef = useRef(null);\r\n \r\n   const handleFolderUpload = (e) => {\r\n     const files = Array.from(e.target.files);\r\n+    if (files.length === 0) return;\r\n \r\n-    // Check if this is an empty folder\r\n-    if (files.length === 0) {\r\n-      // Create a dummy file to represent empty folder\r\n-      const emptyFolderBlob = new Blob([], {\r\n-        type: \"application/x-empty-folder\",\r\n-      });\r\n-      const emptyFolderFile = new File(\r\n-        [emptyFolderBlob],\r\n-        \"empty-folder.placeholder\",\r\n-        {\r\n-          type: \"application/x-empty-folder\",\r\n-        }\r\n-      );\r\n-      handleUpload([emptyFolderFile]);\r\n-      return;\r\n-    }\r\n-\r\n-    // Check file size (now up to 1GB)\r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 1024 * 1024 * 1024) {\r\n-      // 1GB in bytes\r\n-      alert(\"Total folder size too large (max 1GB)\");\r\n+    if (totalSize > 50 * 1024 * 1024) {\r\n+      alert(\"Total folder size too large (max 50MB)\");\r\n       return;\r\n     }\r\n \r\n     handleUpload(files);\r\n   };\r\n+\r\n   const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-\r\n-    // Check if this is an empty folder placeholder\r\n-    const isEmptyFolder =\r\n-      files.length === 1 && files[0].type === \"application/x-empty-folder\";\r\n-\r\n-    if (!isEmptyFolder) {\r\n-      files.forEach((file) => formData.append(\"files\", file));\r\n-    } else {\r\n-      formData.append(\"isEmptyFolder\", \"true\");\r\n-    }\r\n-\r\n+    files.forEach((file) => formData.append(\"files\", file));\r\n     formData.append(\"label\", label);\r\n     formData.append(\"documentType\", documentType);\r\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n+      // Remove the assignment to response since we're not using it\r\n       await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n           Authorization: `Bearer ${token}`,\r\n         },\r\n-        maxContentLength: 1024 * 1024 * 1024, // 1GB\r\n-        maxBodyLength: 1024 * 1024 * 1024, // 1GB\r\n       });\r\n \r\n-      alert(\r\n-        isEmptyFolder\r\n-          ? `‚úÖ Empty folder marked for ${label}`\r\n-          : `‚úÖ ${files.length} files uploaded for ${label}`\r\n-      );\r\n-\r\n+      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n@@ -113,16 +74,14 @@\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n       <label\r\n-        className={`custum-file-upload ${isUploaded ? \"uploaded\" : \"\"}`}\r\n+        className=\"custum-file-upload\"\r\n         style={{ opacity: isUploading ? 0.7 : 1 }}\r\n       >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n-          ) : isUploaded ? (\r\n-            <div className=\"upload-success\">‚úì</div>\r\n           ) : (\r\n             <svg\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n               fill=\"#000000\"\r\n@@ -149,9 +108,9 @@\n         <input\r\n           type=\"file\"\r\n           ref={fileInputRef}\r\n           onChange={handleFolderUpload}\r\n-          disabled={isUploading || isUploaded}\r\n+          disabled={isUploading}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n           multiple\r\n           webkitdirectory=\"true\"\r\n           directory=\"true\"\r\n@@ -160,9 +119,9 @@\n       <button\r\n         className=\"delete-btn\"\r\n         onClick={handleDeleteClick}\r\n         title={`Delete ${label}`}\r\n-        disabled={isDeleting || !isUploaded}\r\n+        disabled={isDeleting}\r\n       >\r\n         {isDeleting ? (\r\n           <div className=\"loading-spinner-small\"></div>\r\n         ) : (\r\n@@ -173,13 +132,8 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n-  const hasCompletedDocuments =\r\n-    user.documentRequirements?.politicalDeclaration &&\r\n-    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    user.documentRequirements?.idDocumentFile;\r\n-\r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n@@ -195,57 +149,52 @@\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-          {hasCompletedDocuments && (\r\n-            <div className=\"completed-documents-section\">\r\n-              <h3>Completed Documents:</h3>\r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>\r\n-                    528 - Universal Public Declaration of Political Status:\r\n-                  </h4>\r\n-                  <ul>\r\n-                    <li>Political Declaration Document</li>\r\n-                    {user.documentRequirements.idDocumentFile && (\r\n-                      <li>\r\n-                        ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument ||\r\n-                          \"Not specified\"}\r\n-                      </li>\r\n-                    )}\r\n-                    {user.documentRequirements.photoWithWhiteBg && (\r\n-                      <li>Photo with White Background</li>\r\n-                    )}\r\n-                    {user.documentRequirements.redThumbprint && (\r\n-                      <li>Thumbprint (red ink)</li>\r\n-                    )}\r\n-                    {user.documentRequirements.utilityBill && (\r\n-                      <li>Utility Bill</li>\r\n-                    )}\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>\r\n-                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                  </h4>\r\n-                  <ul>\r\n-                    <li>Act of Expatriation</li>\r\n-                    <li>Certificate of Assumed Name</li>\r\n-                    <li>Notice of Transfer of Reserved Name</li>\r\n-                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                    <li>Paramount Claim of Life</li>\r\n-                    <li>Mandatory Notice</li>\r\n-                    <li>Common Carry Declaration Weapon</li>\r\n-                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                    <li>Baby Deed Affidavit Testimony</li>\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n+          <div className=\"completed-documents-section\">\r\n+            <h3>Completed Documents:</h3>\r\n+            {user.documentRequirements?.politicalDeclaration && (\r\n+              <div className=\"document-group\">\r\n+                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                <ul>\r\n+                  <li>Political Declaration Document</li>\r\n+                  {user.documentRequirements.idDocumentFile && (\r\n+                    <li>\r\n+                      ID Document:{\" \"}\r\n+                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                    </li>\r\n+                  )}\r\n+                  {user.documentRequirements.photoWithWhiteBg && (\r\n+                    <li>Photo with White Background</li>\r\n+                  )}\r\n+                  {user.documentRequirements.redThumbprint && (\r\n+                    <li>Thumbprint (red ink)</li>\r\n+                  )}\r\n+                  {user.documentRequirements.utilityBill && (\r\n+                    <li>Utility Bill</li>\r\n+                  )}\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+              <div className=\"document-group\">\r\n+                <h4>\r\n+                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                </h4>\r\n+                <ul>\r\n+                  <li>Act of Expatriation</li>\r\n+                  <li>Certificate of Assumed Name</li>\r\n+                  <li>Notice of Transfer of Reserved Name</li>\r\n+                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                  <li>Paramount Claim of Life</li>\r\n+                  <li>Mandatory Notice</li>\r\n+                  <li>Common Carry Declaration Weapon</li>\r\n+                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                  <li>Baby Deed Affidavit Testimony</li>\r\n+                </ul>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n               {user.fullNames} {user.familyName}\r\n@@ -279,9 +228,8 @@\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n   const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n-  const [showCertificate, setShowCertificate] = useState(false);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n@@ -373,13 +321,29 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n+    // Validate file\r\n+    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n+      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n+      return;\r\n+    }\r\n+\r\n+    if (file.size > 2 * 1024 * 1024) {\r\n+      alert(\"Image size must be less than 2MB\");\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n       formData.append(\"type\", \"profileImage\");\r\n \r\n+      console.log(\"FormData contents:\");\r\n+      for (let [key, value] of formData.entries()) {\r\n+        console.log(key, value);\r\n+      }\r\n+\r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n         formData,\r\n@@ -390,8 +354,10 @@\n           },\r\n         }\r\n       );\r\n \r\n+      console.log(\"Upload response:\", response.data);\r\n+\r\n       const updatedUser = {\r\n         ...userData,\r\n         profileImage: response.data.filePath,\r\n       };\r\n@@ -405,16 +371,28 @@\n           profileImage: response.data.filePath,\r\n         })\r\n       );\r\n \r\n-      // Force refresh the image by adding a timestamp query parameter\r\n-      setUserData((prev) => ({\r\n-        ...prev,\r\n-        profileImage: `${response.data.filePath}?${Date.now()}`,\r\n-      }));\r\n+      alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n+      console.error(\"Upload error details:\", {\r\n+        message: error.message,\r\n+        response: error.response?.data,\r\n+        status: error.response?.status,\r\n+        config: error.config,\r\n+      });\r\n+\r\n+      let errorMessage = \"Failed to upload profile image\";\r\n+      if (error.response) {\r\n+        if (error.response.status === 400) {\r\n+          errorMessage =\r\n+            error.response.data?.message || \"Invalid file format or size\";\r\n+        } else if (error.response.status === 413) {\r\n+          errorMessage = \"File too large (max 2MB)\";\r\n+        }\r\n+      }\r\n+\r\n+      alert(errorMessage);\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n@@ -486,25 +464,8 @@\n     localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n-  const handleFileUploaded = (label) => {\r\n-    if (!uploadedLabels.includes(label)) {\r\n-      setUploadedLabels([...uploadedLabels, label]);\r\n-    }\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n-  };\r\n-\r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels(uploadedLabels.filter((l) => l !== label));\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n-  };\r\n-\r\n-  const hasCompletedAllDocuments =\r\n-    userData.documentRequirements?.politicalDeclaration &&\r\n-    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    userData.documentRequirements?.idDocumentFile;\r\n-\r\n   return (\r\n     <>\r\n       <div\r\n         className=\"sidebar-toggle\"\r\n@@ -550,24 +511,17 @@\n           <>\r\n             <div\r\n               className=\"profile-upload\"\r\n               onClick={() => profileInputRef.current?.click()}\r\n-              title=\"Click to upload profile image\"\r\n             >\r\n               {userData.profileImage ? (\r\n                 <img\r\n                   src={`http://localhost:5000${userData.profileImage}`}\r\n                   alt=\"Profile\"\r\n                   className=\"profile-image\"\r\n-                  onError={(e) => {\r\n-                    e.target.onerror = null;\r\n-                    e.target.src = \"/default-profile.png\";\r\n-                  }}\r\n                 />\r\n               ) : (\r\n-                <div className=\"profile-upload-placeholder\">\r\n-                  <span>+ Upload Profile Image</span>\r\n-                </div>\r\n+                <span>Upload Profile Pic</span>\r\n               )}\r\n             </div>\r\n \r\n             <div className=\"editable-field\">\r\n@@ -653,35 +607,16 @@\n                         : label === \"928\"\r\n                         ? \"witnessTestimonies\"\r\n                         : \"idDocument\"\r\n                     }\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n-                    isUploaded={\r\n-                      (label === \"528\" &&\r\n-                        userData.documentRequirements?.politicalDeclaration) ||\r\n-                      (label === \"928\" &&\r\n-                        userData.documentRequirements?.witnessTestimonies\r\n-                          ?.length > 0) ||\r\n-                      (label === \"Praecipe\" &&\r\n-                        userData.documentRequirements?.idDocumentFile)\r\n-                    }\r\n                   />\r\n+                  {uploadedLabels.includes(label) && (\r\n+                    <span className=\"tick\">‚úî</span>\r\n+                  )}\r\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n-            {hasCompletedAllDocuments && (\r\n-              <div className=\"certificate-section\">\r\n-                <button\r\n-                  className=\"view-certificate-btn\"\r\n-                  onClick={() => setShowCertificate(true)}\r\n-                >\r\n-                  View My Certificate\r\n-                </button>\r\n-              </div>\r\n-            )}\r\n-\r\n             <div className=\"logout-section\">\r\n               <button className=\"logout-btn\" onClick={handleLogout}>\r\n                 Logout\r\n               </button>\r\n@@ -709,9 +644,9 @@\n               >\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n-              {showPublicView ? (\r\n+              {showPublicView && (\r\n                 <div className=\"public-view-container\">\r\n                   <h3>Users with Completed Documents</h3>\r\n                   {loadingPublicView ? (\r\n                     <div className=\"loading-container\">\r\n@@ -734,12 +669,8 @@\n                                 <img\r\n                                   src={`http://localhost:5000${user.profileImage}`}\r\n                                   alt=\"Profile\"\r\n                                   className=\"user-avatar\"\r\n-                                  onError={(e) => {\r\n-                                    e.target.onerror = null;\r\n-                                    e.target.src = \"/default-profile.png\";\r\n-                                  }}\r\n                                 />\r\n                               )}\r\n                               <span>\r\n                                 {user.fullNames} {user.familyName}\r\n@@ -752,9 +683,11 @@\n                         ))}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n-              ) : (\r\n+              )}\r\n+\r\n+              {!showPublicView && (\r\n                 <div className=\"dashboard-info\">\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n@@ -764,18 +697,9 @@\n                           width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n-                    <p>\r\n-                      {hasCompletedAllDocuments ? (\r\n-                        <span className=\"completed-text\">\r\n-                          ‚úÖ All 3 documents completed! You can now view your\r\n-                          certificate.\r\n-                        </span>\r\n-                      ) : (\r\n-                        `${uploadedLabels.length} of 3 documents uploaded`\r\n-                      )}\r\n-                    </p>\r\n+                    <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n                   </div>\r\n                 </div>\r\n               )}\r\n             </>\r\n@@ -788,14 +712,7 @@\n           user={selectedUser}\r\n           onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n-\r\n-      {showCertificate && (\r\n-        <SatisfactionCertificate\r\n-          user={userData}\r\n-          onClose={() => setShowCertificate(false)}\r\n-        />\r\n-      )}\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1753473868382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n   const fileInputRef = useRef(null);\r\n \r\n@@ -28,9 +28,8 @@\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      // Remove the assignment to response since we're not using it\r\n       await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n           Authorization: `Bearer ${token}`,\r\n@@ -80,8 +79,10 @@\n       >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n+          ) : isUploaded ? (\r\n+            <div className=\"upload-success\">‚úî</div>\r\n           ) : (\r\n             <svg\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n               fill=\"#000000\"\r\n@@ -108,9 +109,9 @@\n         <input\r\n           type=\"file\"\r\n           ref={fileInputRef}\r\n           onChange={handleFolderUpload}\r\n-          disabled={isUploading}\r\n+          disabled={isUploading || isUploaded}\r\n           accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n           multiple\r\n           webkitdirectory=\"true\"\r\n           directory=\"true\"\r\n@@ -119,9 +120,9 @@\n       <button\r\n         className=\"delete-btn\"\r\n         onClick={handleDeleteClick}\r\n         title={`Delete ${label}`}\r\n-        disabled={isDeleting}\r\n+        disabled={isDeleting || !isUploaded}\r\n       >\r\n         {isDeleting ? (\r\n           <div className=\"loading-spinner-small\"></div>\r\n         ) : (\r\n@@ -132,8 +133,13 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n+  const hasCompletedDocuments = \r\n+    user.documentRequirements?.politicalDeclaration && \r\n+    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    user.documentRequirements?.idDocumentFile;\r\n+\r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n@@ -149,52 +155,54 @@\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-          <div className=\"completed-documents-section\">\r\n-            <h3>Completed Documents:</h3>\r\n-            {user.documentRequirements?.politicalDeclaration && (\r\n-              <div className=\"document-group\">\r\n-                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <ul>\r\n-                  <li>Political Declaration Document</li>\r\n-                  {user.documentRequirements.idDocumentFile && (\r\n-                    <li>\r\n-                      ID Document:{\" \"}\r\n-                      {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                    </li>\r\n-                  )}\r\n-                  {user.documentRequirements.photoWithWhiteBg && (\r\n-                    <li>Photo with White Background</li>\r\n-                  )}\r\n-                  {user.documentRequirements.redThumbprint && (\r\n-                    <li>Thumbprint (red ink)</li>\r\n-                  )}\r\n-                  {user.documentRequirements.utilityBill && (\r\n-                    <li>Utility Bill</li>\r\n-                  )}\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-              <div className=\"document-group\">\r\n-                <h4>\r\n-                  928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                </h4>\r\n-                <ul>\r\n-                  <li>Act of Expatriation</li>\r\n-                  <li>Certificate of Assumed Name</li>\r\n-                  <li>Notice of Transfer of Reserved Name</li>\r\n-                  <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                  <li>Paramount Claim of Life</li>\r\n-                  <li>Mandatory Notice</li>\r\n-                  <li>Common Carry Declaration Weapon</li>\r\n-                  <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                  <li>Baby Deed Affidavit Testimony</li>\r\n-                </ul>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n+          {hasCompletedDocuments && (\r\n+            <div className=\"completed-documents-section\">\r\n+              <h3>Completed Documents:</h3>\r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <ul>\r\n+                    <li>Political Declaration Document</li>\r\n+                    {user.documentRequirements.idDocumentFile && (\r\n+                      <li>\r\n+                        ID Document:{\" \"}\r\n+                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                      </li>\r\n+                    )}\r\n+                    {user.documentRequirements.photoWithWhiteBg && (\r\n+                      <li>Photo with White Background</li>\r\n+                    )}\r\n+                    {user.documentRequirements.redThumbprint && (\r\n+                      <li>Thumbprint (red ink)</li>\r\n+                    )}\r\n+                    {user.documentRequirements.utilityBill && (\r\n+                      <li>Utility Bill</li>\r\n+                    )}\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>\r\n+                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                  </h4>\r\n+                  <ul>\r\n+                    <li>Act of Expatriation</li>\r\n+                    <li>Certificate of Assumed Name</li>\r\n+                    <li>Notice of Transfer of Reserved Name</li>\r\n+                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                    <li>Paramount Claim of Life</li>\r\n+                    <li>Mandatory Notice</li>\r\n+                    <li>Common Carry Declaration Weapon</li>\r\n+                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                    <li>Baby Deed Affidavit Testimony</li>\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n               {user.fullNames} {user.familyName}\r\n@@ -228,8 +236,9 @@\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n   const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n+  const [showCertificate, setShowCertificate] = useState(false);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n@@ -321,29 +330,13 @@\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n-    // Validate file\r\n-    if (!file.type.match(/image\\/(jpeg|png|jpg|gif)/)) {\r\n-      alert(\"Only JPEG, PNG, or GIF images are allowed\");\r\n-      return;\r\n-    }\r\n-\r\n-    if (file.size > 2 * 1024 * 1024) {\r\n-      alert(\"Image size must be less than 2MB\");\r\n-      return;\r\n-    }\r\n-\r\n     try {\r\n       const formData = new FormData();\r\n       formData.append(\"file\", file);\r\n       formData.append(\"type\", \"profileImage\");\r\n \r\n-      console.log(\"FormData contents:\");\r\n-      for (let [key, value] of formData.entries()) {\r\n-        console.log(key, value);\r\n-      }\r\n-\r\n       const token = localStorage.getItem(\"token\");\r\n       const response = await axios.post(\r\n         \"http://localhost:5000/api/home/upload\",\r\n         formData,\r\n@@ -354,10 +347,8 @@\n           },\r\n         }\r\n       );\r\n \r\n-      console.log(\"Upload response:\", response.data);\r\n-\r\n       const updatedUser = {\r\n         ...userData,\r\n         profileImage: response.data.filePath,\r\n       };\r\n@@ -373,26 +364,10 @@\n       );\r\n \r\n       alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n-      console.error(\"Upload error details:\", {\r\n-        message: error.message,\r\n-        response: error.response?.data,\r\n-        status: error.response?.status,\r\n-        config: error.config,\r\n-      });\r\n-\r\n-      let errorMessage = \"Failed to upload profile image\";\r\n-      if (error.response) {\r\n-        if (error.response.status === 400) {\r\n-          errorMessage =\r\n-            error.response.data?.message || \"Invalid file format or size\";\r\n-        } else if (error.response.status === 413) {\r\n-          errorMessage = \"File too large (max 2MB)\";\r\n-        }\r\n-      }\r\n-\r\n-      alert(errorMessage);\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n@@ -464,8 +439,25 @@\n     localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n+  const handleFileUploaded = (label) => {\r\n+    if (!uploadedLabels.includes(label)) {\r\n+      setUploadedLabels([...uploadedLabels, label]);\r\n+    }\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const hasCompletedAllDocuments = \r\n+    userData.documentRequirements?.politicalDeclaration && \r\n+    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    userData.documentRequirements?.idDocumentFile;\r\n+\r\n   return (\r\n     <>\r\n       <div\r\n         className=\"sidebar-toggle\"\r\n@@ -511,17 +503,20 @@\n           <>\r\n             <div\r\n               className=\"profile-upload\"\r\n               onClick={() => profileInputRef.current?.click()}\r\n+              title=\"Click to upload profile image\"\r\n             >\r\n               {userData.profileImage ? (\r\n                 <img\r\n                   src={`http://localhost:5000${userData.profileImage}`}\r\n                   alt=\"Profile\"\r\n                   className=\"profile-image\"\r\n                 />\r\n               ) : (\r\n-                <span>Upload Profile Pic</span>\r\n+                <div className=\"profile-upload-placeholder\">\r\n+                  <span>+ Upload Profile Image</span>\r\n+                </div>\r\n               )}\r\n             </div>\r\n \r\n             <div className=\"editable-field\">\r\n@@ -607,16 +602,31 @@\n                         : label === \"928\"\r\n                         ? \"witnessTestimonies\"\r\n                         : \"idDocument\"\r\n                     }\r\n+                    onFileUploaded={handleFileUploaded}\r\n+                    onDelete={handleFileDeleted}\r\n+                    isUploaded={\r\n+                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n+                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n+                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n+                    }\r\n                   />\r\n-                  {uploadedLabels.includes(label) && (\r\n-                    <span className=\"tick\">‚úî</span>\r\n-                  )}\r\n                 </div>\r\n               ))}\r\n             </div>\r\n \r\n+            {hasCompletedAllDocuments && (\r\n+              <div className=\"certificate-section\">\r\n+                <button \r\n+                  className=\"view-certificate-btn\"\r\n+                  onClick={() => setShowCertificate(true)}\r\n+                >\r\n+                  View My Certificate\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n             <div className=\"logout-section\">\r\n               <button className=\"logout-btn\" onClick={handleLogout}>\r\n                 Logout\r\n               </button>\r\n@@ -644,9 +654,9 @@\n               >\r\n                 {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n               </button>\r\n \r\n-              {showPublicView && (\r\n+              {showPublicView ? (\r\n                 <div className=\"public-view-container\">\r\n                   <h3>Users with Completed Documents</h3>\r\n                   {loadingPublicView ? (\r\n                     <div className=\"loading-container\">\r\n@@ -683,11 +693,9 @@\n                         ))}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n-              )}\r\n-\r\n-              {!showPublicView && (\r\n+              ) : (\r\n                 <div className=\"dashboard-info\">\r\n                   <div className=\"completion-status\">\r\n                     <h4>Your Document Completion:</h4>\r\n                     <div className=\"progress-bar\">\r\n@@ -697,9 +705,17 @@\n                           width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n-                    <p>{uploadedLabels.length} of 3 documents uploaded</p>\r\n+                    <p>\r\n+                      {hasCompletedAllDocuments ? (\r\n+                        <span className=\"completed-text\">\r\n+                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                        </span>\r\n+                      ) : (\r\n+                        `${uploadedLabels.length} of 3 documents uploaded`\r\n+                      )}\r\n+                    </p>\r\n                   </div>\r\n                 </div>\r\n               )}\r\n             </>\r\n@@ -712,7 +728,14 @@\n           user={selectedUser}\r\n           onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n+\r\n+      {showCertificate && (\r\n+        <SatisfactionCertificate\r\n+          user={userData}\r\n+          onClose={() => setShowCertificate(false)}\r\n+        />\r\n+      )}\r\n     </>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753692416132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,741 +1,391 @@\n-import React, { useState, useRef, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"./Home.css\";\r\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import './Home.css';\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n+const Home = () => {\r\n+  const [selectedFolder, setSelectedFolder] = useState(null);\r\n+  const [files, setFiles] = useState([]);\r\n+  const [profileImage, setProfileImage] = useState(null);\r\n+  const [userData, setUserData] = useState(null);\r\n+  const [showCertificate, setShowCertificate] = useState(false);\r\n+  const [showPublicView, setShowPublicView] = useState(false);\r\n+  const [publicUsers, setPublicUsers] = useState([]);\r\n+  const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n+  const [uploadProgress, setUploadProgress] = useState(0);\r\n   const [isUploading, setIsUploading] = useState(false);\r\n-  const [isDeleting, setIsDeleting] = useState(false);\r\n-  const fileInputRef = useRef(null);\r\n+  const navigate = useNavigate();\r\n \r\n-  const handleFolderUpload = (e) => {\r\n-    const files = Array.from(e.target.files);\r\n-    if (files.length === 0) return;\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        if (!token) {\r\n+          navigate('/login');\r\n+          return;\r\n+        }\r\n \r\n-    const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 50 * 1024 * 1024) {\r\n-      alert(\"Total folder size too large (max 50MB)\");\r\n-      return;\r\n+        const response = await axios.get('/api/auth/me', {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`\r\n+          }\r\n+        });\r\n+\r\n+        setUserData(response.data);\r\n+        if (response.data.profileImage) {\r\n+          setProfileImage(`${'http://localhost:5000'}${response.data.profileImage}`);\r\n+        }\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        localStorage.removeItem('token');\r\n+        navigate('/login');\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserData();\r\n+  }, [navigate]);\r\n+\r\n+  const handleFolderSelect = (folderType) => {\r\n+    setSelectedFolder(folderType);\r\n+  };\r\n+\r\n+  const handleFileChange = (e) => {\r\n+    if (e.target.files) {\r\n+      setFiles(Array.from(e.target.files));\r\n     }\r\n+  };\r\n \r\n-    handleUpload(files);\r\n+  const handleProfileImageChange = (e) => {\r\n+    if (e.target.files && e.target.files[0]) {\r\n+      const file = e.target.files[0];\r\n+      if (file.size > 50 * 1024 * 1024) {\r\n+        alert('Profile image size must be less than 50MB');\r\n+        return;\r\n+      }\r\n+      setProfileImage(URL.createObjectURL(file));\r\n+      uploadProfileImage(file);\r\n+    }\r\n   };\r\n \r\n-  const handleUpload = async (files) => {\r\n+  const uploadProfileImage = async (file) => {\r\n     const formData = new FormData();\r\n-    files.forEach((file) => formData.append(\"files\", file));\r\n-    formData.append(\"label\", label);\r\n-    formData.append(\"documentType\", documentType);\r\n+    formData.append('file', file);\r\n+    formData.append('type', 'profileImage');\r\n \r\n     try {\r\n-      setIsUploading(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/upload', formData, {\r\n         headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n           Authorization: `Bearer ${token}`,\r\n-        },\r\n+          'Content-Type': 'multipart/form-data'\r\n+        }\r\n       });\r\n-\r\n-      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n-      if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n-    } finally {\r\n-      setIsUploading(false);\r\n-      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n+      console.error('Error uploading profile image:', error);\r\n     }\r\n   };\r\n \r\n-  const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+  const handleUpload = async () => {\r\n+    if (!selectedFolder || files.length === 0) return;\r\n \r\n-    try {\r\n-      setIsDeleting(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      await axios.post(\r\n-        \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-      if (onDelete) onDelete(label);\r\n-    } catch (error) {\r\n-      console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n-    } finally {\r\n-      setIsDeleting(false);\r\n-    }\r\n-  };\r\n+    setIsUploading(true);\r\n+    setUploadProgress(0);\r\n \r\n-  return (\r\n-    <div className=\"file-upload-container\">\r\n-      <label\r\n-        className=\"custum-file-upload\"\r\n-        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n-      >\r\n-        <div className=\"icon\">\r\n-          {isUploading ? (\r\n-            <div className=\"loading-spinner-small\"></div>\r\n-          ) : isUploaded ? (\r\n-            <div className=\"upload-success\">‚úî</div>\r\n-          ) : (\r\n-            <svg\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              fill=\"#000000\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              width=\"48px\"\r\n-              height=\"48px\"\r\n-            >\r\n-              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-              <path\r\n-                fill=\"#e8e8e8\"\r\n-                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                9.11 4 6.6 5.64 5.35 8.04 \r\n-                2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-              />\r\n-            </svg>\r\n-          )}\r\n-        </div>\r\n-        <div className=\"text\">\r\n-          <span>{label}</span>\r\n-        </div>\r\n-        <input\r\n-          type=\"file\"\r\n-          ref={fileInputRef}\r\n-          onChange={handleFolderUpload}\r\n-          disabled={isUploading || isUploaded}\r\n-          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n-          multiple\r\n-          webkitdirectory=\"true\"\r\n-          directory=\"true\"\r\n-        />\r\n-      </label>\r\n-      <button\r\n-        className=\"delete-btn\"\r\n-        onClick={handleDeleteClick}\r\n-        title={`Delete ${label}`}\r\n-        disabled={isDeleting || !isUploaded}\r\n-      >\r\n-        {isDeleting ? (\r\n-          <div className=\"loading-spinner-small\"></div>\r\n-        ) : (\r\n-          \"üóëÔ∏è Delete\"\r\n-        )}\r\n-      </button>\r\n-    </div>\r\n-  );\r\n-}\r\n+    const formData = new FormData();\r\n+    files.forEach(file => {\r\n+      formData.append('files', file);\r\n+    });\r\n+    formData.append('type', 'folderUpload');\r\n+    formData.append('documentType', 'folderUpload');\r\n+    formData.append('folderName', selectedFolder);\r\n \r\n-function SatisfactionCertificate({ user, onClose }) {\r\n-  const hasCompletedDocuments = \r\n-    user.documentRequirements?.politicalDeclaration && \r\n-    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    user.documentRequirements?.idDocumentFile;\r\n-\r\n-  return (\r\n-    <div className=\"certificate-overlay\">\r\n-      <div className=\"certificate-container\">\r\n-        <button className=\"close-certificate\" onClick={onClose}>\r\n-          &times;\r\n-        </button>\r\n-        <div className=\"certificate-header\">\r\n-          <h2>Affidavit Testimony of My Status</h2>\r\n-        </div>\r\n-        <div className=\"certificate-body\">\r\n-          <div className=\"affidavit-statement\">\r\n-            <p>\r\n-              I, a living soul being of sound mind, competent and over the age\r\n-              of maturity, hereby affirm the following testimony is true. I have\r\n-              completed the fullness of the sovereign walk.\r\n-            </p>\r\n-          </div>\r\n-          {hasCompletedDocuments && (\r\n-            <div className=\"completed-documents-section\">\r\n-              <h3>Completed Documents:</h3>\r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                  <ul>\r\n-                    <li>Political Declaration Document</li>\r\n-                    {user.documentRequirements.idDocumentFile && (\r\n-                      <li>\r\n-                        ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                      </li>\r\n-                    )}\r\n-                    {user.documentRequirements.photoWithWhiteBg && (\r\n-                      <li>Photo with White Background</li>\r\n-                    )}\r\n-                    {user.documentRequirements.redThumbprint && (\r\n-                      <li>Thumbprint (red ink)</li>\r\n-                    )}\r\n-                    {user.documentRequirements.utilityBill && (\r\n-                      <li>Utility Bill</li>\r\n-                    )}\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>\r\n-                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                  </h4>\r\n-                  <ul>\r\n-                    <li>Act of Expatriation</li>\r\n-                    <li>Certificate of Assumed Name</li>\r\n-                    <li>Notice of Transfer of Reserved Name</li>\r\n-                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                    <li>Paramount Claim of Life</li>\r\n-                    <li>Mandatory Notice</li>\r\n-                    <li>Common Carry Declaration Weapon</li>\r\n-                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                    <li>Baby Deed Affidavit Testimony</li>\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-          <div className=\"signature-section\">\r\n-            <div className=\"signature-line\"></div>\r\n-            <p>\r\n-              {user.fullNames} {user.familyName}\r\n-            </p>\r\n-            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default function Home() {\r\n-  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n-  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n-  const [userData, setUserData] = useState({\r\n-    fullNames: \"Loading...\",\r\n-    familyName: \"\",\r\n-    email: \"Loading...\",\r\n-    profileImage: null,\r\n-    documentRequirements: {},\r\n-  });\r\n-  const [editingName, setEditingName] = useState(false);\r\n-  const [editingEmail, setEditingEmail] = useState(false);\r\n-  const [tempName, setTempName] = useState(\"\");\r\n-  const [tempEmail, setTempEmail] = useState(\"\");\r\n-  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n-  const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem(\"showPublicView\") === \"true\"\r\n-  );\r\n-  const [selectedUser, setSelectedUser] = useState(null);\r\n-  const [loadingUserData, setLoadingUserData] = useState(true);\r\n-  const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n-  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n-  const [showCertificate, setShowCertificate] = useState(false);\r\n-  const profileInputRef = useRef(null);\r\n-\r\n-  const fetchUserData = async () => {\r\n     try {\r\n-      setLoadingUserData(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      if (!token) {\r\n-        window.location.href = \"/login\";\r\n-        return;\r\n-      }\r\n-\r\n-      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/upload', formData, {\r\n         headers: {\r\n           Authorization: `Bearer ${token}`,\r\n+          'Content-Type': 'multipart/form-data'\r\n         },\r\n+        onUploadProgress: (progressEvent) => {\r\n+          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n+          setUploadProgress(percentCompleted);\r\n+        }\r\n       });\r\n \r\n-      const userData = {\r\n-        fullNames: response.data.user.fullNames || \"Unknown\",\r\n-        familyName: response.data.user.familyName || \"\",\r\n-        email: response.data.user.email || \"No email\",\r\n-        profileImage: response.data.user.profileImage || null,\r\n-        documentRequirements: response.data.user.documentRequirements || {},\r\n-      };\r\n+      // Refresh user data after successful upload\r\n+      const response = await axios.get('/api/auth/me', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n+      });\r\n+      setUserData(response.data);\r\n \r\n-      setUserData(userData);\r\n-      setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-      setTempEmail(userData.email);\r\n-\r\n-      const uploaded = [];\r\n-      if (userData.documentRequirements) {\r\n-        if (userData.documentRequirements.politicalDeclaration)\r\n-          uploaded.push(\"528\");\r\n-        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n-          uploaded.push(\"928\");\r\n-        if (userData.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"Praecipe\");\r\n-      }\r\n-      setUploadedLabels(uploaded);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames: userData.fullNames,\r\n-          familyName: userData.familyName,\r\n-          email: userData.email,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n+      setFiles([]);\r\n+      setSelectedFolder(null);\r\n     } catch (error) {\r\n-      console.error(\"Failed to fetch user data:\", error);\r\n-      localStorage.removeItem(\"token\");\r\n-      localStorage.removeItem(\"userData\");\r\n-      window.location.href = \"/login\";\r\n+      console.error('Error uploading files:', error);\r\n     } finally {\r\n-      setLoadingUserData(false);\r\n+      setIsUploading(false);\r\n+      setUploadProgress(0);\r\n     }\r\n   };\r\n \r\n-  const fetchPublicViewUsers = async () => {\r\n+  const handleDeleteDocument = async (documentType) => {\r\n     try {\r\n-      setLoadingPublicView(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\r\n-        \"http://localhost:5000/api/home/public-view\",\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/delete-document', { documentType }, {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n         }\r\n-      );\r\n-      setPublicViewUsers(response.data);\r\n-    } catch (error) {\r\n-      console.error(\"Failed to fetch public view users:\", error);\r\n-    } finally {\r\n-      setLoadingPublicView(false);\r\n-    }\r\n-  };\r\n+      });\r\n \r\n-  useEffect(() => {\r\n-    fetchUserData();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (showPublicView) {\r\n-      fetchPublicViewUsers();\r\n-    }\r\n-  }, [showPublicView]);\r\n-\r\n-  const handleProfileImageChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    try {\r\n-      const formData = new FormData();\r\n-      formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n-\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n+      // Refresh user data after successful deletion\r\n+      const response = await axios.get('/api/auth/me', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n         }\r\n-      );\r\n-\r\n-      const updatedUser = {\r\n-        ...userData,\r\n-        profileImage: response.data.filePath,\r\n-      };\r\n-\r\n-      setUserData(updatedUser);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n-          profileImage: response.data.filePath,\r\n-        })\r\n-      );\r\n-\r\n-      alert(\"Profile image updated successfully!\");\r\n+      });\r\n+      setUserData(response.data);\r\n     } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n+      console.error('Error deleting document:', error);\r\n     }\r\n   };\r\n \r\n-  const saveUserData = async () => {\r\n-    if (!tempName.trim() || !tempEmail.trim()) {\r\n-      alert(\"Name and email cannot be empty\");\r\n-      return;\r\n-    }\r\n-\r\n+  const fetchPublicUsers = async () => {\r\n     try {\r\n-      setIsUpdatingProfile(true);\r\n-      const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n-      const familyName = familyNameParts.join(\" \");\r\n-\r\n-      if (!familyName) {\r\n-        alert(\"Please provide both first and last names\");\r\n-        return;\r\n-      }\r\n-\r\n-      const token = localStorage.getItem(\"token\");\r\n-\r\n-      await axios.put(\r\n-        \"http://localhost:5000/api/auth/update\",\r\n-        {\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n+      const token = localStorage.getItem('token');\r\n+      const response = await axios.get('/api/home/public-view', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n         }\r\n-      );\r\n-\r\n-      const updatedUserData = {\r\n-        ...userData,\r\n-        fullNames,\r\n-        familyName,\r\n-        email: tempEmail,\r\n-      };\r\n-\r\n-      setUserData(updatedUserData);\r\n-      setTempName(`${fullNames} ${familyName}`);\r\n-      setTempEmail(tempEmail);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n-\r\n-      setEditingName(false);\r\n-      setEditingEmail(false);\r\n-      alert(\"Profile updated successfully!\");\r\n+      });\r\n+      setPublicUsers(response.data.users);\r\n     } catch (error) {\r\n-      console.error(\"Error updating profile:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to update profile\");\r\n-    } finally {\r\n-      setIsUpdatingProfile(false);\r\n+      console.error('Error fetching public users:', error);\r\n     }\r\n   };\r\n \r\n-  const handleLogout = () => {\r\n-    localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem(\"showPublicView\");\r\n-    window.location.href = \"/login\";\r\n+  const hasCompletedDocuments = () => {\r\n+    if (!userData?.documentRequirements) return false;\r\n+    \r\n+    const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n+    return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n   };\r\n \r\n-  const handleFileUploaded = (label) => {\r\n-    if (!uploadedLabels.includes(label)) {\r\n-      setUploadedLabels([...uploadedLabels, label]);\r\n-    }\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n-  };\r\n-\r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n-  };\r\n-\r\n-  const hasCompletedAllDocuments = \r\n-    userData.documentRequirements?.politicalDeclaration && \r\n-    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    userData.documentRequirements?.idDocumentFile;\r\n-\r\n   return (\r\n-    <>\r\n-      <div\r\n-        className=\"sidebar-toggle\"\r\n-        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n-      >\r\n-        {userData.profileImage ? (\r\n-          <img\r\n-            src={`http://localhost:5000${userData.profileImage}`}\r\n-            alt=\"Profile\"\r\n-            className=\"profile-img\"\r\n-            onError={(e) => {\r\n-              e.target.onerror = null;\r\n-              e.target.src = \"/default-profile.png\";\r\n-            }}\r\n-          />\r\n-        ) : (\r\n-          <div className=\"profile-placeholder\">\r\n-            {userData.fullNames.charAt(0).toUpperCase()}\r\n+    <div className=\"home-container\">\r\n+      <div className=\"sidebar\">\r\n+        <div className=\"user-profile\">\r\n+          <div className=\"profile-image-container\">\r\n+            <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n+              {profileImage ? (\r\n+                <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n+              ) : (\r\n+                <div className=\"profile-placeholder\">\r\n+                  <span>Upload Profile</span>\r\n+                </div>\r\n+              )}\r\n+            </label>\r\n+            <input\r\n+              id=\"profile-upload\"\r\n+              type=\"file\"\r\n+              accept=\"image/*\"\r\n+              onChange={handleProfileImageChange}\r\n+              style={{ display: 'none' }}\r\n+            />\r\n           </div>\r\n-        )}\r\n-      </div>\r\n+          {userData && (\r\n+            <div className=\"user-info\">\r\n+              <h3>{userData.fullNames} {userData.familyName}</h3>\r\n+              <p>{userData.email}</p>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n \r\n-      <input\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        style={{ display: \"none\" }}\r\n-        ref={profileInputRef}\r\n-        onChange={handleProfileImageChange}\r\n-      />\r\n+        <div className=\"upload-section\">\r\n+          <h3>Upload Documents</h3>\r\n+          <div className=\"folder-options\">\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('528')}\r\n+            >\r\n+              528 Folder\r\n+            </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('928')}\r\n+            >\r\n+              928 Folder\r\n+            </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('Praecipe')}\r\n+            >\r\n+              Praecipe Folder\r\n+            </button>\r\n+          </div>\r\n \r\n-      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n-        <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n-          &larr; Back\r\n-        </button>\r\n-        <h2>User Info</h2>\r\n-\r\n-        {loadingUserData ? (\r\n-          <div className=\"loading-container\">\r\n-            <div className=\"loading-spinner\"></div>\r\n-            <p>Loading user data...</p>\r\n-          </div>\r\n-        ) : (\r\n-          <>\r\n-            <div\r\n-              className=\"profile-upload\"\r\n-              onClick={() => profileInputRef.current?.click()}\r\n-              title=\"Click to upload profile image\"\r\n-            >\r\n-              {userData.profileImage ? (\r\n-                <img\r\n-                  src={`http://localhost:5000${userData.profileImage}`}\r\n-                  alt=\"Profile\"\r\n-                  className=\"profile-image\"\r\n-                />\r\n-              ) : (\r\n-                <div className=\"profile-upload-placeholder\">\r\n-                  <span>+ Upload Profile Image</span>\r\n+          {selectedFolder && (\r\n+            <div className=\"file-upload-container\">\r\n+              <input\r\n+                type=\"file\"\r\n+                id=\"file-upload\"\r\n+                onChange={handleFileChange}\r\n+                multiple\r\n+                directory=\"\"\r\n+                webkitdirectory=\"\"\r\n+                style={{ display: 'none' }}\r\n+              />\r\n+              <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n+                Choose {selectedFolder} Folder\r\n+              </label>\r\n+              {files.length > 0 && (\r\n+                <div className=\"selected-files\">\r\n+                  <p>Selected {files.length} files</p>\r\n+                  <button onClick={handleUpload} disabled={isUploading}>\r\n+                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n+                  </button>\r\n                 </div>\r\n               )}\r\n             </div>\r\n+          )}\r\n \r\n-            <div className=\"editable-field\">\r\n-              <label>Name:</label>\r\n-              {editingName ? (\r\n-                <input\r\n-                  type=\"text\"\r\n-                  value={tempName}\r\n-                  onChange={(e) => setTempName(e.target.value)}\r\n-                  autoFocus\r\n-                />\r\n-              ) : (\r\n-                <span>{tempName}</span>\r\n+          {userData?.documentRequirements && (\r\n+            <div className=\"uploaded-documents\">\r\n+              <h4>Uploaded Documents:</h4>\r\n+              {userData.documentRequirements.politicalDeclaration && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Political Declaration</span>\r\n+                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n+                </div>\r\n               )}\r\n-              {!editingName && (\r\n-                <button\r\n-                  className=\"edit-btn\"\r\n-                  onClick={() => setEditingName(true)}\r\n-                >\r\n\\ No newline at end of file\n-                  ‚úèÔ∏è\r\n-                </button>\r\n+              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n+                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n+                </div>\r\n               )}\r\n-            </div>\r\n-\r\n-            <div className=\"editable-field\">\r\n-              <label>Email:</label>\r\n-              {editingEmail ? (\r\n-                <input\r\n-                  type=\"email\"\r\n-                  value={tempEmail}\r\n-                  onChange={(e) => setTempEmail(e.target.value)}\r\n-                  autoFocus\r\n-                />\r\n-              ) : (\r\n-                <span>{tempEmail}</span>\r\n+              {userData.documentRequirements.idDocumentFile && (\r\n+                <div className=\"document-item\">\r\n+                  <span>ID Document</span>\r\n+                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n+                </div>\r\n               )}\r\n-              {!editingEmail && (\r\n-                <button\r\n-                  className=\"edit-btn\"\r\n-                  onClick={() => setEditingEmail(true)}\r\n-                >\r\n-                  ‚úèÔ∏è\r\n-                </button>\r\n-              )}\r\n             </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n \r\n-            {(editingName || editingEmail) && (\r\n-              <div className=\"save-section\">\r\n-                <button\r\n-                  className=\"save-btn\"\r\n-                  onClick={saveUserData}\r\n-                  disabled={isUpdatingProfile}\r\n-                >\r\n-                  {isUpdatingProfile ? (\r\n-                    <div className=\"loading-spinner-small\"></div>\r\n-                  ) : (\r\n-                    \"Save Changes\"\r\n-                  )}\r\n-                </button>\r\n-                <button\r\n-                  className=\"cancel-btn\"\r\n-                  onClick={() => {\r\n-                    setEditingName(false);\r\n-                    setEditingEmail(false);\r\n-                    setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-                    setTempEmail(userData.email);\r\n-                  }}\r\n-                >\r\n-                  Cancel\r\n-                </button>\r\n+      <div className=\"main-content\">\r\n+        <button \r\n+          className=\"public-view-btn\"\r\n+          onClick={() => {\r\n+            setShowPublicView(!showPublicView);\r\n+            fetchPublicUsers();\r\n+          }}\r\n+        >\r\n+          Public View\r\n+        </button>\r\n+\r\n+        {showPublicView && (\r\n+          <div className=\"public-view-modal\">\r\n+            <div className=\"public-view-content\">\r\n+              <h3>Public Records</h3>\r\n+              <div className=\"public-users-list\">\r\n+                {publicUsers.map(user => (\r\n+                  <div \r\n+                    key={user._id} \r\n+                    className=\"public-user-item\"\r\n+                    onClick={() => setSelectedPublicUser(user)}\r\n+                  >\r\n+                    <div className=\"public-user-profile\">\r\n+                      {user.profileImage && (\r\n+                        <img src={user.profileImage} alt={user.fullNames} />\r\n+                      )}\r\n+                      <span>{user.fullNames} {user.familyName}</span>\r\n+                    </div>\r\n+                  </div>\r\n+                ))}\r\n               </div>\r\n-            )}\r\n-\r\n-            <div className=\"document-uploads\">\r\n-              <h3>Document Uploads</h3>\r\n-              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n-                <div key={label} className=\"upload-item\">\r\n-                  <FileUpload\r\n-                    label={label}\r\n-                    documentType={\r\n-                      label === \"528\"\r\n-                        ? \"politicalDeclaration\"\r\n-                        : label === \"928\"\r\n-                        ? \"witnessTestimonies\"\r\n-                        : \"idDocument\"\r\n-                    }\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n-                    isUploaded={\r\n-                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n-                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n-                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n-                    }\r\n-                  />\r\n-                </div>\r\n-              ))}\r\n+              <button \r\n+                className=\"close-public-view\"\r\n+                onClick={() => setShowPublicView(false)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n             </div>\r\n+          </div>\r\n+        )}\r\n \r\n-            {hasCompletedAllDocuments && (\r\n-              <div className=\"certificate-section\">\r\n-                <button \r\n-                  className=\"view-certificate-btn\"\r\n-                  onClick={() => setShowCertificate(true)}\r\n-                >\r\n-                  View My Certificate\r\n-                </button>\r\n+        {selectedPublicUser && (\r\n+          <div className=\"certificate-modal\">\r\n+            <div className=\"certificate-content\">\r\n+              <div className=\"certificate-header\">\r\n+                <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n               </div>\r\n-            )}\r\n-\r\n-            <div className=\"logout-section\">\r\n-              <button className=\"logout-btn\" onClick={handleLogout}>\r\n-                Logout\r\n+              <div className=\"certificate-body\">\r\n+                <div className=\"affidavit-statement\">\r\n+                  <p>\r\n+                    I, a living soul being of sound mind, competent and over the age\r\n+                    of maturity, hereby affirm the following testimony is true. I have\r\n+                    completed the fullness of the sovereign walk.\r\n+                  </p>\r\n+                </div>\r\n+                <div className=\"completed-documents-section\">\r\n+                  <h3>Completed Documents:</h3>\r\n+                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                </div>\r\n+              </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setSelectedPublicUser(null)}\r\n+              >\r\n+                Close\r\n               </button>\r\n             </div>\r\n-          </>\r\n+          </div>\r\n         )}\r\n-      </div>\r\n \r\n-      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-        <div className=\"main-content\">\r\n-          {loadingUserData ? (\r\n-            <div className=\"loading-container\">\r\n-              <div className=\"loading-spinner\"></div>\r\n-              <p>Loading your data...</p>\r\n-            </div>\r\n-          ) : (\r\n-            <>\r\n-              <h2>\r\n-                Welcome, {userData.fullNames} {userData.familyName}\r\n-              </h2>\r\n+        {hasCompletedDocuments() && (\r\n+          <div \r\n+            className=\"certificate-badge\"\r\n+            onClick={() => setShowCertificate(true)}\r\n+          >\r\n+            <span>View My Affidavit</span>\r\n+          </div>\r\n+        )}\r\n \r\n-              <button\r\n-                className=\"public-view-btn\"\r\n-                onClick={() => setShowPublicView(!showPublicView)}\r\n+        {showCertificate && (\r\n+          <div className=\"certificate-modal\">\r\n+            <div className=\"certificate-content\">\r\n+              <div className=\"certificate-header\">\r\n+                <h2>Affidavit Testimony of My Status</h2>\r\n+              </div>\r\n+              <div className=\"certificate-body\">\r\n+                <div className=\"affidavit-statement\">\r\n+                  <p>\r\n+                    I, a living soul being of sound mind, competent and over the age\r\n+                    of maturity, hereby affirm the following testimony is true. I have\r\n+                    completed the fullness of the sovereign walk.\r\n+                  </p>\r\n+                </div>\r\n+                <div className=\"completed-documents-section\">\r\n+                  <h3>Completed Documents:</h3>\r\n+                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                </div>\r\n+              </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setShowCertificate(false)}\r\n               >\r\n-                {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n+                Close\r\n               </button>\r\n-\r\n-              {showPublicView ? (\r\n-                <div className=\"public-view-container\">\r\n-                  <h3>Users with Completed Documents</h3>\r\n-                  {loadingPublicView ? (\r\n-                    <div className=\"loading-container\">\r\n-                      <div className=\"loading-spinner\"></div>\r\n-                      <p>Loading public records...</p>\r\n-                    </div>\r\n-                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n-                    <p>No users have completed all documents yet</p>\r\n-                  ) : (\r\n-                    <div className=\"completed-users-list\">\r\n-                      {Array.isArray(publicViewUsers) &&\r\n-                        publicViewUsers.map((user) => (\r\n-                          <div\r\n-                            key={user._id}\r\n-                            className=\"completed-user\"\r\n-                            onClick={() => setSelectedUser(user)}\r\n-                          >\r\n-                            <div className=\"user-info\">\r\n-                              {user.profileImage && (\r\n-                                <img\r\n-                                  src={`http://localhost:5000${user.profileImage}`}\r\n-                                  alt=\"Profile\"\r\n-                                  className=\"user-avatar\"\r\n-                                />\r\n-                              )}\r\n-                              <span>\r\n-                                {user.fullNames} {user.familyName}\r\n-                              </span>\r\n-                            </div>\r\n-                            <span className=\"completed-badge\">\r\n-                              View Certificate\r\n-                            </span>\r\n-                          </div>\r\n-                        ))}\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-              ) : (\r\n-                <div className=\"dashboard-info\">\r\n-                  <div className=\"completion-status\">\r\n-                    <h4>Your Document Completion:</h4>\r\n-                    <div className=\"progress-bar\">\r\n-                      <div\r\n-                        className=\"progress-fill\"\r\n-                        style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n-                        }}\r\n-                      ></div>\r\n-                    </div>\r\n-                    <p>\r\n-                      {hasCompletedAllDocuments ? (\r\n-                        <span className=\"completed-text\">\r\n-                          ‚úÖ All documents completed! You can now view your certificate.\r\n-                        </span>\r\n-                      ) : (\r\n-                        `${uploadedLabels.length} of 3 documents uploaded`\r\n-                      )}\r\n-                    </p>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n-            </>\r\n-          )}\r\n-        </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n       </div>\r\n+    </div>\r\n+  );\r\n+};\r\n \r\n-      {selectedUser && (\r\n-        <SatisfactionCertificate\r\n-          user={selectedUser}\r\n-          onClose={() => setSelectedUser(null)}\r\n-        />\r\n-      )}\r\n-\r\n-      {showCertificate && (\r\n-        <SatisfactionCertificate\r\n-          user={userData}\r\n-          onClose={() => setShowCertificate(false)}\r\n-        />\r\n-      )}\r\n-    </>\r\n-  );\r\n-}\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753693662312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   const [publicUsers, setPublicUsers] = useState([]);\r\n   const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n   const [uploadProgress, setUploadProgress] = useState(0);\r\n   const [isUploading, setIsUploading] = useState(false);\r\n+  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n@@ -85,17 +86,23 @@\n     }\r\n   };\r\n \r\n   const handleUpload = async () => {\r\n-    if (!selectedFolder || files.length === 0) return;\r\n+    if (!selectedFolder) return;\r\n \r\n     setIsUploading(true);\r\n     setUploadProgress(0);\r\n \r\n     const formData = new FormData();\r\n-    files.forEach(file => {\r\n-      formData.append('files', file);\r\n-    });\r\n+    if (files.length > 0) {\r\n+      files.forEach(file => {\r\n+        formData.append('files', file);\r\n+      });\r\n+    } else {\r\n+      // Handle empty folder upload\r\n+      formData.append('emptyFolder', 'true');\r\n+    }\r\n+    \r\n     formData.append('type', 'folderUpload');\r\n     formData.append('documentType', 'folderUpload');\r\n     formData.append('folderName', selectedFolder);\r\n \r\n@@ -105,12 +112,12 @@\n         headers: {\r\n           Authorization: `Bearer ${token}`,\r\n           'Content-Type': 'multipart/form-data'\r\n         },\r\n-        onUploadProgress: (progressEvent) => {\r\n+        onUploadProgress: files.length > 0 ? (progressEvent) => {\r\n           const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n           setUploadProgress(percentCompleted);\r\n-        }\r\n+        } : undefined\r\n       });\r\n \r\n       // Refresh user data after successful upload\r\n       const response = await axios.get('/api/auth/me', {\r\n@@ -159,8 +166,9 @@\n           Authorization: `Bearer ${token}`\r\n         }\r\n       });\r\n       setPublicUsers(response.data.users);\r\n+      setShowPublicView(true);\r\n     } catch (error) {\r\n       console.error('Error fetching public users:', error);\r\n     }\r\n   };\r\n@@ -171,10 +179,26 @@\n     const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n     return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n   };\r\n \r\n+  const hasUploadedFolder = (folderName) => {\r\n+    return userData?.documentRequirements?.folderUpload?.folderName === folderName;\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"home-container\">\r\n+    <div className={`home-container ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\r\n+      {/* Sidebar Toggle Button */}\r\n+      <div className=\"sidebar-toggle\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n+        {profileImage ? (\r\n+          <img src={profileImage} alt=\"Profile\" className=\"sidebar-toggle-image\" />\r\n+        ) : (\r\n+          <div className=\"sidebar-toggle-placeholder\">\r\n+            <span>‚ò∞</span>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* Sidebar */}\r\n       <div className=\"sidebar\">\r\n         <div className=\"user-profile\">\r\n           <div className=\"profile-image-container\">\r\n             <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n@@ -197,36 +221,58 @@\n           {userData && (\r\n             <div className=\"user-info\">\r\n               <h3>{userData.fullNames} {userData.familyName}</h3>\r\n               <p>{userData.email}</p>\r\n+              {hasCompletedDocuments() && (\r\n+                <div \r\n+                  className=\"view-affidavit-btn\"\r\n+                  onClick={() => setShowCertificate(true)}\r\n+                >\r\n+                  View My Affidavit\r\n+                </div>\r\n+              )}\r\n             </div>\r\n           )}\r\n         </div>\r\n \r\n-        <div className=\"upload-section\">\r\n-          <h3>Upload Documents</h3>\r\n-          <div className=\"folder-options\">\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('528')}\r\n-            >\r\n-              528 Folder\r\n+        <div className=\"sidebar-menu\">\r\n+          <div className=\"menu-section\">\r\n+            <h3>Documents</h3>\r\n+            <div className=\"folder-options\">\r\n+              <button\r\n+                className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n+                onClick={() => handleFolderSelect('528')}\r\n+              >\r\n+                528 Folder\r\n+                {hasUploadedFolder('528') && <span className=\"upload-check\">‚úì</span>}\r\n+              </button>\r\n+              <button\r\n+                className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n+                onClick={() => handleFolderSelect('928')}\r\n+              >\r\n+                928 Folder\r\n+                {hasUploadedFolder('928') && <span className=\"upload-check\">‚úì</span>}\r\n+              </button>\r\n+              <button\r\n+                className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n+                onClick={() => handleFolderSelect('Praecipe')}\r\n+              >\r\n+                Praecipe Folder\r\n+                {hasUploadedFolder('Praecipe') && <span className=\"upload-check\">‚úì</span>}\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"menu-section\">\r\n+            <h3>Public Records</h3>\r\n+            <button className=\"public-view-btn\" onClick={fetchPublicUsers}>\r\n+              Browse Public Affidavits\r\n             </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('928')}\r\n-            >\r\n-              928 Folder\r\n-            </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('Praecipe')}\r\n-            >\r\n-              Praecipe Folder\r\n-            </button>\r\n           </div>\r\n+        </div>\r\n \r\n-          {selectedFolder && (\r\n+        {selectedFolder && (\r\n+          <div className=\"upload-section\">\r\n             <div className=\"file-upload-container\">\r\n               <input\r\n                 type=\"file\"\r\n                 id=\"file-upload\"\r\n@@ -238,91 +284,99 @@\n               />\r\n               <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n                 Choose {selectedFolder} Folder\r\n               </label>\r\n-              {files.length > 0 && (\r\n+              {files.length > 0 ? (\r\n                 <div className=\"selected-files\">\r\n                   <p>Selected {files.length} files</p>\r\n-                  <button onClick={handleUpload} disabled={isUploading}>\r\n-                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n-                  </button>\r\n                 </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {userData?.documentRequirements && (\r\n-            <div className=\"uploaded-documents\">\r\n-              <h4>Uploaded Documents:</h4>\r\n-              {userData.documentRequirements.politicalDeclaration && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Political Declaration</span>\r\n-                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n+              ) : (\r\n+                <div className=\"empty-folder-note\">\r\n+                  <p>No files selected (will create empty folder)</p>\r\n                 </div>\r\n               )}\r\n-              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n-                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-              {userData.documentRequirements.idDocumentFile && (\r\n-                <div className=\"document-item\">\r\n-                  <span>ID Document</span>\r\n-                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n+              <div className=\"upload-actions\">\r\n+                <button \r\n+                  onClick={handleUpload} \r\n+                  disabled={isUploading}\r\n+                  className=\"upload-btn\"\r\n+                >\r\n+                  {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload Folder'}\r\n+                </button>\r\n+                {hasUploadedFolder(selectedFolder) && (\r\n+                  <button \r\n+                    onClick={() => handleDeleteDocument('folderUpload')}\r\n+                    className=\"delete-btn\"\r\n+                  >\r\n+                    Delete Folder\r\n+                  </button>\r\n+                )}\r\n+              </div>\r\n             </div>\r\n-          )}\r\n-        </div>\r\n+          </div>\r\n+        )}\r\n       </div>\r\n \r\n+      {/* Main Content */}\r\n       <div className=\"main-content\">\r\n-        <button \r\n-          className=\"public-view-btn\"\r\n-          onClick={() => {\r\n-            setShowPublicView(!showPublicView);\r\n-            fetchPublicUsers();\r\n-          }}\r\n-        >\r\n-          Public View\r\n-        </button>\r\n-\r\n         {showPublicView && (\r\n           <div className=\"public-view-modal\">\r\n             <div className=\"public-view-content\">\r\n-              <h3>Public Records</h3>\r\n+              <div className=\"modal-header\">\r\n+                <h3>Public Records</h3>\r\n+                <button \r\n+                  className=\"close-modal\"\r\n+                  onClick={() => setShowPublicView(false)}\r\n+                >\r\n+                  √ó\r\n+                </button>\r\n+              </div>\r\n               <div className=\"public-users-list\">\r\n-                {publicUsers.map(user => (\r\n-                  <div \r\n-                    key={user._id} \r\n-                    className=\"public-user-item\"\r\n-                    onClick={() => setSelectedPublicUser(user)}\r\n-                  >\r\n-                    <div className=\"public-user-profile\">\r\n-                      {user.profileImage && (\r\n-                        <img src={user.profileImage} alt={user.fullNames} />\r\n-                      )}\r\n-                      <span>{user.fullNames} {user.familyName}</span>\r\n+                {publicUsers.length > 0 ? (\r\n+                  publicUsers.map(user => (\r\n+                    <div \r\n+                      key={user._id} \r\n+                      className=\"public-user-item\"\r\n+                      onClick={() => setSelectedPublicUser(user)}\r\n+                    >\r\n+                      <div className=\"public-user-profile\">\r\n+                        {user.profileImage ? (\r\n+                          <img src={user.profileImage} alt={user.fullNames} />\r\n+                        ) : (\r\n+                          <div className=\"public-user-placeholder\">\r\n+                            {user.fullNames.charAt(0)}\r\n+                          </div>\r\n+                        )}\r\n+                        <div className=\"public-user-info\">\r\n+                          <span className=\"public-user-name\">{user.fullNames} {user.familyName}</span>\r\n+                          <span className=\"public-user-date\">\r\n+                            Completed: {new Date(user.documentRequirements.uploadedAt).toLocaleDateString()}\r\n+                          </span>\r\n+                        </div>\r\n+                      </div>\r\n                     </div>\r\n+                  ))\r\n+                ) : (\r\n+                  <div className=\"no-public-users\">\r\n+                    No public records available\r\n                   </div>\r\n-                ))}\r\n+                )}\r\n               </div>\r\n-              <button \r\n-                className=\"close-public-view\"\r\n-                onClick={() => setShowPublicView(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n         {selectedPublicUser && (\r\n           <div className=\"certificate-modal\">\r\n             <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n+              <div className=\"modal-header\">\r\n                 <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n+                <button \r\n+                  className=\"close-modal\"\r\n+                  onClick={() => setSelectedPublicUser(null)}\r\n+                >\r\n+                  √ó\r\n+                </button>\r\n               </div>\r\n               <div className=\"certificate-body\">\r\n                 <div className=\"affidavit-statement\">\r\n                   <p>\r\n@@ -332,35 +386,40 @@\n                   </p>\r\n                 </div>\r\n                 <div className=\"completed-documents-section\">\r\n                   <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                  <div className=\"document-list\">\r\n+                    <div className=\"document-item\">\r\n+                      <span>Political Declaration</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                    <div className=\"document-item\">\r\n+                      <span>Witness Testimonies ({selectedPublicUser.documentRequirements.witnessTestimonies.length})</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                    <div className=\"document-item\">\r\n+                      <span>ID Document</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                  </div>\r\n+                  <p className=\"upload-date\">Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n                 </div>\r\n               </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setSelectedPublicUser(null)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n-        {hasCompletedDocuments() && (\r\n-          <div \r\n-            className=\"certificate-badge\"\r\n-            onClick={() => setShowCertificate(true)}\r\n-          >\r\n-            <span>View My Affidavit</span>\r\n-          </div>\r\n-        )}\r\n-\r\n         {showCertificate && (\r\n           <div className=\"certificate-modal\">\r\n             <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n+              <div className=\"modal-header\">\r\n                 <h2>Affidavit Testimony of My Status</h2>\r\n+                <button \r\n+                  className=\"close-modal\"\r\n+                  onClick={() => setShowCertificate(false)}\r\n+                >\r\n+                  √ó\r\n+                </button>\r\n               </div>\r\n               <div className=\"certificate-body\">\r\n                 <div className=\"affidavit-statement\">\r\n                   <p>\r\n@@ -370,20 +429,117 @@\n                   </p>\r\n                 </div>\r\n                 <div className=\"completed-documents-section\">\r\n                   <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                  <div className=\"document-list\">\r\n+                    <div className=\"document-item\">\r\n+                      <span>Political Declaration</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                    <div className=\"document-item\">\r\n+                      <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                    <div className=\"document-item\">\r\n+                      <span>ID Document</span>\r\n+                      <span className=\"document-status verified\">‚úì Verified</span>\r\n+                    </div>\r\n+                    {userData.documentRequirements.folderUpload && (\r\n+                      <div className=\"document-item\">\r\n+                        <span>{userData.documentRequirements.folderUpload.folderName} Folder</span>\r\n+                        <span className=\"document-status verified\">‚úì Verified</span>\r\n+                      </div>\r\n+                    )}\r\n+                  </div>\r\n+                  <p className=\"upload-date\">Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n                 </div>\r\n               </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setShowCertificate(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n+\r\n+        {!showPublicView && !showCertificate && !selectedPublicUser && (\r\n+          <div className=\"dashboard-content\">\r\n+            <div className=\"dashboard-header\">\r\n+              <h2>Welcome, {userData?.fullNames || 'User'}</h2>\r\n+              <p>Manage your documents and view public records</p>\r\n+            </div>\r\n+            \r\n+            <div className=\"dashboard-cards\">\r\n+              <div className=\"dashboard-card\">\r\n+                <h3>Document Status</h3>\r\n+                <div className=\"status-list\">\r\n+                  <div className=\"status-item\">\r\n+                    <span>Political Declaration</span>\r\n+                    <span className={`status-indicator ${userData?.documentRequirements?.politicalDeclaration ? 'completed' : 'pending'}`}>\r\n+                      {userData?.documentRequirements?.politicalDeclaration ? '‚úì' : '‚úó'}\r\n+                    </span>\r\n+                  </div>\r\n+                  <div className=\"status-item\">\r\n+                    <span>Witness Testimonies</span>\r\n+                    <span className={`status-indicator ${userData?.documentRequirements?.witnessTestimonies?.length > 0 ? 'completed' : 'pending'}`}>\r\n+                      {userData?.documentRequirements?.witnessTestimonies?.length > 0 ? '‚úì' : '‚úó'}\r\n+                    </span>\r\n+                  </div>\r\n+                  <div className=\"status-item\">\r\n+                    <span>ID Document</span>\r\n+                    <span className={`status-indicator ${userData?.documentRequirements?.idDocumentFile ? 'completed' : 'pending'}`}>\r\n+                      {userData?.documentRequirements?.idDocumentFile ? '‚úì' : '‚úó'}\r\n+                    </span>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div className=\"dashboard-card\">\r\n+                <h3>Uploaded Folders</h3>\r\n+                {userData?.documentRequirements?.folderUpload ? (\r\n+                  <div className=\"folder-status\">\r\n+                    <div className=\"folder-item\">\r\n+                      <span>{userData.documentRequirements.folderUpload.folderName}</span>\r\n+                      <span className=\"folder-actions\">\r\n+                        <span className=\"upload-check\">‚úì Uploaded</span>\r\n+                        <button \r\n+                          onClick={() => handleDeleteDocument('folderUpload')}\r\n+                          className=\"delete-btn small\"\r\n+                        >\r\n+                          Delete\r\n+                        </button>\r\n+                      </span>\r\n+                    </div>\r\n+                  </div>\r\n+                ) : (\r\n+                  <p>No folders uploaded yet</p>\r\n+                )}\r\n+              </div>\r\n+\r\n+              <div className=\"dashboard-card\">\r\n+                <h3>Quick Actions</h3>\r\n+                <div className=\"quick-actions\">\r\n+                  <button \r\n+                    className=\"action-btn primary\"\r\n+                    onClick={() => setSelectedFolder('528')}\r\n+                  >\r\n+                    Upload 528 Folder\r\n+                  </button>\r\n+                  <button \r\n+                    className=\"action-btn secondary\"\r\n+                    onClick={fetchPublicUsers}\r\n+                  >\r\n+                    Browse Public Records\r\n+                  </button>\r\n+                  {hasCompletedDocuments() && (\r\n+                    <button \r\n+                      className=\"action-btn tertiary\"\r\n+                      onClick={() => setShowCertificate(true)}\r\n+                    >\r\n+                      View My Affidavit\r\n+                    </button>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1753694005309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n   const [publicUsers, setPublicUsers] = useState([]);\r\n   const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n   const [uploadProgress, setUploadProgress] = useState(0);\r\n   const [isUploading, setIsUploading] = useState(false);\r\n-  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n@@ -86,23 +85,17 @@\n     }\r\n   };\r\n \r\n   const handleUpload = async () => {\r\n-    if (!selectedFolder) return;\r\n+    if (!selectedFolder || files.length === 0) return;\r\n \r\n     setIsUploading(true);\r\n     setUploadProgress(0);\r\n \r\n     const formData = new FormData();\r\n-    if (files.length > 0) {\r\n-      files.forEach(file => {\r\n-        formData.append('files', file);\r\n-      });\r\n-    } else {\r\n-      // Handle empty folder upload\r\n-      formData.append('emptyFolder', 'true');\r\n-    }\r\n-    \r\n+    files.forEach(file => {\r\n+      formData.append('files', file);\r\n+    });\r\n     formData.append('type', 'folderUpload');\r\n     formData.append('documentType', 'folderUpload');\r\n     formData.append('folderName', selectedFolder);\r\n \r\n@@ -112,12 +105,12 @@\n         headers: {\r\n           Authorization: `Bearer ${token}`,\r\n           'Content-Type': 'multipart/form-data'\r\n         },\r\n-        onUploadProgress: files.length > 0 ? (progressEvent) => {\r\n+        onUploadProgress: (progressEvent) => {\r\n           const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n           setUploadProgress(percentCompleted);\r\n-        } : undefined\r\n+        }\r\n       });\r\n \r\n       // Refresh user data after successful upload\r\n       const response = await axios.get('/api/auth/me', {\r\n@@ -166,9 +159,8 @@\n           Authorization: `Bearer ${token}`\r\n         }\r\n       });\r\n       setPublicUsers(response.data.users);\r\n-      setShowPublicView(true);\r\n     } catch (error) {\r\n       console.error('Error fetching public users:', error);\r\n     }\r\n   };\r\n@@ -179,26 +171,10 @@\n     const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n     return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n   };\r\n \r\n-  const hasUploadedFolder = (folderName) => {\r\n-    return userData?.documentRequirements?.folderUpload?.folderName === folderName;\r\n-  };\r\n-\r\n   return (\r\n-    <div className={`home-container ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\r\n-      {/* Sidebar Toggle Button */}\r\n-      <div className=\"sidebar-toggle\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n-        {profileImage ? (\r\n-          <img src={profileImage} alt=\"Profile\" className=\"sidebar-toggle-image\" />\r\n-        ) : (\r\n-          <div className=\"sidebar-toggle-placeholder\">\r\n-            <span>‚ò∞</span>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* Sidebar */}\r\n+    <div className=\"home-container\">\r\n       <div className=\"sidebar\">\r\n         <div className=\"user-profile\">\r\n           <div className=\"profile-image-container\">\r\n             <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n@@ -221,58 +197,36 @@\n           {userData && (\r\n             <div className=\"user-info\">\r\n               <h3>{userData.fullNames} {userData.familyName}</h3>\r\n               <p>{userData.email}</p>\r\n-              {hasCompletedDocuments() && (\r\n-                <div \r\n-                  className=\"view-affidavit-btn\"\r\n-                  onClick={() => setShowCertificate(true)}\r\n-                >\r\n-                  View My Affidavit\r\n-                </div>\r\n-              )}\r\n             </div>\r\n           )}\r\n         </div>\r\n \r\n-        <div className=\"sidebar-menu\">\r\n-          <div className=\"menu-section\">\r\n-            <h3>Documents</h3>\r\n-            <div className=\"folder-options\">\r\n-              <button\r\n-                className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n-                onClick={() => handleFolderSelect('528')}\r\n-              >\r\n-                528 Folder\r\n-                {hasUploadedFolder('528') && <span className=\"upload-check\">‚úì</span>}\r\n-              </button>\r\n-              <button\r\n-                className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n-                onClick={() => handleFolderSelect('928')}\r\n-              >\r\n-                928 Folder\r\n-                {hasUploadedFolder('928') && <span className=\"upload-check\">‚úì</span>}\r\n-              </button>\r\n-              <button\r\n-                className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n-                onClick={() => handleFolderSelect('Praecipe')}\r\n-              >\r\n-                Praecipe Folder\r\n-                {hasUploadedFolder('Praecipe') && <span className=\"upload-check\">‚úì</span>}\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"menu-section\">\r\n-            <h3>Public Records</h3>\r\n-            <button className=\"public-view-btn\" onClick={fetchPublicUsers}>\r\n-              Browse Public Affidavits\r\n+        <div className=\"upload-section\">\r\n+          <h3>Upload Documents</h3>\r\n+          <div className=\"folder-options\">\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('528')}\r\n+            >\r\n+              528 Folder\r\n             </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('928')}\r\n+            >\r\n+              928 Folder\r\n+            </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('Praecipe')}\r\n+            >\r\n+              Praecipe Folder\r\n+            </button>\r\n           </div>\r\n-        </div>\r\n \r\n-        {selectedFolder && (\r\n-          <div className=\"upload-section\">\r\n+          {selectedFolder && (\r\n             <div className=\"file-upload-container\">\r\n               <input\r\n                 type=\"file\"\r\n                 id=\"file-upload\"\r\n@@ -284,99 +238,91 @@\n               />\r\n               <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n                 Choose {selectedFolder} Folder\r\n               </label>\r\n-              {files.length > 0 ? (\r\n+              {files.length > 0 && (\r\n                 <div className=\"selected-files\">\r\n                   <p>Selected {files.length} files</p>\r\n+                  <button onClick={handleUpload} disabled={isUploading}>\r\n+                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n+                  </button>\r\n                 </div>\r\n-              ) : (\r\n-                <div className=\"empty-folder-note\">\r\n-                  <p>No files selected (will create empty folder)</p>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+\r\n+          {userData?.documentRequirements && (\r\n+            <div className=\"uploaded-documents\">\r\n+              <h4>Uploaded Documents:</h4>\r\n+              {userData.documentRequirements.politicalDeclaration && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Political Declaration</span>\r\n+                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n                 </div>\r\n               )}\r\n-              <div className=\"upload-actions\">\r\n-                <button \r\n-                  onClick={handleUpload} \r\n-                  disabled={isUploading}\r\n-                  className=\"upload-btn\"\r\n-                >\r\n-                  {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload Folder'}\r\n-                </button>\r\n-                {hasUploadedFolder(selectedFolder) && (\r\n-                  <button \r\n-                    onClick={() => handleDeleteDocument('folderUpload')}\r\n-                    className=\"delete-btn\"\r\n-                  >\r\n-                    Delete Folder\r\n-                  </button>\r\n-                )}\r\n-              </div>\r\n+              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n+                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n+                </div>\r\n+              )}\r\n+              {userData.documentRequirements.idDocumentFile && (\r\n+                <div className=\"document-item\">\r\n+                  <span>ID Document</span>\r\n+                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n+                </div>\r\n+              )}\r\n             </div>\r\n-          </div>\r\n-        )}\r\n+          )}\r\n+        </div>\r\n       </div>\r\n \r\n-      {/* Main Content */}\r\n       <div className=\"main-content\">\r\n+        <button \r\n+          className=\"public-view-btn\"\r\n+          onClick={() => {\r\n+            setShowPublicView(!showPublicView);\r\n+            fetchPublicUsers();\r\n+          }}\r\n+        >\r\n+          Public View\r\n+        </button>\r\n+\r\n         {showPublicView && (\r\n           <div className=\"public-view-modal\">\r\n             <div className=\"public-view-content\">\r\n-              <div className=\"modal-header\">\r\n-                <h3>Public Records</h3>\r\n-                <button \r\n-                  className=\"close-modal\"\r\n-                  onClick={() => setShowPublicView(false)}\r\n-                >\r\n-                  √ó\r\n-                </button>\r\n-              </div>\r\n+              <h3>Public Records</h3>\r\n               <div className=\"public-users-list\">\r\n-                {publicUsers.length > 0 ? (\r\n-                  publicUsers.map(user => (\r\n-                    <div \r\n-                      key={user._id} \r\n-                      className=\"public-user-item\"\r\n-                      onClick={() => setSelectedPublicUser(user)}\r\n-                    >\r\n-                      <div className=\"public-user-profile\">\r\n-                        {user.profileImage ? (\r\n-                          <img src={user.profileImage} alt={user.fullNames} />\r\n-                        ) : (\r\n-                          <div className=\"public-user-placeholder\">\r\n-                            {user.fullNames.charAt(0)}\r\n-                          </div>\r\n-                        )}\r\n-                        <div className=\"public-user-info\">\r\n-                          <span className=\"public-user-name\">{user.fullNames} {user.familyName}</span>\r\n-                          <span className=\"public-user-date\">\r\n-                            Completed: {new Date(user.documentRequirements.uploadedAt).toLocaleDateString()}\r\n-                          </span>\r\n-                        </div>\r\n-                      </div>\r\n+                {publicUsers.map(user => (\r\n+                  <div \r\n+                    key={user._id} \r\n+                    className=\"public-user-item\"\r\n+                    onClick={() => setSelectedPublicUser(user)}\r\n+                  >\r\n+                    <div className=\"public-user-profile\">\r\n+                      {user.profileImage && (\r\n+                        <img src={user.profileImage} alt={user.fullNames} />\r\n+                      )}\r\n+                      <span>{user.fullNames} {user.familyName}</span>\r\n                     </div>\r\n-                  ))\r\n-                ) : (\r\n-                  <div className=\"no-public-users\">\r\n-                    No public records available\r\n                   </div>\r\n-                )}\r\n+                ))}\r\n               </div>\r\n+              <button \r\n+                className=\"close-public-view\"\r\n+                onClick={() => setShowPublicView(false)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n         {selectedPublicUser && (\r\n           <div className=\"certificate-modal\">\r\n             <div className=\"certificate-content\">\r\n-              <div className=\"modal-header\">\r\n+              <div className=\"certificate-header\">\r\n                 <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n-                <button \r\n-                  className=\"close-modal\"\r\n-                  onClick={() => setSelectedPublicUser(null)}\r\n-                >\r\n-                  √ó\r\n-                </button>\r\n               </div>\r\n               <div className=\"certificate-body\">\r\n                 <div className=\"affidavit-statement\">\r\n                   <p>\r\n@@ -386,40 +332,35 @@\n                   </p>\r\n                 </div>\r\n                 <div className=\"completed-documents-section\">\r\n                   <h3>Completed Documents:</h3>\r\n-                  <div className=\"document-list\">\r\n-                    <div className=\"document-item\">\r\n-                      <span>Political Declaration</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                    <div className=\"document-item\">\r\n-                      <span>Witness Testimonies ({selectedPublicUser.documentRequirements.witnessTestimonies.length})</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                    <div className=\"document-item\">\r\n-                      <span>ID Document</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                  </div>\r\n-                  <p className=\"upload-date\">Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n                 </div>\r\n               </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setSelectedPublicUser(null)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n \r\n+        {hasCompletedDocuments() && (\r\n+          <div \r\n+            className=\"certificate-badge\"\r\n+            onClick={() => setShowCertificate(true)}\r\n+          >\r\n+            <span>View My Affidavit</span>\r\n+          </div>\r\n+        )}\r\n+\r\n         {showCertificate && (\r\n           <div className=\"certificate-modal\">\r\n             <div className=\"certificate-content\">\r\n-              <div className=\"modal-header\">\r\n+              <div className=\"certificate-header\">\r\n                 <h2>Affidavit Testimony of My Status</h2>\r\n-                <button \r\n-                  className=\"close-modal\"\r\n-                  onClick={() => setShowCertificate(false)}\r\n-                >\r\n-                  √ó\r\n-                </button>\r\n               </div>\r\n               <div className=\"certificate-body\">\r\n                 <div className=\"affidavit-statement\">\r\n                   <p>\r\n@@ -429,117 +370,20 @@\n                   </p>\r\n                 </div>\r\n                 <div className=\"completed-documents-section\">\r\n                   <h3>Completed Documents:</h3>\r\n-                  <div className=\"document-list\">\r\n-                    <div className=\"document-item\">\r\n-                      <span>Political Declaration</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                    <div className=\"document-item\">\r\n-                      <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                    <div className=\"document-item\">\r\n-                      <span>ID Document</span>\r\n-                      <span className=\"document-status verified\">‚úì Verified</span>\r\n-                    </div>\r\n-                    {userData.documentRequirements.folderUpload && (\r\n-                      <div className=\"document-item\">\r\n-                        <span>{userData.documentRequirements.folderUpload.folderName} Folder</span>\r\n-                        <span className=\"document-status verified\">‚úì Verified</span>\r\n-                      </div>\r\n-                    )}\r\n-                  </div>\r\n-                  <p className=\"upload-date\">Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n                 </div>\r\n               </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setShowCertificate(false)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         )}\r\n-\r\n-        {!showPublicView && !showCertificate && !selectedPublicUser && (\r\n-          <div className=\"dashboard-content\">\r\n-            <div className=\"dashboard-header\">\r\n-              <h2>Welcome, {userData?.fullNames || 'User'}</h2>\r\n-              <p>Manage your documents and view public records</p>\r\n-            </div>\r\n-            \r\n-            <div className=\"dashboard-cards\">\r\n-              <div className=\"dashboard-card\">\r\n-                <h3>Document Status</h3>\r\n-                <div className=\"status-list\">\r\n-                  <div className=\"status-item\">\r\n-                    <span>Political Declaration</span>\r\n-                    <span className={`status-indicator ${userData?.documentRequirements?.politicalDeclaration ? 'completed' : 'pending'}`}>\r\n-                      {userData?.documentRequirements?.politicalDeclaration ? '‚úì' : '‚úó'}\r\n-                    </span>\r\n-                  </div>\r\n-                  <div className=\"status-item\">\r\n-                    <span>Witness Testimonies</span>\r\n-                    <span className={`status-indicator ${userData?.documentRequirements?.witnessTestimonies?.length > 0 ? 'completed' : 'pending'}`}>\r\n-                      {userData?.documentRequirements?.witnessTestimonies?.length > 0 ? '‚úì' : '‚úó'}\r\n-                    </span>\r\n-                  </div>\r\n-                  <div className=\"status-item\">\r\n-                    <span>ID Document</span>\r\n-                    <span className={`status-indicator ${userData?.documentRequirements?.idDocumentFile ? 'completed' : 'pending'}`}>\r\n-                      {userData?.documentRequirements?.idDocumentFile ? '‚úì' : '‚úó'}\r\n-                    </span>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-\r\n-              <div className=\"dashboard-card\">\r\n-                <h3>Uploaded Folders</h3>\r\n-                {userData?.documentRequirements?.folderUpload ? (\r\n-                  <div className=\"folder-status\">\r\n-                    <div className=\"folder-item\">\r\n-                      <span>{userData.documentRequirements.folderUpload.folderName}</span>\r\n-                      <span className=\"folder-actions\">\r\n-                        <span className=\"upload-check\">‚úì Uploaded</span>\r\n-                        <button \r\n-                          onClick={() => handleDeleteDocument('folderUpload')}\r\n-                          className=\"delete-btn small\"\r\n-                        >\r\n-                          Delete\r\n-                        </button>\r\n-                      </span>\r\n-                    </div>\r\n-                  </div>\r\n-                ) : (\r\n-                  <p>No folders uploaded yet</p>\r\n-                )}\r\n-              </div>\r\n-\r\n-              <div className=\"dashboard-card\">\r\n-                <h3>Quick Actions</h3>\r\n-                <div className=\"quick-actions\">\r\n-                  <button \r\n-                    className=\"action-btn primary\"\r\n-                    onClick={() => setSelectedFolder('528')}\r\n-                  >\r\n-                    Upload 528 Folder\r\n-                  </button>\r\n-                  <button \r\n-                    className=\"action-btn secondary\"\r\n-                    onClick={fetchPublicUsers}\r\n-                  >\r\n-                    Browse Public Records\r\n-                  </button>\r\n-                  {hasCompletedDocuments() && (\r\n-                    <button \r\n-                      className=\"action-btn tertiary\"\r\n-                      onClick={() => setShowCertificate(true)}\r\n-                    >\r\n-                      View My Affidavit\r\n-                    </button>\r\n-                  )}\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1753695206449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,402 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import './Home.css';\r\n+\r\n+const Home = () => {\r\n+  const [selectedFolder, setSelectedFolder] = useState(null);\r\n+  const [files, setFiles] = useState([]);\r\n+  const [profileImage, setProfileImage] = useState(null);\r\n+  const [userData, setUserData] = useState(null);\r\n+  const [showCertificate, setShowCertificate] = useState(false);\r\n+  const [showPublicView, setShowPublicView] = useState(false);\r\n+  const [publicUsers, setPublicUsers] = useState([]);\r\n+  const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n+  const [uploadProgress, setUploadProgress] = useState(0);\r\n+  const [isUploading, setIsUploading] = useState(false);\r\n+  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const token = localStorage.getItem('token');\r\n+        if (!token) {\r\n+          navigate('/login');\r\n+          return;\r\n+        }\r\n+\r\n+        const response = await axios.get('/api/auth/me', {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`\r\n+          }\r\n+        });\r\n+\r\n+        setUserData(response.data);\r\n+        if (response.data.profileImage) {\r\n+          setProfileImage(`${'http://localhost:5000'}${response.data.profileImage}`);\r\n+        }\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        localStorage.removeItem('token');\r\n+        navigate('/login');\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserData();\r\n+  }, [navigate]);\r\n+\r\n+  const handleFolderSelect = (folderType) => {\r\n+    setSelectedFolder(folderType);\r\n+  };\r\n+\r\n+  const handleFileChange = (e) => {\r\n+    if (e.target.files) {\r\n+      setFiles(Array.from(e.target.files));\r\n+    }\r\n+  };\r\n+\r\n+  const handleProfileImageChange = (e) => {\r\n+    if (e.target.files && e.target.files[0]) {\r\n+      const file = e.target.files[0];\r\n+      if (file.size > 50 * 1024 * 1024) {\r\n+        alert('Profile image size must be less than 50MB');\r\n+        return;\r\n+      }\r\n+      setProfileImage(URL.createObjectURL(file));\r\n+      uploadProfileImage(file);\r\n+    }\r\n+  };\r\n+\r\n+  const uploadProfileImage = async (file) => {\r\n+    const formData = new FormData();\r\n+    formData.append('file', file);\r\n+    formData.append('type', 'profileImage');\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/upload', formData, {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+          'Content-Type': 'multipart/form-data'\r\n+        }\r\n+      });\r\n+    } catch (error) {\r\n+      console.error('Error uploading profile image:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleUpload = async () => {\r\n+    if (!selectedFolder || files.length === 0) return;\r\n+\r\n+    setIsUploading(true);\r\n+    setUploadProgress(0);\r\n+\r\n+    const formData = new FormData();\r\n+    files.forEach(file => {\r\n+      formData.append('files', file);\r\n+    });\r\n+    formData.append('type', 'folderUpload');\r\n+    formData.append('documentType', 'folderUpload');\r\n+    formData.append('folderName', selectedFolder);\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/upload', formData, {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+          'Content-Type': 'multipart/form-data'\r\n+        },\r\n+        onUploadProgress: (progressEvent) => {\r\n+          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n+          setUploadProgress(percentCompleted);\r\n+        }\r\n+      });\r\n+\r\n+      // Refresh user data after successful upload\r\n+      const response = await axios.get('/api/auth/me', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n+      });\r\n+      setUserData(response.data);\r\n+\r\n+      setFiles([]);\r\n+      setSelectedFolder(null);\r\n+    } catch (error) {\r\n+      console.error('Error uploading files:', error);\r\n+    } finally {\r\n+      setIsUploading(false);\r\n+      setUploadProgress(0);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDeleteDocument = async (documentType) => {\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      await axios.post('/api/home/delete-document', { documentType }, {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n+      });\r\n+\r\n+      // Refresh user data after successful deletion\r\n+      const response = await axios.get('/api/auth/me', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n+      });\r\n+      setUserData(response.data);\r\n+    } catch (error) {\r\n+      console.error('Error deleting document:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const fetchPublicUsers = async () => {\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      const response = await axios.get('/api/home/public-view', {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n+      });\r\n+      setPublicUsers(response.data.users);\r\n+    } catch (error) {\r\n+      console.error('Error fetching public users:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const hasCompletedDocuments = () => {\r\n+    if (!userData?.documentRequirements) return false;\r\n+    \r\n+    const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n+    return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"home-container\">\r\n+      {/* Sidebar Toggle Button */}\r\n+      <button \r\n+        className=\"sidebar-toggle\"\r\n+        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n+      >\r\n+        {sidebarOpen ? '‚úï' : '‚ò∞'}\r\n+      </button>\r\n+\r\n+      {/* Sidebar */}\r\n+      <div className={`sidebar ${sidebarOpen ? 'active' : ''}`}>\r\n+        <div className=\"user-profile\">\r\n+          <div className=\"profile-image-container\">\r\n+            <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n+              {profileImage ? (\r\n+                <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n+              ) : (\r\n+                <div className=\"profile-placeholder\">\r\n+                  <span>Upload Profile</span>\r\n+                </div>\r\n+              )}\r\n+            </label>\r\n+            <input\r\n+              id=\"profile-upload\"\r\n+              type=\"file\"\r\n+              accept=\"image/*\"\r\n+              onChange={handleProfileImageChange}\r\n+              style={{ display: 'none' }}\r\n+            />\r\n+          </div>\r\n+          {userData && (\r\n+            <div className=\"user-info\">\r\n+              <h3>{userData.fullNames} {userData.familyName}</h3>\r\n+              <p>{userData.email}</p>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+\r\n+        <div className=\"upload-section\">\r\n+          <h3>Upload Documents</h3>\r\n+          <div className=\"folder-options\">\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('528')}\r\n+            >\r\n+              528 Folder\r\n+            </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('928')}\r\n+            >\r\n+              928 Folder\r\n+            </button>\r\n+            <button\r\n+              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n+              onClick={() => handleFolderSelect('Praecipe')}\r\n+            >\r\n+              Praecipe Folder\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {selectedFolder && (\r\n+            <div className=\"file-upload-container\">\r\n+              <input\r\n+                type=\"file\"\r\n+                id=\"file-upload\"\r\n+                onChange={handleFileChange}\r\n+                multiple\r\n+                directory=\"\"\r\n+                webkitdirectory=\"\"\r\n+                style={{ display: 'none' }}\r\n+              />\r\n+              <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n+                Choose {selectedFolder} Folder\r\n+              </label>\r\n+              {files.length > 0 && (\r\n+                <div className=\"selected-files\">\r\n+                  <p>Selected {files.length} files</p>\r\n+                  <button onClick={handleUpload} disabled={isUploading}>\r\n+                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n+                  </button>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+\r\n+          {userData?.documentRequirements && (\r\n+            <div className=\"uploaded-documents\">\r\n+              <h4>Uploaded Documents:</h4>\r\n+              {userData.documentRequirements.politicalDeclaration && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Political Declaration</span>\r\n+                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n+                </div>\r\n+              )}\r\n+              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-item\">\r\n+                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n+                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n+                </div>\r\n+              )}\r\n+              {userData.documentRequirements.idDocumentFile && (\r\n+                <div className=\"document-item\">\r\n+                  <span>ID Document</span>\r\n+                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Main Content */}\r\n+      <div className={`main-content ${sidebarOpen ? 'sidebar-open' : ''}`}>\r\n+        <button \r\n+          className=\"public-view-btn\"\r\n+          onClick={() => {\r\n+            setShowPublicView(!showPublicView);\r\n+            fetchPublicUsers();\r\n+          }}\r\n+        >\r\n+          Public View\r\n+        </button>\r\n+\r\n+        {showPublicView && (\r\n+          <div className=\"public-view-modal active\">\r\n+            <div className=\"public-view-content\">\r\n+              <h3>Public Records</h3>\r\n+              <div className=\"public-users-list\">\r\n+                {publicUsers.map(user => (\r\n+                  <div \r\n+                    key={user._id} \r\n+                    className=\"public-user-item\"\r\n+                    onClick={() => setSelectedPublicUser(user)}\r\n+                  >\r\n+                    <div className=\"public-user-profile\">\r\n+                      {user.profileImage && (\r\n+                        <img src={`http://localhost:5000${user.profileImage}`} alt={user.fullNames} />\r\n+                      )}\r\n+                      <span>{user.fullNames} {user.familyName}</span>\r\n+                    </div>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+              <button \r\n+                className=\"close-public-view\"\r\n+                onClick={() => setShowPublicView(false)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {selectedPublicUser && (\r\n+          <div className=\"certificate-modal active\">\r\n+            <div className=\"certificate-content\">\r\n+              <div className=\"certificate-header\">\r\n+                <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n+              </div>\r\n+              <div className=\"certificate-body\">\r\n+                <div className=\"affidavit-statement\">\r\n+                  <p>\r\n+                    I, a living soul being of sound mind, competent and over the age\r\n+                    of maturity, hereby affirm the following testimony is true. I have\r\n+                    completed the fullness of the sovereign walk.\r\n+                  </p>\r\n+                </div>\r\n+                <div className=\"completed-documents-section\">\r\n+                  <h3>Completed Documents:</h3>\r\n+                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                </div>\r\n+              </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setSelectedPublicUser(null)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {hasCompletedDocuments() && (\r\n+          <div \r\n+            className=\"certificate-badge\"\r\n+            onClick={() => setShowCertificate(true)}\r\n+          >\r\n+            <span>View My Affidavit</span>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {showCertificate && (\r\n+          <div className=\"certificate-modal active\">\r\n+            <div className=\"certificate-content\">\r\n+              <div className=\"certificate-header\">\r\n+                <h2>Affidavit Testimony of My Status</h2>\r\n+              </div>\r\n+              <div className=\"certificate-body\">\r\n+                <div className=\"affidavit-statement\">\r\n+                  <p>\r\n+                    I, a living soul being of sound mind, competent and over the age\r\n+                    of maturity, hereby affirm the following testimony is true. I have\r\n+                    completed the fullness of the sovereign walk.\r\n+                  </p>\r\n+                </div>\r\n+                <div className=\"completed-documents-section\">\r\n+                  <h3>Completed Documents:</h3>\r\n+                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n+                </div>\r\n+              </div>\r\n+              <button \r\n+                className=\"close-certificate\"\r\n+                onClick={() => setShowCertificate(false)}\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753698610078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,741 @@\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import \"./Home.css\";\r\n+\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n+  const [isUploading, setIsUploading] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+  const fileInputRef = useRef(null);\r\n+\r\n+  const handleFolderUpload = (e) => {\r\n+    const files = Array.from(e.target.files);\r\n+    if (files.length === 0) return;\r\n+\r\n+    const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n+    if (totalSize > 50 * 1024 * 1024) {\r\n+      alert(\"Total folder size too large (max 50MB)\");\r\n+      return;\r\n+    }\r\n+\r\n+    handleUpload(files);\r\n+  };\r\n+\r\n+  const handleUpload = async (files) => {\r\n+    const formData = new FormData();\r\n+    files.forEach((file) => formData.append(\"files\", file));\r\n+    formData.append(\"label\", label);\r\n+    formData.append(\"documentType\", documentType);\r\n+\r\n+    try {\r\n+      setIsUploading(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+\r\n+      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n+      if (onFileUploaded) onFileUploaded(label);\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n+    } finally {\r\n+      setIsUploading(false);\r\n+      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n+    }\r\n+  };\r\n+\r\n+  const handleDeleteClick = async () => {\r\n+    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      await axios.post(\r\n+        \"http://localhost:5000/api/home/delete-document\",\r\n+        { documentType },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      if (onDelete) onDelete(label);\r\n+    } catch (error) {\r\n+      console.error(\"Delete error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"file-upload-container\">\r\n+      <label\r\n+        className=\"custum-file-upload\"\r\n+        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n+      >\r\n+        <div className=\"icon\">\r\n+          {isUploading ? (\r\n+            <div className=\"loading-spinner-small\"></div>\r\n+          ) : isUploaded ? (\r\n+            <div className=\"upload-success\">‚úî</div>\r\n+          ) : (\r\n+            <svg\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              fill=\"#000000\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              width=\"48px\"\r\n+              height=\"48px\"\r\n+            >\r\n+              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+              <path\r\n+                fill=\"#e8e8e8\"\r\n+                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                9.11 4 6.6 5.64 5.35 8.04 \r\n+                2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+              />\r\n+            </svg>\r\n+          )}\r\n+        </div>\r\n+        <div className=\"text\">\r\n+          <span>{label}</span>\r\n+        </div>\r\n+        <input\r\n+          type=\"file\"\r\n+          ref={fileInputRef}\r\n+          onChange={handleFolderUpload}\r\n+          disabled={isUploading || isUploaded}\r\n+          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n+          multiple\r\n+          webkitdirectory=\"true\"\r\n+          directory=\"true\"\r\n+        />\r\n+      </label>\r\n+      <button\r\n+        className=\"delete-btn\"\r\n+        onClick={handleDeleteClick}\r\n+        title={`Delete ${label}`}\r\n+        disabled={isDeleting || !isUploaded}\r\n+      >\r\n+        {isDeleting ? (\r\n+          <div className=\"loading-spinner-small\"></div>\r\n+        ) : (\r\n+          \"üóëÔ∏è Delete\"\r\n+        )}\r\n+      </button>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+function SatisfactionCertificate({ user, onClose }) {\r\n+  const hasCompletedDocuments = \r\n+    user.documentRequirements?.politicalDeclaration && \r\n+    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    user.documentRequirements?.idDocumentFile;\r\n+\r\n+  return (\r\n+    <div className=\"certificate-overlay\">\r\n+      <div className=\"certificate-container\">\r\n+        <button className=\"close-certificate\" onClick={onClose}>\r\n+          &times;\r\n+        </button>\r\n+        <div className=\"certificate-header\">\r\n+          <h2>Affidavit Testimony of My Status</h2>\r\n+        </div>\r\n+        <div className=\"certificate-body\">\r\n+          <div className=\"affidavit-statement\">\r\n+            <p>\r\n+              I, a living soul being of sound mind, competent and over the age\r\n+              of maturity, hereby affirm the following testimony is true. I have\r\n+              completed the fullness of the sovereign walk.\r\n+            </p>\r\n+          </div>\r\n+          {hasCompletedDocuments && (\r\n+            <div className=\"completed-documents-section\">\r\n+              <h3>Completed Documents:</h3>\r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <ul>\r\n+                    <li>Political Declaration Document</li>\r\n+                    {user.documentRequirements.idDocumentFile && (\r\n+                      <li>\r\n+                        ID Document:{\" \"}\r\n+                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                      </li>\r\n+                    )}\r\n+                    {user.documentRequirements.photoWithWhiteBg && (\r\n+                      <li>Photo with White Background</li>\r\n+                    )}\r\n+                    {user.documentRequirements.redThumbprint && (\r\n+                      <li>Thumbprint (red ink)</li>\r\n+                    )}\r\n+                    {user.documentRequirements.utilityBill && (\r\n+                      <li>Utility Bill</li>\r\n+                    )}\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>\r\n+                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                  </h4>\r\n+                  <ul>\r\n+                    <li>Act of Expatriation</li>\r\n+                    <li>Certificate of Assumed Name</li>\r\n+                    <li>Notice of Transfer of Reserved Name</li>\r\n+                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                    <li>Paramount Claim of Life</li>\r\n+                    <li>Mandatory Notice</li>\r\n+                    <li>Common Carry Declaration Weapon</li>\r\n+                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                    <li>Baby Deed Affidavit Testimony</li>\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+          <div className=\"signature-section\">\r\n+            <div className=\"signature-line\"></div>\r\n+            <p>\r\n+              {user.fullNames} {user.familyName}\r\n+            </p>\r\n+            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default function Home() {\r\n+  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n+  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n+  const [userData, setUserData] = useState({\r\n+    fullNames: \"Loading...\",\r\n+    familyName: \"\",\r\n+    email: \"Loading...\",\r\n+    profileImage: null,\r\n+    documentRequirements: {},\r\n+  });\r\n+  const [editingName, setEditingName] = useState(false);\r\n+  const [editingEmail, setEditingEmail] = useState(false);\r\n+  const [tempName, setTempName] = useState(\"\");\r\n+  const [tempEmail, setTempEmail] = useState(\"\");\r\n+  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n+  const [showPublicView, setShowPublicView] = useState(\r\n+    localStorage.getItem(\"showPublicView\") === \"true\"\r\n+  );\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const [loadingUserData, setLoadingUserData] = useState(true);\r\n+  const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n+  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n+  const [showCertificate, setShowCertificate] = useState(false);\r\n+  const profileInputRef = useRef(null);\r\n+\r\n+  const fetchUserData = async () => {\r\n+    try {\r\n+      setLoadingUserData(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      if (!token) {\r\n+        window.location.href = \"/login\";\r\n+        return;\r\n+      }\r\n+\r\n+      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+\r\n+      const userData = {\r\n+        fullNames: response.data.user.fullNames || \"Unknown\",\r\n+        familyName: response.data.user.familyName || \"\",\r\n+        email: response.data.user.email || \"No email\",\r\n+        profileImage: response.data.user.profileImage || null,\r\n+        documentRequirements: response.data.user.documentRequirements || {},\r\n+      };\r\n+\r\n+      setUserData(userData);\r\n+      setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+      setTempEmail(userData.email);\r\n+\r\n+      const uploaded = [];\r\n+      if (userData.documentRequirements) {\r\n+        if (userData.documentRequirements.politicalDeclaration)\r\n+          uploaded.push(\"528\");\r\n+        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n+          uploaded.push(\"928\");\r\n+        if (userData.documentRequirements.idDocumentFile)\r\n+          uploaded.push(\"Praecipe\");\r\n+      }\r\n+      setUploadedLabels(uploaded);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames: userData.fullNames,\r\n+          familyName: userData.familyName,\r\n+          email: userData.email,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch user data:\", error);\r\n+      localStorage.removeItem(\"token\");\r\n+      localStorage.removeItem(\"userData\");\r\n+      window.location.href = \"/login\";\r\n+    } finally {\r\n+      setLoadingUserData(false);\r\n+    }\r\n+  };\r\n+\r\n+  const fetchPublicViewUsers = async () => {\r\n+    try {\r\n+      setLoadingPublicView(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.get(\r\n+        \"http://localhost:5000/api/home/public-view\",\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      setPublicViewUsers(response.data);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch public view users:\", error);\r\n+    } finally {\r\n+      setLoadingPublicView(false);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    fetchUserData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (showPublicView) {\r\n+      fetchPublicViewUsers();\r\n+    }\r\n+  }, [showPublicView]);\r\n+\r\n+  const handleProfileImageChange = async (e) => {\r\n+    const file = e.target.files[0];\r\n+    if (!file) return;\r\n+\r\n+    try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"file\", file);\r\n+      formData.append(\"type\", \"profileImage\");\r\n+\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.post(\r\n+        \"http://localhost:5000/api/home/upload\",\r\n+        formData,\r\n+        {\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      const updatedUser = {\r\n+        ...userData,\r\n+        profileImage: response.data.filePath,\r\n+      };\r\n+\r\n+      setUserData(updatedUser);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n+          profileImage: response.data.filePath,\r\n+        })\r\n+      );\r\n+\r\n+      alert(\"Profile image updated successfully!\");\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n+    }\r\n+  };\r\n+\r\n+  const saveUserData = async () => {\r\n+    if (!tempName.trim() || !tempEmail.trim()) {\r\n+      alert(\"Name and email cannot be empty\");\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsUpdatingProfile(true);\r\n+      const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n+      const familyName = familyNameParts.join(\" \");\r\n+\r\n+      if (!familyName) {\r\n+        alert(\"Please provide both first and last names\");\r\n+        return;\r\n+      }\r\n+\r\n+      const token = localStorage.getItem(\"token\");\r\n+\r\n+      await axios.put(\r\n+        \"http://localhost:5000/api/auth/update\",\r\n+        {\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        fullNames,\r\n+        familyName,\r\n+        email: tempEmail,\r\n+      };\r\n+\r\n+      setUserData(updatedUserData);\r\n+      setTempName(`${fullNames} ${familyName}`);\r\n+      setTempEmail(tempEmail);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n+\r\n+      setEditingName(false);\r\n+      setEditingEmail(false);\r\n+      alert(\"Profile updated successfully!\");\r\n+    } catch (error) {\r\n+      console.error(\"Error updating profile:\", error);\r\n+      alert(error.response?.data?.message || \"Failed to update profile\");\r\n+    } finally {\r\n+      setIsUpdatingProfile(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem(\"token\");\r\n+    localStorage.removeItem(\"showPublicView\");\r\n+    window.location.href = \"/login\";\r\n+  };\r\n+\r\n+  const handleFileUploaded = (label) => {\r\n+    if (!uploadedLabels.includes(label)) {\r\n+      setUploadedLabels([...uploadedLabels, label]);\r\n+    }\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n+\r\n+  const hasCompletedAllDocuments = \r\n+    userData.documentRequirements?.politicalDeclaration && \r\n+    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    userData.documentRequirements?.idDocumentFile;\r\n+\r\n+  return (\r\n+    <>\r\n+      <div\r\n+        className=\"sidebar-toggle\"\r\n+        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n+      >\r\n+        {userData.profileImage ? (\r\n+          <img\r\n+            src={`http://localhost:5000${userData.profileImage}`}\r\n+            alt=\"Profile\"\r\n+            className=\"profile-img\"\r\n+            onError={(e) => {\r\n+              e.target.onerror = null;\r\n+              e.target.src = \"/default-profile.png\";\r\n+            }}\r\n+          />\r\n+        ) : (\r\n+          <div className=\"profile-placeholder\">\r\n+            {userData.fullNames.charAt(0).toUpperCase()}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <input\r\n+        type=\"file\"\r\n+        accept=\"image/*\"\r\n+        style={{ display: \"none\" }}\r\n+        ref={profileInputRef}\r\n+        onChange={handleProfileImageChange}\r\n+      />\r\n+\r\n+      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n+        <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n+          &larr; Back\r\n+        </button>\r\n+        <h2>User Info</h2>\r\n+\r\n+        {loadingUserData ? (\r\n+          <div className=\"loading-container\">\r\n+            <div className=\"loading-spinner\"></div>\r\n+            <p>Loading user data...</p>\r\n+          </div>\r\n+        ) : (\r\n+          <>\r\n+            <div\r\n+              className=\"profile-upload\"\r\n+              onClick={() => profileInputRef.current?.click()}\r\n+              title=\"Click to upload profile image\"\r\n+            >\r\n+              {userData.profileImage ? (\r\n+                <img\r\n+                  src={`http://localhost:5000${userData.profileImage}`}\r\n+                  alt=\"Profile\"\r\n+                  className=\"profile-image\"\r\n+                />\r\n+              ) : (\r\n+                <div className=\"profile-upload-placeholder\">\r\n+                  <span>+ Upload Profile Image</span>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"editable-field\">\r\n+              <label>Name:</label>\r\n+              {editingName ? (\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={tempName}\r\n+                  onChange={(e) => setTempName(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n+              ) : (\r\n+                <span>{tempName}</span>\r\n+              )}\r\n+              {!editingName && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  onClick={() => setEditingName(true)}\r\n+                >\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"editable-field\">\r\n+              <label>Email:</label>\r\n+              {editingEmail ? (\r\n+                <input\r\n+                  type=\"email\"\r\n+                  value={tempEmail}\r\n+                  onChange={(e) => setTempEmail(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n+              ) : (\r\n+                <span>{tempEmail}</span>\r\n+              )}\r\n+              {!editingEmail && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  onClick={() => setEditingEmail(true)}\r\n+                >\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+\r\n+            {(editingName || editingEmail) && (\r\n+              <div className=\"save-section\">\r\n+                <button\r\n+                  className=\"save-btn\"\r\n+                  onClick={saveUserData}\r\n+                  disabled={isUpdatingProfile}\r\n+                >\r\n+                  {isUpdatingProfile ? (\r\n+                    <div className=\"loading-spinner-small\"></div>\r\n+                  ) : (\r\n+                    \"Save Changes\"\r\n+                  )}\r\n+                </button>\r\n+                <button\r\n+                  className=\"cancel-btn\"\r\n+                  onClick={() => {\r\n+                    setEditingName(false);\r\n+                    setEditingEmail(false);\r\n+                    setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+                    setTempEmail(userData.email);\r\n+                  }}\r\n+                >\r\n+                  Cancel\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"document-uploads\">\r\n+              <h3>Document Uploads</h3>\r\n+              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n+                <div key={label} className=\"upload-item\">\r\n+                  <FileUpload\r\n+                    label={label}\r\n+                    documentType={\r\n+                      label === \"528\"\r\n+                        ? \"politicalDeclaration\"\r\n+                        : label === \"928\"\r\n+                        ? \"witnessTestimonies\"\r\n+                        : \"idDocument\"\r\n+                    }\r\n+                    onFileUploaded={handleFileUploaded}\r\n+                    onDelete={handleFileDeleted}\r\n+                    isUploaded={\r\n+                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n+                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n+                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n+                    }\r\n+                  />\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+\r\n+            {hasCompletedAllDocuments && (\r\n+              <div className=\"certificate-section\">\r\n+                <button \r\n+                  className=\"view-certificate-btn\"\r\n+                  onClick={() => setShowCertificate(true)}\r\n+                >\r\n+                  View My Certificate\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"logout-section\">\r\n+              <button className=\"logout-btn\" onClick={handleLogout}>\r\n+                Logout\r\n+              </button>\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n+        <div className=\"main-content\">\r\n+          {loadingUserData ? (\r\n+            <div className=\"loading-container\">\r\n+              <div className=\"loading-spinner\"></div>\r\n+              <p>Loading your data...</p>\r\n+            </div>\r\n+          ) : (\r\n+            <>\r\n+              <h2>\r\n+                Welcome, {userData.fullNames} {userData.familyName}\r\n+              </h2>\r\n+\r\n+              <button\r\n+                className=\"public-view-btn\"\r\n+                onClick={() => setShowPublicView(!showPublicView)}\r\n+              >\r\n+                {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n+              </button>\r\n+\r\n+              {showPublicView ? (\r\n+                <div className=\"public-view-container\">\r\n+                  <h3>Users with Completed Documents</h3>\r\n+                  {loadingPublicView ? (\r\n+                    <div className=\"loading-container\">\r\n+                      <div className=\"loading-spinner\"></div>\r\n+                      <p>Loading public records...</p>\r\n+                    </div>\r\n+                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n+                    <p>No users have completed all documents yet</p>\r\n+                  ) : (\r\n+                    <div className=\"completed-users-list\">\r\n+                      {Array.isArray(publicViewUsers) &&\r\n+                        publicViewUsers.map((user) => (\r\n+                          <div\r\n+                            key={user._id}\r\n+                            className=\"completed-user\"\r\n+                            onClick={() => setSelectedUser(user)}\r\n+                          >\r\n+                            <div className=\"user-info\">\r\n+                              {user.profileImage && (\r\n+                                <img\r\n+                                  src={`http://localhost:5000${user.profileImage}`}\r\n+                                  alt=\"Profile\"\r\n+                                  className=\"user-avatar\"\r\n+                                />\r\n+                              )}\r\n+                              <span>\r\n+                                {user.fullNames} {user.familyName}\r\n+                              </span>\r\n+                            </div>\r\n+                            <span className=\"completed-badge\">\r\n+                              View Certificate\r\n+                            </span>\r\n+                          </div>\r\n+                        ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              ) : (\r\n+                <div className=\"dashboard-info\">\r\n+                  <div className=\"completion-status\">\r\n+                    <h4>Your Document Completion:</h4>\r\n+                    <div className=\"progress-bar\">\r\n+                      <div\r\n+                        className=\"progress-fill\"\r\n+                        style={{\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n+                        }}\r\n+                      ></div>\r\n+                    </div>\r\n+                    <p>\r\n+                      {hasCompletedAllDocuments ? (\r\n+                        <span className=\"completed-text\">\r\n+                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                        </span>\r\n+                      ) : (\r\n+                        `${uploadedLabels.length} of 3 documents uploaded`\r\n+                      )}\r\n+                    </p>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {selectedUser && (\r\n+        <SatisfactionCertificate\r\n+          user={selectedUser}\r\n+          onClose={() => setSelectedUser(null)}\r\n+        />\r\n+      )}\r\n+\r\n+      {showCertificate && (\r\n+        <SatisfactionCertificate\r\n+          user={userData}\r\n+          onClose={() => setShowCertificate(false)}\r\n+        />\r\n+      )}\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753699875645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,12 +133,18 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n+  // Safely access user properties with fallbacks\r\n+  const safeUser = user || {};\r\n+  const fullName = safeUser.fullNames || \"Unknown\";\r\n+  const familyName = safeUser.familyName || \"\";\r\n+  const documentRequirements = safeUser.documentRequirements || {};\r\n+\r\n   const hasCompletedDocuments = \r\n-    user.documentRequirements?.politicalDeclaration && \r\n-    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    user.documentRequirements?.idDocumentFile;\r\n+    documentRequirements.politicalDeclaration && \r\n+    documentRequirements.witnessTestimonies?.length > 0 &&\r\n+    documentRequirements.idDocumentFile;\r\n \r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n@@ -158,32 +164,32 @@\n           </div>\r\n           {hasCompletedDocuments && (\r\n             <div className=\"completed-documents-section\">\r\n               <h3>Completed Documents:</h3>\r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n+              {documentRequirements.politicalDeclaration && (\r\n                 <div className=\"document-group\">\r\n                   <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n                   <ul>\r\n                     <li>Political Declaration Document</li>\r\n-                    {user.documentRequirements.idDocumentFile && (\r\n+                    {documentRequirements.idDocumentFile && (\r\n                       <li>\r\n                         ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                        {documentRequirements.idDocument || \"Not specified\"}\r\n                       </li>\r\n                     )}\r\n-                    {user.documentRequirements.photoWithWhiteBg && (\r\n+                    {documentRequirements.photoWithWhiteBg && (\r\n                       <li>Photo with White Background</li>\r\n                     )}\r\n-                    {user.documentRequirements.redThumbprint && (\r\n+                    {documentRequirements.redThumbprint && (\r\n                       <li>Thumbprint (red ink)</li>\r\n                     )}\r\n-                    {user.documentRequirements.utilityBill && (\r\n+                    {documentRequirements.utilityBill && (\r\n                       <li>Utility Bill</li>\r\n                     )}\r\n                   </ul>\r\n                 </div>\r\n               )}\r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+              {documentRequirements.witnessTestimonies?.length > 0 && (\r\n                 <div className=\"document-group\">\r\n                   <h4>\r\n                     928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n                   </h4>\r\n@@ -204,9 +210,9 @@\n           )}\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n-              {user.fullNames} {user.familyName}\r\n+              {fullName} {familyName}\r\n             </p>\r\n             <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n           </div>\r\n         </div>\r\n@@ -254,8 +260,13 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n+      // Validate response structure\r\n+      if (!response.data || !response.data.user) {\r\n+        throw new Error(\"Invalid user data response structure\");\r\n+      }\r\n+\r\n       const userData = {\r\n         fullNames: response.data.user.fullNames || \"Unknown\",\r\n         familyName: response.data.user.familyName || \"\",\r\n         email: response.data.user.email || \"No email\",\r\n@@ -288,8 +299,16 @@\n         })\r\n       );\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n+      // Set fallback user data\r\n+      setUserData({\r\n+        fullNames: \"Guest User\",\r\n+        familyName: \"\",\r\n+        email: \"unknown@example.com\",\r\n+        profileImage: null,\r\n+        documentRequirements: {},\r\n+      });\r\n       localStorage.removeItem(\"token\");\r\n       localStorage.removeItem(\"userData\");\r\n       window.location.href = \"/login\";\r\n     } finally {\r\n@@ -308,11 +327,12 @@\n             Authorization: `Bearer ${token}`,\r\n           },\r\n         }\r\n       );\r\n-      setPublicViewUsers(response.data);\r\n+      setPublicViewUsers(response.data || []);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n+      setPublicViewUsers([]);\r\n     } finally {\r\n       setLoadingPublicView(false);\r\n     }\r\n   };\r\n@@ -474,9 +494,9 @@\n             }}\r\n           />\r\n         ) : (\r\n           <div className=\"profile-placeholder\">\r\n-            {userData.fullNames.charAt(0).toUpperCase()}\r\n+            {userData.fullNames?.charAt(0).toUpperCase() || \"U\"}\r\n           </div>\r\n         )}\r\n       </div>\r\n \r\n@@ -671,9 +691,9 @@\n                         publicViewUsers.map((user) => (\r\n                           <div\r\n                             key={user._id}\r\n                             className=\"completed-user\"\r\n-                            onClick={() => setSelectedUser(user)}\r\n+                            onClick={() => setSelectedUser(user || {})}\r\n                           >\r\n                             <div className=\"user-info\">\r\n                               {user.profileImage && (\r\n                                 <img\r\n@@ -682,9 +702,9 @@\n                                   className=\"user-avatar\"\r\n                                 />\r\n                               )}\r\n                               <span>\r\n-                                {user.fullNames} {user.familyName}\r\n+                                {user.fullNames || \"Unknown\"} {user.familyName || \"\"}\r\n                               </span>\r\n                             </div>\r\n                             <span className=\"completed-badge\">\r\n                               View Certificate\r\n@@ -724,9 +744,9 @@\n       </div>\r\n \r\n       {selectedUser && (\r\n         <SatisfactionCertificate\r\n-          user={selectedUser}\r\n+          user={selectedUser || {}}\r\n           onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n \r\n@@ -737,798 +757,5 @@\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import './Home.css';\r\n-\r\n-const Home = () => {\r\n-  const [selectedFolder, setSelectedFolder] = useState(null);\r\n-  const [files, setFiles] = useState([]);\r\n-  const [profileImage, setProfileImage] = useState(null);\r\n-  const [userData, setUserData] = useState(null);\r\n-  const [showCertificate, setShowCertificate] = useState(false);\r\n-  const [showPublicView, setShowPublicView] = useState(false);\r\n-  const [publicUsers, setPublicUsers] = useState([]);\r\n-  const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n-  const [uploadProgress, setUploadProgress] = useState(0);\r\n-  const [isUploading, setIsUploading] = useState(false);\r\n-  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  useEffect(() => {\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const token = localStorage.getItem('token');\r\n-        if (!token) {\r\n-          navigate('/login');\r\n-          return;\r\n-        }\r\n-\r\n-        const response = await axios.get('/api/auth/me', {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`\r\n-          }\r\n-        });\r\n-\r\n-        setUserData(response.data);\r\n-        if (response.data.profileImage) {\r\n-          setProfileImage(`${'http://localhost:5000'}${response.data.profileImage}`);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        localStorage.removeItem('token');\r\n-        navigate('/login');\r\n-      }\r\n-    };\r\n-\r\n-    fetchUserData();\r\n-  }, [navigate]);\r\n-\r\n-  const handleFolderSelect = (folderType) => {\r\n-    setSelectedFolder(folderType);\r\n-  };\r\n-\r\n-  const handleFileChange = (e) => {\r\n-    if (e.target.files) {\r\n-      setFiles(Array.from(e.target.files));\r\n-    }\r\n-  };\r\n-\r\n-  const handleProfileImageChange = (e) => {\r\n-    if (e.target.files && e.target.files[0]) {\r\n-      const file = e.target.files[0];\r\n-      if (file.size > 50 * 1024 * 1024) {\r\n-        alert('Profile image size must be less than 50MB');\r\n-        return;\r\n-      }\r\n-      setProfileImage(URL.createObjectURL(file));\r\n-      uploadProfileImage(file);\r\n-    }\r\n-  };\r\n-\r\n-  const uploadProfileImage = async (file) => {\r\n-    const formData = new FormData();\r\n-    formData.append('file', file);\r\n-    formData.append('type', 'profileImage');\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/upload', formData, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-          'Content-Type': 'multipart/form-data'\r\n-        }\r\n-      });\r\n-    } catch (error) {\r\n-      console.error('Error uploading profile image:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleUpload = async () => {\r\n-    if (!selectedFolder || files.length === 0) return;\r\n-\r\n-    setIsUploading(true);\r\n-    setUploadProgress(0);\r\n-\r\n-    const formData = new FormData();\r\n-    files.forEach(file => {\r\n-      formData.append('files', file);\r\n-    });\r\n-    formData.append('type', 'folderUpload');\r\n-    formData.append('documentType', 'folderUpload');\r\n-    formData.append('folderName', selectedFolder);\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/upload', formData, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-          'Content-Type': 'multipart/form-data'\r\n-        },\r\n-        onUploadProgress: (progressEvent) => {\r\n-          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n-          setUploadProgress(percentCompleted);\r\n-        }\r\n-      });\r\n-\r\n-      // Refresh user data after successful upload\r\n-      const response = await axios.get('/api/auth/me', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setUserData(response.data);\r\n-\r\n-      setFiles([]);\r\n-      setSelectedFolder(null);\r\n-    } catch (error) {\r\n-      console.error('Error uploading files:', error);\r\n-    } finally {\r\n-      setIsUploading(false);\r\n-      setUploadProgress(0);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteDocument = async (documentType) => {\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/delete-document', { documentType }, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-\r\n-      // Refresh user data after successful deletion\r\n-      const response = await axios.get('/api/auth/me', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setUserData(response.data);\r\n-    } catch (error) {\r\n-      console.error('Error deleting document:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const fetchPublicUsers = async () => {\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      const response = await axios.get('/api/home/public-view', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setPublicUsers(response.data.users);\r\n-    } catch (error) {\r\n-      console.error('Error fetching public users:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const hasCompletedDocuments = () => {\r\n-    if (!userData?.documentRequirements) return false;\r\n-    \r\n-    const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n-    return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"home-container\">\r\n-      {/* Sidebar Toggle Button */}\r\n-      <button \r\n-        className=\"sidebar-toggle\"\r\n-        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n-      >\r\n-        {sidebarOpen ? '‚úï' : '‚ò∞'}\r\n-      </button>\r\n-\r\n-      {/* Sidebar */}\r\n-      <div className={`sidebar ${sidebarOpen ? 'active' : ''}`}>\r\n-        <div className=\"user-profile\">\r\n-          <div className=\"profile-image-container\">\r\n-            <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n-              {profileImage ? (\r\n-                <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n-              ) : (\r\n-                <div className=\"profile-placeholder\">\r\n-                  <span>Upload Profile</span>\r\n-                </div>\r\n-              )}\r\n-            </label>\r\n-            <input\r\n-              id=\"profile-upload\"\r\n-              type=\"file\"\r\n-              accept=\"image/*\"\r\n-              onChange={handleProfileImageChange}\r\n-              style={{ display: 'none' }}\r\n-            />\r\n-          </div>\r\n-          {userData && (\r\n-            <div className=\"user-info\">\r\n-              <h3>{userData.fullNames} {userData.familyName}</h3>\r\n-              <p>{userData.email}</p>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-\r\n-        <div className=\"upload-section\">\r\n-          <h3>Upload Documents</h3>\r\n-          <div className=\"folder-options\">\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('528')}\r\n-            >\r\n-              528 Folder\r\n-            </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('928')}\r\n-            >\r\n-              928 Folder\r\n-            </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('Praecipe')}\r\n-            >\r\n-              Praecipe Folder\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {selectedFolder && (\r\n-            <div className=\"file-upload-container\">\r\n-              <input\r\n-                type=\"file\"\r\n-                id=\"file-upload\"\r\n-                onChange={handleFileChange}\r\n-                multiple\r\n-                directory=\"\"\r\n-                webkitdirectory=\"\"\r\n-                style={{ display: 'none' }}\r\n-              />\r\n-              <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n-                Choose {selectedFolder} Folder\r\n-              </label>\r\n-              {files.length > 0 && (\r\n-                <div className=\"selected-files\">\r\n-                  <p>Selected {files.length} files</p>\r\n-                  <button onClick={handleUpload} disabled={isUploading}>\r\n-                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n-                  </button>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {userData?.documentRequirements && (\r\n-            <div className=\"uploaded-documents\">\r\n-              <h4>Uploaded Documents:</h4>\r\n-              {userData.documentRequirements.politicalDeclaration && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Political Declaration</span>\r\n-                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n-                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-              {userData.documentRequirements.idDocumentFile && (\r\n-                <div className=\"document-item\">\r\n-                  <span>ID Document</span>\r\n-                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Main Content */}\r\n-      <div className={`main-content ${sidebarOpen ? 'sidebar-open' : ''}`}>\r\n-        <button \r\n-          className=\"public-view-btn\"\r\n-          onClick={() => {\r\n-            setShowPublicView(!showPublicView);\r\n-            fetchPublicUsers();\r\n-          }}\r\n-        >\r\n-          Public View\r\n-        </button>\r\n-\r\n-        {showPublicView && (\r\n-          <div className=\"public-view-modal active\">\r\n-            <div className=\"public-view-content\">\r\n-              <h3>Public Records</h3>\r\n-              <div className=\"public-users-list\">\r\n-                {publicUsers.map(user => (\r\n-                  <div \r\n-                    key={user._id} \r\n-                    className=\"public-user-item\"\r\n-                    onClick={() => setSelectedPublicUser(user)}\r\n-                  >\r\n-                    <div className=\"public-user-profile\">\r\n-                      {user.profileImage && (\r\n-                        <img src={`http://localhost:5000${user.profileImage}`} alt={user.fullNames} />\r\n-                      )}\r\n-                      <span>{user.fullNames} {user.familyName}</span>\r\n-                    </div>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-              <button \r\n-                className=\"close-public-view\"\r\n-                onClick={() => setShowPublicView(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {selectedPublicUser && (\r\n-          <div className=\"certificate-modal active\">\r\n-            <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n-                <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n-              </div>\r\n-              <div className=\"certificate-body\">\r\n-                <div className=\"affidavit-statement\">\r\n-                  <p>\r\n-                    I, a living soul being of sound mind, competent and over the age\r\n-                    of maturity, hereby affirm the following testimony is true. I have\r\n-                    completed the fullness of the sovereign walk.\r\n-                  </p>\r\n-                </div>\r\n-                <div className=\"completed-documents-section\">\r\n-                  <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n-                </div>\r\n-              </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setSelectedPublicUser(null)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {hasCompletedDocuments() && (\r\n-          <div \r\n-            className=\"certificate-badge\"\r\n-            onClick={() => setShowCertificate(true)}\r\n-          >\r\n-            <span>View My Affidavit</span>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {showCertificate && (\r\n-          <div className=\"certificate-modal active\">\r\n-            <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n-                <h2>Affidavit Testimony of My Status</h2>\r\n-              </div>\r\n-              <div className=\"certificate-body\">\r\n-                <div className=\"affidavit-statement\">\r\n-                  <p>\r\n-                    I, a living soul being of sound mind, competent and over the age\r\n-                    of maturity, hereby affirm the following testimony is true. I have\r\n-                    completed the fullness of the sovereign walk.\r\n-                  </p>\r\n-                </div>\r\n-                <div className=\"completed-documents-section\">\r\n-                  <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n-                </div>\r\n-              </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setShowCertificate(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Home;\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import './Home.css';\r\n-\r\n-const Home = () => {\r\n-  const [selectedFolder, setSelectedFolder] = useState(null);\r\n-  const [files, setFiles] = useState([]);\r\n-  const [profileImage, setProfileImage] = useState(null);\r\n-  const [userData, setUserData] = useState(null);\r\n-  const [showCertificate, setShowCertificate] = useState(false);\r\n-  const [showPublicView, setShowPublicView] = useState(false);\r\n-  const [publicUsers, setPublicUsers] = useState([]);\r\n-  const [selectedPublicUser, setSelectedPublicUser] = useState(null);\r\n-  const [uploadProgress, setUploadProgress] = useState(0);\r\n-  const [isUploading, setIsUploading] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  useEffect(() => {\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const token = localStorage.getItem('token');\r\n-        if (!token) {\r\n-          navigate('/login');\r\n-          return;\r\n-        }\r\n-\r\n-        const response = await axios.get('/api/auth/me', {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`\r\n-          }\r\n-        });\r\n-\r\n-        setUserData(response.data);\r\n-        if (response.data.profileImage) {\r\n-          setProfileImage(`${'http://localhost:5000'}${response.data.profileImage}`);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        localStorage.removeItem('token');\r\n-        navigate('/login');\r\n-      }\r\n-    };\r\n-\r\n-    fetchUserData();\r\n-  }, [navigate]);\r\n-\r\n-  const handleFolderSelect = (folderType) => {\r\n-    setSelectedFolder(folderType);\r\n-  };\r\n-\r\n-  const handleFileChange = (e) => {\r\n-    if (e.target.files) {\r\n-      setFiles(Array.from(e.target.files));\r\n-    }\r\n-  };\r\n-\r\n-  const handleProfileImageChange = (e) => {\r\n-    if (e.target.files && e.target.files[0]) {\r\n-      const file = e.target.files[0];\r\n-      if (file.size > 50 * 1024 * 1024) {\r\n-        alert('Profile image size must be less than 50MB');\r\n-        return;\r\n-      }\r\n-      setProfileImage(URL.createObjectURL(file));\r\n-      uploadProfileImage(file);\r\n-    }\r\n-  };\r\n-\r\n-  const uploadProfileImage = async (file) => {\r\n-    const formData = new FormData();\r\n-    formData.append('file', file);\r\n-    formData.append('type', 'profileImage');\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/upload', formData, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-          'Content-Type': 'multipart/form-data'\r\n-        }\r\n-      });\r\n-    } catch (error) {\r\n-      console.error('Error uploading profile image:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleUpload = async () => {\r\n-    if (!selectedFolder || files.length === 0) return;\r\n-\r\n-    setIsUploading(true);\r\n-    setUploadProgress(0);\r\n-\r\n-    const formData = new FormData();\r\n-    files.forEach(file => {\r\n-      formData.append('files', file);\r\n-    });\r\n-    formData.append('type', 'folderUpload');\r\n-    formData.append('documentType', 'folderUpload');\r\n-    formData.append('folderName', selectedFolder);\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/upload', formData, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-          'Content-Type': 'multipart/form-data'\r\n-        },\r\n-        onUploadProgress: (progressEvent) => {\r\n-          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n-          setUploadProgress(percentCompleted);\r\n-        }\r\n-      });\r\n-\r\n-      // Refresh user data after successful upload\r\n-      const response = await axios.get('/api/auth/me', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setUserData(response.data);\r\n-\r\n-      setFiles([]);\r\n-      setSelectedFolder(null);\r\n-    } catch (error) {\r\n-      console.error('Error uploading files:', error);\r\n-    } finally {\r\n-      setIsUploading(false);\r\n-      setUploadProgress(0);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteDocument = async (documentType) => {\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      await axios.post('/api/home/delete-document', { documentType }, {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-\r\n-      // Refresh user data after successful deletion\r\n-      const response = await axios.get('/api/auth/me', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setUserData(response.data);\r\n-    } catch (error) {\r\n-      console.error('Error deleting document:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const fetchPublicUsers = async () => {\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      const response = await axios.get('/api/home/public-view', {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n-      });\r\n-      setPublicUsers(response.data.users);\r\n-    } catch (error) {\r\n-      console.error('Error fetching public users:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const hasCompletedDocuments = () => {\r\n-    if (!userData?.documentRequirements) return false;\r\n-    \r\n-    const { politicalDeclaration, witnessTestimonies, idDocumentFile } = userData.documentRequirements;\r\n-    return politicalDeclaration && witnessTestimonies?.length > 0 && idDocumentFile;\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"home-container\">\r\n-      <div className=\"sidebar\">\r\n-        <div className=\"user-profile\">\r\n-          <div className=\"profile-image-container\">\r\n-            <label htmlFor=\"profile-upload\" className=\"profile-image-label\">\r\n-              {profileImage ? (\r\n-                <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n-              ) : (\r\n-                <div className=\"profile-placeholder\">\r\n-                  <span>Upload Profile</span>\r\n-                </div>\r\n-              )}\r\n-            </label>\r\n-            <input\r\n-              id=\"profile-upload\"\r\n-              type=\"file\"\r\n-              accept=\"image/*\"\r\n-              onChange={handleProfileImageChange}\r\n-              style={{ display: 'none' }}\r\n-            />\r\n-          </div>\r\n-          {userData && (\r\n-            <div className=\"user-info\">\r\n-              <h3>{userData.fullNames} {userData.familyName}</h3>\r\n-              <p>{userData.email}</p>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-\r\n-        <div className=\"upload-section\">\r\n-          <h3>Upload Documents</h3>\r\n-          <div className=\"folder-options\">\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '528' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('528')}\r\n-            >\r\n-              528 Folder\r\n-            </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === '928' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('928')}\r\n-            >\r\n-              928 Folder\r\n-            </button>\r\n-            <button\r\n-              className={`folder-btn ${selectedFolder === 'Praecipe' ? 'active' : ''}`}\r\n-              onClick={() => handleFolderSelect('Praecipe')}\r\n-            >\r\n-              Praecipe Folder\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {selectedFolder && (\r\n-            <div className=\"file-upload-container\">\r\n-              <input\r\n-                type=\"file\"\r\n-                id=\"file-upload\"\r\n-                onChange={handleFileChange}\r\n-                multiple\r\n-                directory=\"\"\r\n-                webkitdirectory=\"\"\r\n-                style={{ display: 'none' }}\r\n-              />\r\n-              <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n-                Choose {selectedFolder} Folder\r\n-              </label>\r\n-              {files.length > 0 && (\r\n-                <div className=\"selected-files\">\r\n-                  <p>Selected {files.length} files</p>\r\n-                  <button onClick={handleUpload} disabled={isUploading}>\r\n-                    {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n-                  </button>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {userData?.documentRequirements && (\r\n-            <div className=\"uploaded-documents\">\r\n-              <h4>Uploaded Documents:</h4>\r\n-              {userData.documentRequirements.politicalDeclaration && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Political Declaration</span>\r\n-                  <button onClick={() => handleDeleteDocument('politicalDeclaration')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-              {userData.documentRequirements.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-item\">\r\n-                  <span>Witness Testimonies ({userData.documentRequirements.witnessTestimonies.length})</span>\r\n-                  <button onClick={() => handleDeleteDocument('witnessTestimonies')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-              {userData.documentRequirements.idDocumentFile && (\r\n-                <div className=\"document-item\">\r\n-                  <span>ID Document</span>\r\n-                  <button onClick={() => handleDeleteDocument('idDocument')}>Delete</button>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"main-content\">\r\n-        <button \r\n-          className=\"public-view-btn\"\r\n-          onClick={() => {\r\n-            setShowPublicView(!showPublicView);\r\n-            fetchPublicUsers();\r\n-          }}\r\n-        >\r\n-          Public View\r\n-        </button>\r\n-\r\n-        {showPublicView && (\r\n-          <div className=\"public-view-modal\">\r\n-            <div className=\"public-view-content\">\r\n-              <h3>Public Records</h3>\r\n-              <div className=\"public-users-list\">\r\n-                {publicUsers.map(user => (\r\n-                  <div \r\n-                    key={user._id} \r\n-                    className=\"public-user-item\"\r\n-                    onClick={() => setSelectedPublicUser(user)}\r\n-                  >\r\n-                    <div className=\"public-user-profile\">\r\n-                      {user.profileImage && (\r\n-                        <img src={user.profileImage} alt={user.fullNames} />\r\n-                      )}\r\n-                      <span>{user.fullNames} {user.familyName}</span>\r\n-                    </div>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-              <button \r\n-                className=\"close-public-view\"\r\n-                onClick={() => setShowPublicView(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {selectedPublicUser && (\r\n-          <div className=\"certificate-modal\">\r\n-            <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n-                <h2>Affidavit Testimony of {selectedPublicUser.fullNames} {selectedPublicUser.familyName}'s Status</h2>\r\n-              </div>\r\n-              <div className=\"certificate-body\">\r\n-                <div className=\"affidavit-statement\">\r\n-                  <p>\r\n-                    I, a living soul being of sound mind, competent and over the age\r\n-                    of maturity, hereby affirm the following testimony is true. I have\r\n-                    completed the fullness of the sovereign walk.\r\n-                  </p>\r\n-                </div>\r\n-                <div className=\"completed-documents-section\">\r\n-                  <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(selectedPublicUser.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n-                </div>\r\n-              </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setSelectedPublicUser(null)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {hasCompletedDocuments() && (\r\n-          <div \r\n-            className=\"certificate-badge\"\r\n-            onClick={() => setShowCertificate(true)}\r\n-          >\r\n-            <span>View My Affidavit</span>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {showCertificate && (\r\n-          <div className=\"certificate-modal\">\r\n-            <div className=\"certificate-content\">\r\n-              <div className=\"certificate-header\">\r\n-                <h2>Affidavit Testimony of My Status</h2>\r\n-              </div>\r\n-              <div className=\"certificate-body\">\r\n-                <div className=\"affidavit-statement\">\r\n-                  <p>\r\n-                    I, a living soul being of sound mind, competent and over the age\r\n-                    of maturity, hereby affirm the following testimony is true. I have\r\n-                    completed the fullness of the sovereign walk.\r\n-                  </p>\r\n-                </div>\r\n-                <div className=\"completed-documents-section\">\r\n-                  <h3>Completed Documents:</h3>\r\n-                  <p>Uploaded on: {new Date(userData.documentRequirements.uploadedAt).toLocaleString()}</p>\r\n-                </div>\r\n-              </div>\r\n-              <button \r\n-                className=\"close-certificate\"\r\n-                onClick={() => setShowCertificate(false)}\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Home;\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753700569644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,18 +133,12 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n-  // Safely access user properties with fallbacks\r\n-  const safeUser = user || {};\r\n-  const fullName = safeUser.fullNames || \"Unknown\";\r\n-  const familyName = safeUser.familyName || \"\";\r\n-  const documentRequirements = safeUser.documentRequirements || {};\r\n-\r\n   const hasCompletedDocuments = \r\n-    documentRequirements.politicalDeclaration && \r\n-    documentRequirements.witnessTestimonies?.length > 0 &&\r\n-    documentRequirements.idDocumentFile;\r\n+    user.documentRequirements?.politicalDeclaration && \r\n+    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    user.documentRequirements?.idDocumentFile;\r\n \r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n@@ -164,32 +158,32 @@\n           </div>\r\n           {hasCompletedDocuments && (\r\n             <div className=\"completed-documents-section\">\r\n               <h3>Completed Documents:</h3>\r\n-              {documentRequirements.politicalDeclaration && (\r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n                 <div className=\"document-group\">\r\n                   <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n                   <ul>\r\n                     <li>Political Declaration Document</li>\r\n-                    {documentRequirements.idDocumentFile && (\r\n+                    {user.documentRequirements.idDocumentFile && (\r\n                       <li>\r\n                         ID Document:{\" \"}\r\n-                        {documentRequirements.idDocument || \"Not specified\"}\r\n+                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n                       </li>\r\n                     )}\r\n-                    {documentRequirements.photoWithWhiteBg && (\r\n+                    {user.documentRequirements.photoWithWhiteBg && (\r\n                       <li>Photo with White Background</li>\r\n                     )}\r\n-                    {documentRequirements.redThumbprint && (\r\n+                    {user.documentRequirements.redThumbprint && (\r\n                       <li>Thumbprint (red ink)</li>\r\n                     )}\r\n-                    {documentRequirements.utilityBill && (\r\n+                    {user.documentRequirements.utilityBill && (\r\n                       <li>Utility Bill</li>\r\n                     )}\r\n                   </ul>\r\n                 </div>\r\n               )}\r\n-              {documentRequirements.witnessTestimonies?.length > 0 && (\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n                 <div className=\"document-group\">\r\n                   <h4>\r\n                     928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n                   </h4>\r\n@@ -210,9 +204,9 @@\n           )}\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n-              {fullName} {familyName}\r\n+              {user.fullNames} {user.familyName}\r\n             </p>\r\n             <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n           </div>\r\n         </div>\r\n@@ -260,13 +254,8 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n-      // Validate response structure\r\n-      if (!response.data || !response.data.user) {\r\n-        throw new Error(\"Invalid user data response structure\");\r\n-      }\r\n-\r\n       const userData = {\r\n         fullNames: response.data.user.fullNames || \"Unknown\",\r\n         familyName: response.data.user.familyName || \"\",\r\n         email: response.data.user.email || \"No email\",\r\n@@ -299,16 +288,8 @@\n         })\r\n       );\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n-      // Set fallback user data\r\n-      setUserData({\r\n-        fullNames: \"Guest User\",\r\n-        familyName: \"\",\r\n-        email: \"unknown@example.com\",\r\n-        profileImage: null,\r\n-        documentRequirements: {},\r\n-      });\r\n       localStorage.removeItem(\"token\");\r\n       localStorage.removeItem(\"userData\");\r\n       window.location.href = \"/login\";\r\n     } finally {\r\n@@ -327,12 +308,11 @@\n             Authorization: `Bearer ${token}`,\r\n           },\r\n         }\r\n       );\r\n-      setPublicViewUsers(response.data || []);\r\n+      setPublicViewUsers(response.data);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n-      setPublicViewUsers([]);\r\n     } finally {\r\n       setLoadingPublicView(false);\r\n     }\r\n   };\r\n@@ -494,9 +474,9 @@\n             }}\r\n           />\r\n         ) : (\r\n           <div className=\"profile-placeholder\">\r\n-            {userData.fullNames?.charAt(0).toUpperCase() || \"U\"}\r\n+            {userData.fullNames.charAt(0).toUpperCase()}\r\n           </div>\r\n         )}\r\n       </div>\r\n \r\n@@ -691,9 +671,9 @@\n                         publicViewUsers.map((user) => (\r\n                           <div\r\n                             key={user._id}\r\n                             className=\"completed-user\"\r\n-                            onClick={() => setSelectedUser(user || {})}\r\n+                            onClick={() => setSelectedUser(user)}\r\n                           >\r\n                             <div className=\"user-info\">\r\n                               {user.profileImage && (\r\n                                 <img\r\n@@ -702,9 +682,9 @@\n                                   className=\"user-avatar\"\r\n                                 />\r\n                               )}\r\n                               <span>\r\n-                                {user.fullNames || \"Unknown\"} {user.familyName || \"\"}\r\n+                                {user.fullNames} {user.familyName}\r\n                               </span>\r\n                             </div>\r\n                             <span className=\"completed-badge\">\r\n                               View Certificate\r\n@@ -744,9 +724,9 @@\n       </div>\r\n \r\n       {selectedUser && (\r\n         <SatisfactionCertificate\r\n-          user={selectedUser || {}}\r\n+          user={selectedUser}\r\n           onClose={() => setSelectedUser(null)}\r\n         />\r\n       )}\r\n \r\n"
                },
                {
                    "date": 1753701309464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,333 +1,44 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n-  const [isUploading, setIsUploading] = useState(false);\r\n-  const [isDeleting, setIsDeleting] = useState(false);\r\n-  const fileInputRef = useRef(null);\r\n-\r\n-  const handleFolderUpload = (e) => {\r\n-    const files = Array.from(e.target.files);\r\n-    if (files.length === 0) return;\r\n-\r\n-    const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 50 * 1024 * 1024) {\r\n-      alert(\"Total folder size too large (max 50MB)\");\r\n-      return;\r\n-    }\r\n-\r\n-    handleUpload(files);\r\n-  };\r\n-\r\n-  const handleUpload = async (files) => {\r\n-    const formData = new FormData();\r\n-    files.forEach((file) => formData.append(\"files\", file));\r\n-    formData.append(\"label\", label);\r\n-    formData.append(\"documentType\", documentType);\r\n-\r\n-    try {\r\n-      setIsUploading(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n-\r\n-      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n-      if (onFileUploaded) onFileUploaded(label);\r\n-    } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n-    } finally {\r\n-      setIsUploading(false);\r\n-      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n-\r\n-    try {\r\n-      setIsDeleting(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      await axios.post(\r\n-        \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType },\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-      if (onDelete) onDelete(label);\r\n-    } catch (error) {\r\n-      console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n-    } finally {\r\n-      setIsDeleting(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"file-upload-container\">\r\n-      <label\r\n-        className=\"custum-file-upload\"\r\n-        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n-      >\r\n-        <div className=\"icon\">\r\n-          {isUploading ? (\r\n-            <div className=\"loading-spinner-small\"></div>\r\n-          ) : isUploaded ? (\r\n-            <div className=\"upload-success\">‚úî</div>\r\n-          ) : (\r\n-            <svg\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              fill=\"#000000\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              width=\"48px\"\r\n-              height=\"48px\"\r\n-            >\r\n-              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-              <path\r\n-                fill=\"#e8e8e8\"\r\n-                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                9.11 4 6.6 5.64 5.35 8.04 \r\n-                2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-              />\r\n-            </svg>\r\n-          )}\r\n-        </div>\r\n-        <div className=\"text\">\r\n-          <span>{label}</span>\r\n-        </div>\r\n-        <input\r\n-          type=\"file\"\r\n-          ref={fileInputRef}\r\n-          onChange={handleFolderUpload}\r\n-          disabled={isUploading || isUploaded}\r\n-          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n-          multiple\r\n-          webkitdirectory=\"true\"\r\n-          directory=\"true\"\r\n-        />\r\n-      </label>\r\n-      <button\r\n-        className=\"delete-btn\"\r\n-        onClick={handleDeleteClick}\r\n-        title={`Delete ${label}`}\r\n-        disabled={isDeleting || !isUploaded}\r\n-      >\r\n-        {isDeleting ? (\r\n-          <div className=\"loading-spinner-small\"></div>\r\n-        ) : (\r\n-          \"üóëÔ∏è Delete\"\r\n-        )}\r\n-      </button>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-function SatisfactionCertificate({ user, onClose }) {\r\n-  const hasCompletedDocuments = \r\n-    user.documentRequirements?.politicalDeclaration && \r\n-    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    user.documentRequirements?.idDocumentFile;\r\n-\r\n-  return (\r\n-    <div className=\"certificate-overlay\">\r\n-      <div className=\"certificate-container\">\r\n-        <button className=\"close-certificate\" onClick={onClose}>\r\n-          &times;\r\n-        </button>\r\n-        <div className=\"certificate-header\">\r\n-          <h2>Affidavit Testimony of My Status</h2>\r\n-        </div>\r\n-        <div className=\"certificate-body\">\r\n-          <div className=\"affidavit-statement\">\r\n-            <p>\r\n-              I, a living soul being of sound mind, competent and over the age\r\n-              of maturity, hereby affirm the following testimony is true. I have\r\n-              completed the fullness of the sovereign walk.\r\n-            </p>\r\n-          </div>\r\n-          {hasCompletedDocuments && (\r\n-            <div className=\"completed-documents-section\">\r\n-              <h3>Completed Documents:</h3>\r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                  <ul>\r\n-                    <li>Political Declaration Document</li>\r\n-                    {user.documentRequirements.idDocumentFile && (\r\n-                      <li>\r\n-                        ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                      </li>\r\n-                    )}\r\n-                    {user.documentRequirements.photoWithWhiteBg && (\r\n-                      <li>Photo with White Background</li>\r\n-                    )}\r\n-                    {user.documentRequirements.redThumbprint && (\r\n-                      <li>Thumbprint (red ink)</li>\r\n-                    )}\r\n-                    {user.documentRequirements.utilityBill && (\r\n-                      <li>Utility Bill</li>\r\n-                    )}\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>\r\n-                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                  </h4>\r\n-                  <ul>\r\n-                    <li>Act of Expatriation</li>\r\n-                    <li>Certificate of Assumed Name</li>\r\n-                    <li>Notice of Transfer of Reserved Name</li>\r\n-                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                    <li>Paramount Claim of Life</li>\r\n-                    <li>Mandatory Notice</li>\r\n-                    <li>Common Carry Declaration Weapon</li>\r\n-                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                    <li>Baby Deed Affidavit Testimony</li>\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-          <div className=\"signature-section\">\r\n-            <div className=\"signature-line\"></div>\r\n-            <p>\r\n-              {user.fullNames} {user.familyName}\r\n-            </p>\r\n-            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default function Home() {\r\n+function Home() {\r\n   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n-  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n   const [userData, setUserData] = useState({\r\n-    fullNames: \"Loading...\",\r\n-    familyName: \"\",\r\n+    name: \"Loading...\",\r\n     email: \"Loading...\",\r\n-    profileImage: null,\r\n-    documentRequirements: {},\r\n+    profilePic: null\r\n   });\r\n   const [editingName, setEditingName] = useState(false);\r\n   const [editingEmail, setEditingEmail] = useState(false);\r\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n-  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n-  const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem(\"showPublicView\") === \"true\"\r\n-  );\r\n-  const [selectedUser, setSelectedUser] = useState(null);\r\n-  const [loadingUserData, setLoadingUserData] = useState(true);\r\n-  const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n-  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n+  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n+  const [uploadStatus, setUploadStatus] = useState({});\r\n   const [showCertificate, setShowCertificate] = useState(false);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n-      setLoadingUserData(true);\r\n       const token = localStorage.getItem(\"token\");\r\n-      if (!token) {\r\n-        window.location.href = \"/login\";\r\n-        return;\r\n-      }\r\n-\r\n       const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n         headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n+          Authorization: `Bearer ${token}`\r\n+        }\r\n       });\r\n-\r\n-      const userData = {\r\n-        fullNames: response.data.user.fullNames || \"Unknown\",\r\n-        familyName: response.data.user.familyName || \"\",\r\n-        email: response.data.user.email || \"No email\",\r\n-        profileImage: response.data.user.profileImage || null,\r\n-        documentRequirements: response.data.user.documentRequirements || {},\r\n-      };\r\n-\r\n-      setUserData(userData);\r\n-      setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-      setTempEmail(userData.email);\r\n-\r\n-      const uploaded = [];\r\n-      if (userData.documentRequirements) {\r\n-        if (userData.documentRequirements.politicalDeclaration)\r\n-          uploaded.push(\"528\");\r\n-        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n-          uploaded.push(\"928\");\r\n-        if (userData.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"Praecipe\");\r\n-      }\r\n-      setUploadedLabels(uploaded);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames: userData.fullNames,\r\n-          familyName: userData.familyName,\r\n-          email: userData.email,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n+      setUserData(response.data);\r\n+      setTempName(response.data.name);\r\n+      setTempEmail(response.data.email);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n-      localStorage.removeItem(\"token\");\r\n-      localStorage.removeItem(\"userData\");\r\n-      window.location.href = \"/login\";\r\n-    } finally {\r\n-      setLoadingUserData(false);\r\n     }\r\n   };\r\n \r\n-  const fetchPublicViewUsers = async () => {\r\n-    try {\r\n-      setLoadingPublicView(true);\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.get(\r\n-        \"http://localhost:5000/api/home/public-view\",\r\n-        {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-      setPublicViewUsers(response.data);\r\n-    } catch (error) {\r\n-      console.error(\"Failed to fetch public view users:\", error);\r\n-    } finally {\r\n-      setLoadingPublicView(false);\r\n-    }\r\n-  };\r\n-\r\n   useEffect(() => {\r\n     fetchUserData();\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    if (showPublicView) {\r\n-      fetchPublicViewUsers();\r\n-    }\r\n-  }, [showPublicView]);\r\n-\r\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n@@ -342,400 +53,413 @@\n         formData,\r\n         {\r\n           headers: {\r\n             \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n+            Authorization: `Bearer ${token}`\r\n+          }\r\n         }\r\n       );\r\n \r\n-      const updatedUser = {\r\n-        ...userData,\r\n-        profileImage: response.data.filePath,\r\n-      };\r\n-\r\n-      setUserData(updatedUser);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n-          profileImage: response.data.filePath,\r\n-        })\r\n-      );\r\n-\r\n+      setUserData(prev => ({\r\n+        ...prev,\r\n+        profilePic: response.data.filePath\r\n+      }));\r\n       alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n+      alert(\"Failed to upload profile image\");\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n-    if (!tempName.trim() || !tempEmail.trim()) {\r\n-      alert(\"Name and email cannot be empty\");\r\n-      return;\r\n-    }\r\n-\r\n     try {\r\n-      setIsUpdatingProfile(true);\r\n-      const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n-      const familyName = familyNameParts.join(\" \");\r\n-\r\n-      if (!familyName) {\r\n-        alert(\"Please provide both first and last names\");\r\n-        return;\r\n-      }\r\n-\r\n       const token = localStorage.getItem(\"token\");\r\n-\r\n       await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n+          name: tempName,\r\n+          email: tempEmail\r\n         },\r\n         {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n+            Authorization: `Bearer ${token}`\r\n+          }\r\n         }\r\n       );\r\n \r\n-      const updatedUserData = {\r\n-        ...userData,\r\n-        fullNames,\r\n-        familyName,\r\n-        email: tempEmail,\r\n-      };\r\n+      setUserData(prev => ({\r\n+        ...prev,\r\n+        name: tempName,\r\n+        email: tempEmail\r\n+      }));\r\n \r\n-      setUserData(updatedUserData);\r\n-      setTempName(`${fullNames} ${familyName}`);\r\n-      setTempEmail(tempEmail);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n-\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n       console.error(\"Error updating profile:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to update profile\");\r\n-    } finally {\r\n-      setIsUpdatingProfile(false);\r\n+      alert(\"Failed to update profile\");\r\n     }\r\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n-  const handleFileUploaded = (label) => {\r\n-    if (!uploadedLabels.includes(label)) {\r\n-      setUploadedLabels([...uploadedLabels, label]);\r\n+  const handleFileUpload = async (documentType) => {\r\n+    try {\r\n+      setUploadStatus(prev => ({ ...prev, [documentType]: \"uploading\" }));\r\n+      \r\n+      const input = document.createElement(\"input\");\r\n+      input.type = \"file\";\r\n+      input.accept = \".pdf,.jpg,.jpeg,.png\";\r\n+      input.onchange = async (e) => {\r\n+        const file = e.target.files[0];\r\n+        if (!file) return;\r\n+\r\n+        const formData = new FormData();\r\n+        formData.append(\"file\", file);\r\n+        formData.append(\"documentType\", documentType);\r\n+\r\n+        const token = localStorage.getItem(\"token\");\r\n+        await axios.post(\r\n+          \"http://localhost:5000/api/home/upload\",\r\n+          formData,\r\n+          {\r\n+            headers: {\r\n+              \"Content-Type\": \"multipart/form-data\",\r\n+              Authorization: `Bearer ${token}`\r\n+            }\r\n+          }\r\n+        );\r\n+\r\n+        setUploadStatus(prev => ({ ...prev, [documentType]: \"uploaded\" }));\r\n+        alert(`${documentType} uploaded successfully!`);\r\n+      };\r\n+      input.click();\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      setUploadStatus(prev => ({ ...prev, [documentType]: \"error\" }));\r\n+      alert(\"Failed to upload document\");\r\n     }\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n   };\r\n \r\n-  const handleFileDeleted = (label) => {\r\n-    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n-    fetchUserData(); // Refresh user data to get latest document status\r\n-  };\r\n-\r\n-  const hasCompletedAllDocuments = \r\n-    userData.documentRequirements?.politicalDeclaration && \r\n-    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    userData.documentRequirements?.idDocumentFile;\r\n-\r\n   return (\r\n-    <>\r\n-      <div\r\n-        className=\"sidebar-toggle\"\r\n-        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n-      >\r\n-        {userData.profileImage ? (\r\n+    <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n+      {/* Sidebar Toggle */}\r\n+      <div className=\"sidebar-toggle\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n+        {userData.profilePic ? (\r\n           <img\r\n-            src={`http://localhost:5000${userData.profileImage}`}\r\n+            src={`http://localhost:5000${userData.profilePic}`}\r\n             alt=\"Profile\"\r\n             className=\"profile-img\"\r\n-            onError={(e) => {\r\n-              e.target.onerror = null;\r\n-              e.target.src = \"/default-profile.png\";\r\n-            }}\r\n           />\r\n         ) : (\r\n-          <div className=\"profile-placeholder\">\r\n-            {userData.fullNames.charAt(0).toUpperCase()}\r\n-          </div>\r\n+          <span>üë§</span>\r\n         )}\r\n       </div>\r\n \r\n-      <input\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        style={{ display: \"none\" }}\r\n-        ref={profileInputRef}\r\n-        onChange={handleProfileImageChange}\r\n-      />\r\n-\r\n+      {/* Sidebar */}\r\n       <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n         <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n           &larr; Back\r\n         </button>\r\n-        <h2>User Info</h2>\r\n+        <h2>User Profile</h2>\r\n \r\n-        {loadingUserData ? (\r\n-          <div className=\"loading-container\">\r\n-            <div className=\"loading-spinner\"></div>\r\n-            <p>Loading user data...</p>\r\n+        {/* Profile Image Upload */}\r\n+        <div\r\n+          className=\"profile-upload\"\r\n+          onClick={() => profileInputRef.current.click()}\r\n+        >\r\n+          {userData.profilePic ? (\r\n+            <img\r\n+              src={`http://localhost:5000${userData.profilePic}`}\r\n+              alt=\"Profile\"\r\n+              className=\"profile-image\"\r\n+            />\r\n+          ) : (\r\n+            <div className=\"profile-upload-placeholder\">\r\n+              <span>Click to upload profile image</span>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+        <input\r\n+          type=\"file\"\r\n+          accept=\"image/*\"\r\n+          ref={profileInputRef}\r\n+          onChange={handleProfileImageChange}\r\n+          style={{ display: \"none\" }}\r\n+        />\r\n+\r\n+        {/* Editable Fields */}\r\n+        <div className=\"editable-field\">\r\n+          <label>Name:</label>\r\n+          {editingName ? (\r\n+            <input\r\n+              type=\"text\"\r\n+              value={tempName}\r\n+              onChange={(e) => setTempName(e.target.value)}\r\n+              autoFocus\r\n+            />\r\n+          ) : (\r\n+            <span>{userData.name}</span>\r\n+          )}\r\n+          <button\r\n+            className=\"edit-btn\"\r\n+            onClick={() => setEditingName(!editingName)}\r\n+          >\r\n+            {editingName ? \"‚úï\" : \"‚úèÔ∏è\"}\r\n+          </button>\r\n+        </div>\r\n+\r\n+        <div className=\"editable-field\">\r\n+          <label>Email:</label>\r\n+          {editingEmail ? (\r\n+            <input\r\n+              type=\"email\"\r\n+              value={tempEmail}\r\n+              onChange={(e) => setTempEmail(e.target.value)}\r\n+              autoFocus\r\n+            />\r\n+          ) : (\r\n+            <span>{userData.email}</span>\r\n+          )}\r\n+          <button\r\n+            className=\"edit-btn\"\r\n+            onClick={() => setEditingEmail(!editingEmail)}\r\n+          >\r\n+            {editingEmail ? \"‚úï\" : \"‚úèÔ∏è\"}\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {(editingName || editingEmail) && (\r\n+          <div className=\"save-section\">\r\n+            <button className=\"save-btn\" onClick={saveUserData}>\r\n+              Save Changes\r\n+            </button>\r\n           </div>\r\n-        ) : (\r\n-          <>\r\n-            <div\r\n-              className=\"profile-upload\"\r\n-              onClick={() => profileInputRef.current?.click()}\r\n-              title=\"Click to upload profile image\"\r\n-            >\r\n-              {userData.profileImage ? (\r\n-                <img\r\n-                  src={`http://localhost:5000${userData.profileImage}`}\r\n-                  alt=\"Profile\"\r\n-                  className=\"profile-image\"\r\n-                />\r\n+        )}\r\n+\r\n+        {/* Document Upload Section */}\r\n+        <h3>Document Upload</h3>\r\n+        <div className=\"document-upload-section\">\r\n+          <div\r\n+            className={`custum-file-upload ${\r\n+              uploadStatus.politicalDeclaration === \"uploaded\" ? \"uploaded\" : \"\"\r\n+            }`}\r\n+            onClick={() => handleFileUpload(\"politicalDeclaration\")}\r\n+          >\r\n+            <div className=\"icon\">\r\n+              {uploadStatus.politicalDeclaration === \"uploading\" ? (\r\n+                <div className=\"loading-spinner\" />\r\n+              ) : uploadStatus.politicalDeclaration === \"uploaded\" ? (\r\n+                <div className=\"upload-success\">‚úî</div>\r\n               ) : (\r\n-                <div className=\"profile-upload-placeholder\">\r\n-                  <span>+ Upload Profile Image</span>\r\n-                </div>\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"#000000\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+                  <path\r\n+                    fill=\"#e8e8e8\"\r\n+                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                    9.11 4 6.6 5.64 5.35 8.04 \r\n+                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+                  />\r\n+                </svg>\r\n               )}\r\n             </div>\r\n+            <div className=\"text\">\r\n+              <span>Political Declaration</span>\r\n+            </div>\r\n+          </div>\r\n \r\n-            <div className=\"editable-field\">\r\n-              <label>Name:</label>\r\n-              {editingName ? (\r\n-                <input\r\n-                  type=\"text\"\r\n-                  value={tempName}\r\n-                  onChange={(e) => setTempName(e.target.value)}\r\n-                  autoFocus\r\n-                />\r\n+          <div\r\n+            className={`custum-file-upload ${\r\n+              uploadStatus.witnessTestimonies === \"uploaded\" ? \"uploaded\" : \"\"\r\n+            }`}\r\n+            onClick={() => handleFileUpload(\"witnessTestimonies\")}\r\n+          >\r\n+            <div className=\"icon\">\r\n+              {uploadStatus.witnessTestimonies === \"uploading\" ? (\r\n+                <div className=\"loading-spinner\" />\r\n+              ) : uploadStatus.witnessTestimonies === \"uploaded\" ? (\r\n+                <div className=\"upload-success\">‚úî</div>\r\n               ) : (\r\n-                <span>{tempName}</span>\r\n-              )}\r\n-              {!editingName && (\r\n-                <button\r\n-                  className=\"edit-btn\"\r\n-                  onClick={() => setEditingName(true)}\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"#000000\"\r\n+                  viewBox=\"0 0 24 24\"\r\n                 >\r\n-                  ‚úèÔ∏è\r\n-                </button>\r\n+                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+                  <path\r\n+                    fill=\"#e8e8e8\"\r\n+                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                    9.11 4 6.6 5.64 5.35 8.04 \r\n+                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+                  />\r\n+                </svg>\r\n               )}\r\n             </div>\r\n+            <div className=\"text\">\r\n+              <span>Witness Testimonies</span>\r\n+            </div>\r\n+          </div>\r\n \r\n-            <div className=\"editable-field\">\r\n\\ No newline at end of file\n-              <label>Email:</label>\r\n-              {editingEmail ? (\r\n-                <input\r\n-                  type=\"email\"\r\n-                  value={tempEmail}\r\n-                  onChange={(e) => setTempEmail(e.target.value)}\r\n-                  autoFocus\r\n-                />\r\n+          <div\r\n+            className={`custum-file-upload ${\r\n+              uploadStatus.idDocument === \"uploaded\" ? \"uploaded\" : \"\"\r\n+            }`}\r\n+            onClick={() => handleFileUpload(\"idDocument\")}\r\n+          >\r\n+            <div className=\"icon\">\r\n+              {uploadStatus.idDocument === \"uploading\" ? (\r\n+                <div className=\"loading-spinner\" />\r\n+              ) : uploadStatus.idDocument === \"uploaded\" ? (\r\n+                <div className=\"upload-success\">‚úî</div>\r\n               ) : (\r\n-                <span>{tempEmail}</span>\r\n-              )}\r\n-              {!editingEmail && (\r\n-                <button\r\n-                  className=\"edit-btn\"\r\n-                  onClick={() => setEditingEmail(true)}\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"#000000\"\r\n+                  viewBox=\"0 0 24 24\"\r\n                 >\r\n-                  ‚úèÔ∏è\r\n-                </button>\r\n+                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+                  <path\r\n+                    fill=\"#e8e8e8\"\r\n+                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                    9.11 4 6.6 5.64 5.35 8.04 \r\n+                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+                  />\r\n+                </svg>\r\n               )}\r\n             </div>\r\n+            <div className=\"text\">\r\n+              <span>ID Document</span>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n \r\n-            {(editingName || editingEmail) && (\r\n-              <div className=\"save-section\">\r\n-                <button\r\n-                  className=\"save-btn\"\r\n-                  onClick={saveUserData}\r\n-                  disabled={isUpdatingProfile}\r\n-                >\r\n-                  {isUpdatingProfile ? (\r\n-                    <div className=\"loading-spinner-small\"></div>\r\n-                  ) : (\r\n-                    \"Save Changes\"\r\n-                  )}\r\n-                </button>\r\n-                <button\r\n-                  className=\"cancel-btn\"\r\n-                  onClick={() => {\r\n-                    setEditingName(false);\r\n-                    setEditingEmail(false);\r\n-                    setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n-                    setTempEmail(userData.email);\r\n-                  }}\r\n-                >\r\n-                  Cancel\r\n-                </button>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"document-uploads\">\r\n-              <h3>Document Uploads</h3>\r\n-              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n-                <div key={label} className=\"upload-item\">\r\n-                  <FileUpload\r\n-                    label={label}\r\n-                    documentType={\r\n-                      label === \"528\"\r\n-                        ? \"politicalDeclaration\"\r\n-                        : label === \"928\"\r\n-                        ? \"witnessTestimonies\"\r\n-                        : \"idDocument\"\r\n-                    }\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n-                    isUploaded={\r\n-                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n-                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n-                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n-                    }\r\n-                  />\r\n-                </div>\r\n-              ))}\r\n+        {/* Certificate Section */}\r\n+        <div className=\"certificate-preview\">\r\n+          <div className=\"certificate-thumbnail\">\r\n+            <div className=\"certificate-thumbnail-content\">\r\n+              <h4>Certificate of Completion</h4>\r\n+              <p>View your completed certificate</p>\r\n             </div>\r\n+          </div>\r\n+          <button\r\n+            className=\"view-certificate-btn\"\r\n+            onClick={() => setShowCertificate(true)}\r\n+          >\r\n+            View Certificate\r\n+          </button>\r\n+        </div>\r\n \r\n-            {hasCompletedAllDocuments && (\r\n-              <div className=\"certificate-section\">\r\n-                <button \r\n-                  className=\"view-certificate-btn\"\r\n-                  onClick={() => setShowCertificate(true)}\r\n-                >\r\n-                  View My Certificate\r\n-                </button>\r\n+        {/* Logout Button */}\r\n+        <button className=\"logout-btn\" onClick={handleLogout}>\r\n+          Logout\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Main Content */}\r\n+      <div className=\"main-content\">\r\n+        <h1>Welcome, {userData.name}</h1>\r\n+        \r\n+        {/* Upload Button with Dropdown */}\r\n+        <div className=\"upload-container\">\r\n+          <button\r\n+            className=\"upload-btn\"\r\n+            onClick={() => setDropdownOpen(!dropdownOpen)}\r\n+          >\r\n+            Upload Documents\r\n+          </button>\r\n+          \r\n+          {dropdownOpen && (\r\n+            <div className=\"dropdown-menu\">\r\n+              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"politicalDeclaration\")}>\r\n+                Political Declaration\r\n+                {uploadStatus.politicalDeclaration === \"uploaded\" && (\r\n+                  <span className=\"tick\">‚úì</span>\r\n+                )}\r\n               </div>\r\n-            )}\r\n-\r\n-            <div className=\"logout-section\">\r\n-              <button className=\"logout-btn\" onClick={handleLogout}>\r\n-                Logout\r\n-              </button>\r\n+              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"witnessTestimonies\")}>\r\n+                Witness Testimonies\r\n+                {uploadStatus.witnessTestimonies === \"uploaded\" && (\r\n+                  <span className=\"tick\">‚úì</span>\r\n+                )}\r\n+              </div>\r\n+              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"idDocument\")}>\r\n+                ID Document\r\n+                {uploadStatus.idDocument === \"uploaded\" && (\r\n+                  <span className=\"tick\">‚úì</span>\r\n+                )}\r\n+              </div>\r\n             </div>\r\n-          </>\r\n-        )}\r\n+          )}\r\n+        </div>\r\n       </div>\r\n \r\n-      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-        <div className=\"main-content\">\r\n-          {loadingUserData ? (\r\n-            <div className=\"loading-container\">\r\n-              <div className=\"loading-spinner\"></div>\r\n-              <p>Loading your data...</p>\r\n+      {/* Certificate Modal */}\r\n+      {showCertificate && (\r\n+        <div className=\"certificate-overlay\">\r\n+          <div className=\"certificate-container\">\r\n+            <button\r\n+              className=\"close-certificate\"\r\n+              onClick={() => setShowCertificate(false)}\r\n+            >\r\n+              &times;\r\n+            </button>\r\n+            \r\n+            <div className=\"certificate-header\">\r\n+              <h2>Certificate of Completion</h2>\r\n+              <div className=\"certificate-seal\">‚úß</div>\r\n             </div>\r\n-          ) : (\r\n-            <>\r\n-              <h2>\r\n-                Welcome, {userData.fullNames} {userData.familyName}\r\n-              </h2>\r\n-\r\n-              <button\r\n-                className=\"public-view-btn\"\r\n-                onClick={() => setShowPublicView(!showPublicView)}\r\n-              >\r\n-                {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n-              </button>\r\n-\r\n-              {showPublicView ? (\r\n-                <div className=\"public-view-container\">\r\n-                  <h3>Users with Completed Documents</h3>\r\n-                  {loadingPublicView ? (\r\n-                    <div className=\"loading-container\">\r\n-                      <div className=\"loading-spinner\"></div>\r\n-                      <p>Loading public records...</p>\r\n-                    </div>\r\n-                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n-                    <p>No users have completed all documents yet</p>\r\n-                  ) : (\r\n-                    <div className=\"completed-users-list\">\r\n-                      {Array.isArray(publicViewUsers) &&\r\n-                        publicViewUsers.map((user) => (\r\n-                          <div\r\n-                            key={user._id}\r\n-                            className=\"completed-user\"\r\n-                            onClick={() => setSelectedUser(user)}\r\n-                          >\r\n-                            <div className=\"user-info\">\r\n-                              {user.profileImage && (\r\n-                                <img\r\n-                                  src={`http://localhost:5000${user.profileImage}`}\r\n-                                  alt=\"Profile\"\r\n-                                  className=\"user-avatar\"\r\n-                                />\r\n-                              )}\r\n-                              <span>\r\n-                                {user.fullNames} {user.familyName}\r\n-                              </span>\r\n-                            </div>\r\n-                            <span className=\"completed-badge\">\r\n-                              View Certificate\r\n-                            </span>\r\n-                          </div>\r\n-                        ))}\r\n-                    </div>\r\n-                  )}\r\n+            \r\n+            <div className=\"certificate-body\">\r\n+              <p className=\"certificate-issued\">This certifies that</p>\r\n+              <h3 className=\"certificate-name\">\r\n+                {userData.name}\r\n+              </h3>\r\n+              <p className=\"certificate-text\">\r\n+                Has successfully completed all required documentation\r\n+                for the sovereign process.\r\n+              </p>\r\n+              \r\n+              <div className=\"certificate-details\">\r\n+                <div className=\"certificate-detail\">\r\n+                  <span className=\"detail-label\">Date Issued</span>\r\n+                  <span>{new Date().toLocaleDateString()}</span>\r\n                 </div>\r\n-              ) : (\r\n-                <div className=\"dashboard-info\">\r\n-                  <div className=\"completion-status\">\r\n-                    <h4>Your Document Completion:</h4>\r\n-                    <div className=\"progress-bar\">\r\n-                      <div\r\n-                        className=\"progress-fill\"\r\n-                        style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n-                        }}\r\n-                      ></div>\r\n-                    </div>\r\n-                    <p>\r\n-                      {hasCompletedAllDocuments ? (\r\n-                        <span className=\"completed-text\">\r\n-                          ‚úÖ All documents completed! You can now view your certificate.\r\n-                        </span>\r\n-                      ) : (\r\n-                        `${uploadedLabels.length} of 3 documents uploaded`\r\n-                      )}\r\n-                    </p>\r\n-                  </div>\r\n+                <div className=\"certificate-detail\">\r\n+                  <span className=\"detail-label\">Document Number</span>\r\n+                  <span>#{Math.floor(Math.random() * 1000000)}</span>\r\n                 </div>\r\n-              )}\r\n-            </>\r\n-          )}\r\n+              </div>\r\n+              \r\n+              <div className=\"certificate-signatures\">\r\n+                <div className=\"signature-line\"></div>\r\n+                <p>Authorized Signature</p>\r\n+              </div>\r\n+            </div>\r\n+            \r\n+            <div className=\"certificate-footer\">\r\n+              <p>This certificate is digitally signed and verifiable</p>\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n-      </div>\r\n-\r\n-      {selectedUser && (\r\n-        <SatisfactionCertificate\r\n-          user={selectedUser}\r\n-          onClose={() => setSelectedUser(null)}\r\n-        />\r\n       )}\r\n+    </div>\r\n+  );\r\n+}\r\n \r\n-      {showCertificate && (\r\n-        <SatisfactionCertificate\r\n-          user={userData}\r\n-          onClose={() => setShowCertificate(false)}\r\n-        />\r\n-      )}\r\n-    </>\r\n-  );\r\n-}\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753701437268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,333 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function Home() {\r\n+function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n+  const [isUploading, setIsUploading] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+  const fileInputRef = useRef(null);\r\n+\r\n+  const handleFolderUpload = (e) => {\r\n+    const files = Array.from(e.target.files);\r\n+    if (files.length === 0) return;\r\n+\r\n+    const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n+    if (totalSize > 50 * 1024 * 1024) {\r\n+      alert(\"Total folder size too large (max 50MB)\");\r\n+      return;\r\n+    }\r\n+\r\n+    handleUpload(files);\r\n+  };\r\n+\r\n+  const handleUpload = async (files) => {\r\n+    const formData = new FormData();\r\n+    files.forEach((file) => formData.append(\"files\", file));\r\n+    formData.append(\"label\", label);\r\n+    formData.append(\"documentType\", documentType);\r\n+\r\n+    try {\r\n+      setIsUploading(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      await axios.post(\"http://localhost:5000/api/home/upload\", formData, {\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+\r\n+      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n+      if (onFileUploaded) onFileUploaded(label);\r\n+    } catch (error) {\r\n+      console.error(\"Upload error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n+    } finally {\r\n+      setIsUploading(false);\r\n+      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n+    }\r\n+  };\r\n+\r\n+  const handleDeleteClick = async () => {\r\n+    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      await axios.post(\r\n+        \"http://localhost:5000/api/home/delete-document\",\r\n+        { documentType },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      if (onDelete) onDelete(label);\r\n+    } catch (error) {\r\n+      console.error(\"Delete error:\", error);\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"file-upload-container\">\r\n+      <label\r\n+        className=\"custum-file-upload\"\r\n+        style={{ opacity: isUploading ? 0.7 : 1 }}\r\n+      >\r\n+        <div className=\"icon\">\r\n+          {isUploading ? (\r\n+            <div className=\"loading-spinner-small\"></div>\r\n+          ) : isUploaded ? (\r\n+            <div className=\"upload-success\">‚úî</div>\r\n+          ) : (\r\n+            <svg\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              fill=\"#000000\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              width=\"48px\"\r\n+              height=\"48px\"\r\n+            >\r\n+              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n+              <path\r\n+                fill=\"#e8e8e8\"\r\n+                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n+                9.11 4 6.6 5.64 5.35 8.04 \r\n+                2.34 8.36 0 10.91 0 14c0 3.31 \r\n+                2.69 6 6 6h13c2.76 0 5-2.24 \r\n+                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n+                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n+              />\r\n+            </svg>\r\n+          )}\r\n+        </div>\r\n+        <div className=\"text\">\r\n+          <span>{label}</span>\r\n+        </div>\r\n+        <input\r\n+          type=\"file\"\r\n+          ref={fileInputRef}\r\n+          onChange={handleFolderUpload}\r\n+          disabled={isUploading || isUploaded}\r\n+          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n+          multiple\r\n+          webkitdirectory=\"true\"\r\n+          directory=\"true\"\r\n+        />\r\n+      </label>\r\n+      <button\r\n+        className=\"delete-btn\"\r\n+        onClick={handleDeleteClick}\r\n+        title={`Delete ${label}`}\r\n+        disabled={isDeleting || !isUploaded}\r\n+      >\r\n+        {isDeleting ? (\r\n+          <div className=\"loading-spinner-small\"></div>\r\n+        ) : (\r\n+          \"üóëÔ∏è Delete\"\r\n+        )}\r\n+      </button>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+function SatisfactionCertificate({ user, onClose }) {\r\n+  const hasCompletedDocuments = \r\n+    user.documentRequirements?.politicalDeclaration && \r\n+    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    user.documentRequirements?.idDocumentFile;\r\n+\r\n+  return (\r\n+    <div className=\"certificate-overlay\">\r\n+      <div className=\"certificate-container\">\r\n+        <button className=\"close-certificate\" onClick={onClose}>\r\n+          &times;\r\n+        </button>\r\n+        <div className=\"certificate-header\">\r\n+          <h2>Affidavit Testimony of My Status</h2>\r\n+        </div>\r\n+        <div className=\"certificate-body\">\r\n+          <div className=\"affidavit-statement\">\r\n+            <p>\r\n+              I, a living soul being of sound mind, competent and over the age\r\n+              of maturity, hereby affirm the following testimony is true. I have\r\n+              completed the fullness of the sovereign walk.\r\n+            </p>\r\n+          </div>\r\n+          {hasCompletedDocuments && (\r\n+            <div className=\"completed-documents-section\">\r\n+              <h3>Completed Documents:</h3>\r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <ul>\r\n+                    <li>Political Declaration Document</li>\r\n+                    {user.documentRequirements.idDocumentFile && (\r\n+                      <li>\r\n+                        ID Document:{\" \"}\r\n+                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n+                      </li>\r\n+                    )}\r\n+                    {user.documentRequirements.photoWithWhiteBg && (\r\n+                      <li>Photo with White Background</li>\r\n+                    )}\r\n+                    {user.documentRequirements.redThumbprint && (\r\n+                      <li>Thumbprint (red ink)</li>\r\n+                    )}\r\n+                    {user.documentRequirements.utilityBill && (\r\n+                      <li>Utility Bill</li>\r\n+                    )}\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>\r\n+                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n+                  </h4>\r\n+                  <ul>\r\n+                    <li>Act of Expatriation</li>\r\n+                    <li>Certificate of Assumed Name</li>\r\n+                    <li>Notice of Transfer of Reserved Name</li>\r\n+                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n+                    <li>Paramount Claim of Life</li>\r\n+                    <li>Mandatory Notice</li>\r\n+                    <li>Common Carry Declaration Weapon</li>\r\n+                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n+                    <li>Baby Deed Affidavit Testimony</li>\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+          <div className=\"signature-section\">\r\n+            <div className=\"signature-line\"></div>\r\n+            <p>\r\n+              {user.fullNames} {user.familyName}\r\n+            </p>\r\n+            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default function Home() {\r\n   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n+  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n   const [userData, setUserData] = useState({\r\n-    name: \"Loading...\",\r\n+    fullNames: \"Loading...\",\r\n+    familyName: \"\",\r\n     email: \"Loading...\",\r\n-    profilePic: null\r\n+    profileImage: null,\r\n+    documentRequirements: {},\r\n   });\r\n   const [editingName, setEditingName] = useState(false);\r\n   const [editingEmail, setEditingEmail] = useState(false);\r\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n-  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n-  const [uploadStatus, setUploadStatus] = useState({});\r\n+  const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n+  const [showPublicView, setShowPublicView] = useState(\r\n+    localStorage.getItem(\"showPublicView\") === \"true\"\r\n+  );\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const [loadingUserData, setLoadingUserData] = useState(true);\r\n+  const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n+  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n   const [showCertificate, setShowCertificate] = useState(false);\r\n   const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n+      setLoadingUserData(true);\r\n       const token = localStorage.getItem(\"token\");\r\n+      if (!token) {\r\n+        window.location.href = \"/login\";\r\n+        return;\r\n+      }\r\n+\r\n       const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n         headers: {\r\n-          Authorization: `Bearer ${token}`\r\n-        }\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n       });\r\n-      setUserData(response.data);\r\n-      setTempName(response.data.name);\r\n-      setTempEmail(response.data.email);\r\n+\r\n+      const userData = {\r\n+        fullNames: response.data.user.fullNames || \"Unknown\",\r\n+        familyName: response.data.user.familyName || \"\",\r\n+        email: response.data.user.email || \"No email\",\r\n+        profileImage: response.data.user.profileImage || null,\r\n+        documentRequirements: response.data.user.documentRequirements || {},\r\n+      };\r\n+\r\n+      setUserData(userData);\r\n+      setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+      setTempEmail(userData.email);\r\n+\r\n+      const uploaded = [];\r\n+      if (userData.documentRequirements) {\r\n+        if (userData.documentRequirements.politicalDeclaration)\r\n+          uploaded.push(\"528\");\r\n+        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n+          uploaded.push(\"928\");\r\n+        if (userData.documentRequirements.idDocumentFile)\r\n+          uploaded.push(\"Praecipe\");\r\n+      }\r\n+      setUploadedLabels(uploaded);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames: userData.fullNames,\r\n+          familyName: userData.familyName,\r\n+          email: userData.email,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n+      localStorage.removeItem(\"token\");\r\n+      localStorage.removeItem(\"userData\");\r\n+      window.location.href = \"/login\";\r\n+    } finally {\r\n+      setLoadingUserData(false);\r\n     }\r\n   };\r\n \r\n+  const fetchPublicViewUsers = async () => {\r\n+    try {\r\n+      setLoadingPublicView(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const response = await axios.get(\r\n+        \"http://localhost:5000/api/home/public-view\",\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        }\r\n+      );\r\n+      setPublicViewUsers(response.data);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to fetch public view users:\", error);\r\n+    } finally {\r\n+      setLoadingPublicView(false);\r\n+    }\r\n+  };\r\n+\r\n   useEffect(() => {\r\n     fetchUserData();\r\n   }, []);\r\n \r\n+  useEffect(() => {\r\n+    if (showPublicView) {\r\n+      fetchPublicViewUsers();\r\n+    }\r\n+  }, [showPublicView]);\r\n+\r\n   const handleProfileImageChange = async (e) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n@@ -53,413 +342,400 @@\n         formData,\r\n         {\r\n           headers: {\r\n             \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`\r\n-          }\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n         }\r\n       );\r\n \r\n-      setUserData(prev => ({\r\n-        ...prev,\r\n-        profilePic: response.data.filePath\r\n-      }));\r\n+      const updatedUser = {\r\n+        ...userData,\r\n+        profileImage: response.data.filePath,\r\n+      };\r\n+\r\n+      setUserData(updatedUser);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n+          profileImage: response.data.filePath,\r\n+        })\r\n+      );\r\n+\r\n       alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n-      alert(\"Failed to upload profile image\");\r\n+      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n     }\r\n   };\r\n \r\n   const saveUserData = async () => {\r\n+    if (!tempName.trim() || !tempEmail.trim()) {\r\n+      alert(\"Name and email cannot be empty\");\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n+      setIsUpdatingProfile(true);\r\n+      const [fullNames, ...familyNameParts] = tempName.split(\" \");\r\n+      const familyName = familyNameParts.join(\" \");\r\n+\r\n+      if (!familyName) {\r\n+        alert(\"Please provide both first and last names\");\r\n+        return;\r\n+      }\r\n+\r\n       const token = localStorage.getItem(\"token\");\r\n+\r\n       await axios.put(\r\n         \"http://localhost:5000/api/auth/update\",\r\n         {\r\n-          name: tempName,\r\n-          email: tempEmail\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n         },\r\n         {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`\r\n-          }\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n         }\r\n       );\r\n \r\n-      setUserData(prev => ({\r\n-        ...prev,\r\n-        name: tempName,\r\n-        email: tempEmail\r\n-      }));\r\n+      const updatedUserData = {\r\n+        ...userData,\r\n+        fullNames,\r\n+        familyName,\r\n+        email: tempEmail,\r\n+      };\r\n \r\n+      setUserData(updatedUserData);\r\n+      setTempName(`${fullNames} ${familyName}`);\r\n+      setTempEmail(tempEmail);\r\n+\r\n+      localStorage.setItem(\r\n+        \"userData\",\r\n+        JSON.stringify({\r\n+          fullNames,\r\n+          familyName,\r\n+          email: tempEmail,\r\n+          profileImage: userData.profileImage,\r\n+        })\r\n+      );\r\n+\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n       console.error(\"Error updating profile:\", error);\r\n-      alert(\"Failed to update profile\");\r\n+      alert(error.response?.data?.message || \"Failed to update profile\");\r\n+    } finally {\r\n+      setIsUpdatingProfile(false);\r\n     }\r\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n+    localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n-  const handleFileUpload = async (documentType) => {\r\n-    try {\r\n-      setUploadStatus(prev => ({ ...prev, [documentType]: \"uploading\" }));\r\n-      \r\n-      const input = document.createElement(\"input\");\r\n-      input.type = \"file\";\r\n-      input.accept = \".pdf,.jpg,.jpeg,.png\";\r\n-      input.onchange = async (e) => {\r\n-        const file = e.target.files[0];\r\n-        if (!file) return;\r\n+  const handleFileUploaded = (label) => {\r\n+    if (!uploadedLabels.includes(label)) {\r\n+      setUploadedLabels([...uploadedLabels, label]);\r\n+    }\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n \r\n-        const formData = new FormData();\r\n-        formData.append(\"file\", file);\r\n-        formData.append(\"documentType\", documentType);\r\n+  const handleFileDeleted = (label) => {\r\n+    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    fetchUserData(); // Refresh user data to get latest document status\r\n+  };\r\n \r\n-        const token = localStorage.getItem(\"token\");\r\n-        await axios.post(\r\n-          \"http://localhost:5000/api/home/upload\",\r\n-          formData,\r\n-          {\r\n-            headers: {\r\n-              \"Content-Type\": \"multipart/form-data\",\r\n-              Authorization: `Bearer ${token}`\r\n-            }\r\n-          }\r\n-        );\r\n+  const hasCompletedAllDocuments = \r\n+    userData.documentRequirements?.politicalDeclaration && \r\n+    userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n+    userData.documentRequirements?.idDocumentFile;\r\n \r\n-        setUploadStatus(prev => ({ ...prev, [documentType]: \"uploaded\" }));\r\n-        alert(`${documentType} uploaded successfully!`);\r\n-      };\r\n-      input.click();\r\n-    } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      setUploadStatus(prev => ({ ...prev, [documentType]: \"error\" }));\r\n-      alert(\"Failed to upload document\");\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n-    <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n-      {/* Sidebar Toggle */}\r\n-      <div className=\"sidebar-toggle\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n-        {userData.profilePic ? (\r\n+    <>\r\n+      <div\r\n+        className=\"sidebar-toggle\"\r\n+        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n+      >\r\n+        {userData.profileImage ? (\r\n           <img\r\n-            src={`http://localhost:5000${userData.profilePic}`}\r\n+            src={`http://localhost:5000${userData.profileImage}`}\r\n             alt=\"Profile\"\r\n             className=\"profile-img\"\r\n+            onError={(e) => {\r\n+              e.target.onerror = null;\r\n+              e.target.src = \"/default-profile.png\";\r\n+            }}\r\n           />\r\n         ) : (\r\n-          <span>üë§</span>\r\n+          <div className=\"profile-placeholder\">\r\n+            {userData.fullNames.charAt(0).toUpperCase()}\r\n+          </div>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Sidebar */}\r\n+      <input\r\n+        type=\"file\"\r\n+        accept=\"image/*\"\r\n+        style={{ display: \"none\" }}\r\n+        ref={profileInputRef}\r\n+        onChange={handleProfileImageChange}\r\n+      />\r\n+\r\n       <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n         <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n           &larr; Back\r\n         </button>\r\n-        <h2>User Profile</h2>\r\n+        <h2>User Info</h2>\r\n \r\n-        {/* Profile Image Upload */}\r\n-        <div\r\n-          className=\"profile-upload\"\r\n-          onClick={() => profileInputRef.current.click()}\r\n-        >\r\n-          {userData.profilePic ? (\r\n-            <img\r\n-              src={`http://localhost:5000${userData.profilePic}`}\r\n-              alt=\"Profile\"\r\n-              className=\"profile-image\"\r\n-            />\r\n-          ) : (\r\n-            <div className=\"profile-upload-placeholder\">\r\n-              <span>Click to upload profile image</span>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-        <input\r\n-          type=\"file\"\r\n-          accept=\"image/*\"\r\n-          ref={profileInputRef}\r\n-          onChange={handleProfileImageChange}\r\n-          style={{ display: \"none\" }}\r\n-        />\r\n-\r\n-        {/* Editable Fields */}\r\n-        <div className=\"editable-field\">\r\n-          <label>Name:</label>\r\n-          {editingName ? (\r\n-            <input\r\n-              type=\"text\"\r\n-              value={tempName}\r\n-              onChange={(e) => setTempName(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{userData.name}</span>\r\n-          )}\r\n-          <button\r\n-            className=\"edit-btn\"\r\n-            onClick={() => setEditingName(!editingName)}\r\n-          >\r\n-            {editingName ? \"‚úï\" : \"‚úèÔ∏è\"}\r\n-          </button>\r\n-        </div>\r\n-\r\n-        <div className=\"editable-field\">\r\n-          <label>Email:</label>\r\n-          {editingEmail ? (\r\n-            <input\r\n-              type=\"email\"\r\n-              value={tempEmail}\r\n-              onChange={(e) => setTempEmail(e.target.value)}\r\n-              autoFocus\r\n-            />\r\n-          ) : (\r\n-            <span>{userData.email}</span>\r\n-          )}\r\n-          <button\r\n-            className=\"edit-btn\"\r\n-            onClick={() => setEditingEmail(!editingEmail)}\r\n-          >\r\n-            {editingEmail ? \"‚úï\" : \"‚úèÔ∏è\"}\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {(editingName || editingEmail) && (\r\n-          <div className=\"save-section\">\r\n-            <button className=\"save-btn\" onClick={saveUserData}>\r\n-              Save Changes\r\n-            </button>\r\n+        {loadingUserData ? (\r\n+          <div className=\"loading-container\">\r\n+            <div className=\"loading-spinner\"></div>\r\n+            <p>Loading user data...</p>\r\n           </div>\r\n-        )}\r\n-\r\n-        {/* Document Upload Section */}\r\n-        <h3>Document Upload</h3>\r\n-        <div className=\"document-upload-section\">\r\n-          <div\r\n-            className={`custum-file-upload ${\r\n-              uploadStatus.politicalDeclaration === \"uploaded\" ? \"uploaded\" : \"\"\r\n-            }`}\r\n-            onClick={() => handleFileUpload(\"politicalDeclaration\")}\r\n-          >\r\n-            <div className=\"icon\">\r\n-              {uploadStatus.politicalDeclaration === \"uploading\" ? (\r\n-                <div className=\"loading-spinner\" />\r\n-              ) : uploadStatus.politicalDeclaration === \"uploaded\" ? (\r\n-                <div className=\"upload-success\">‚úî</div>\r\n+        ) : (\r\n+          <>\r\n+            <div\r\n+              className=\"profile-upload\"\r\n+              onClick={() => profileInputRef.current?.click()}\r\n+              title=\"Click to upload profile image\"\r\n+            >\r\n+              {userData.profileImage ? (\r\n+                <img\r\n+                  src={`http://localhost:5000${userData.profileImage}`}\r\n+                  alt=\"Profile\"\r\n+                  className=\"profile-image\"\r\n+                />\r\n               ) : (\r\n-                <svg\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"#000000\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-                  <path\r\n-                    fill=\"#e8e8e8\"\r\n-                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                    9.11 4 6.6 5.64 5.35 8.04 \r\n-                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-                  />\r\n-                </svg>\r\n+                <div className=\"profile-upload-placeholder\">\r\n+                  <span>+ Upload Profile Image</span>\r\n+                </div>\r\n               )}\r\n             </div>\r\n-            <div className=\"text\">\r\n-              <span>Political Declaration</span>\r\n-            </div>\r\n-          </div>\r\n \r\n-          <div\r\n-            className={`custum-file-upload ${\r\n-              uploadStatus.witnessTestimonies === \"uploaded\" ? \"uploaded\" : \"\"\r\n-            }`}\r\n-            onClick={() => handleFileUpload(\"witnessTestimonies\")}\r\n-          >\r\n-            <div className=\"icon\">\r\n-              {uploadStatus.witnessTestimonies === \"uploading\" ? (\r\n-                <div className=\"loading-spinner\" />\r\n-              ) : uploadStatus.witnessTestimonies === \"uploaded\" ? (\r\n-                <div className=\"upload-success\">‚úî</div>\r\n+            <div className=\"editable-field\">\r\n+              <label>Name:</label>\r\n+              {editingName ? (\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={tempName}\r\n+                  onChange={(e) => setTempName(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n               ) : (\r\n-                <svg\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"#000000\"\r\n-                  viewBox=\"0 0 24 24\"\r\n+                <span>{tempName}</span>\r\n+              )}\r\n+              {!editingName && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  onClick={() => setEditingName(true)}\r\n                 >\r\n-                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-                  <path\r\n-                    fill=\"#e8e8e8\"\r\n-                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                    9.11 4 6.6 5.64 5.35 8.04 \r\n-                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-                  />\r\n-                </svg>\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n               )}\r\n             </div>\r\n-            <div className=\"text\">\r\n-              <span>Witness Testimonies</span>\r\n-            </div>\r\n-          </div>\r\n \r\n-          <div\r\n-            className={`custum-file-upload ${\r\n-              uploadStatus.idDocument === \"uploaded\" ? \"uploaded\" : \"\"\r\n-            }`}\r\n-            onClick={() => handleFileUpload(\"idDocument\")}\r\n-          >\r\n-            <div className=\"icon\">\r\n-              {uploadStatus.idDocument === \"uploading\" ? (\r\n-                <div className=\"loading-spinner\" />\r\n-              ) : uploadStatus.idDocument === \"uploaded\" ? (\r\n-                <div className=\"upload-success\">‚úî</div>\r\n+            <div className=\"editable-field\">\r\n+              <label>Email:</label>\r\n+              {editingEmail ? (\r\n\\ No newline at end of file\n+                <input\r\n+                  type=\"email\"\r\n+                  value={tempEmail}\r\n+                  onChange={(e) => setTempEmail(e.target.value)}\r\n+                  autoFocus\r\n+                />\r\n               ) : (\r\n-                <svg\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"#000000\"\r\n-                  viewBox=\"0 0 24 24\"\r\n+                <span>{tempEmail}</span>\r\n+              )}\r\n+              {!editingEmail && (\r\n+                <button\r\n+                  className=\"edit-btn\"\r\n+                  onClick={() => setEditingEmail(true)}\r\n                 >\r\n-                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-                  <path\r\n-                    fill=\"#e8e8e8\"\r\n-                    d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                    9.11 4 6.6 5.64 5.35 8.04 \r\n-                    2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                    2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                    5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                    12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-                  />\r\n-                </svg>\r\n+                  ‚úèÔ∏è\r\n+                </button>\r\n               )}\r\n             </div>\r\n-            <div className=\"text\">\r\n-              <span>ID Document</span>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n \r\n-        {/* Certificate Section */}\r\n-        <div className=\"certificate-preview\">\r\n-          <div className=\"certificate-thumbnail\">\r\n-            <div className=\"certificate-thumbnail-content\">\r\n-              <h4>Certificate of Completion</h4>\r\n-              <p>View your completed certificate</p>\r\n+            {(editingName || editingEmail) && (\r\n+              <div className=\"save-section\">\r\n+                <button\r\n+                  className=\"save-btn\"\r\n+                  onClick={saveUserData}\r\n+                  disabled={isUpdatingProfile}\r\n+                >\r\n+                  {isUpdatingProfile ? (\r\n+                    <div className=\"loading-spinner-small\"></div>\r\n+                  ) : (\r\n+                    \"Save Changes\"\r\n+                  )}\r\n+                </button>\r\n+                <button\r\n+                  className=\"cancel-btn\"\r\n+                  onClick={() => {\r\n+                    setEditingName(false);\r\n+                    setEditingEmail(false);\r\n+                    setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n+                    setTempEmail(userData.email);\r\n+                  }}\r\n+                >\r\n+                  Cancel\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"document-uploads\">\r\n+              <h3>Document Uploads</h3>\r\n+              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n+                <div key={label} className=\"upload-item\">\r\n+                  <FileUpload\r\n+                    label={label}\r\n+                    documentType={\r\n+                      label === \"528\"\r\n+                        ? \"politicalDeclaration\"\r\n+                        : label === \"928\"\r\n+                        ? \"witnessTestimonies\"\r\n+                        : \"idDocument\"\r\n+                    }\r\n+                    onFileUploaded={handleFileUploaded}\r\n+                    onDelete={handleFileDeleted}\r\n+                    isUploaded={\r\n+                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n+                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n+                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n+                    }\r\n+                  />\r\n+                </div>\r\n+              ))}\r\n             </div>\r\n-          </div>\r\n-          <button\r\n-            className=\"view-certificate-btn\"\r\n-            onClick={() => setShowCertificate(true)}\r\n-          >\r\n-            View Certificate\r\n-          </button>\r\n-        </div>\r\n \r\n-        {/* Logout Button */}\r\n-        <button className=\"logout-btn\" onClick={handleLogout}>\r\n-          Logout\r\n-        </button>\r\n-      </div>\r\n+            {hasCompletedAllDocuments && (\r\n+              <div className=\"certificate-section\">\r\n+                <button \r\n+                  className=\"view-certificate-btn\"\r\n+                  onClick={() => setShowCertificate(true)}\r\n+                >\r\n+                  View My Certificate\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n \r\n-      {/* Main Content */}\r\n-      <div className=\"main-content\">\r\n-        <h1>Welcome, {userData.name}</h1>\r\n-        \r\n-        {/* Upload Button with Dropdown */}\r\n-        <div className=\"upload-container\">\r\n-          <button\r\n-            className=\"upload-btn\"\r\n-            onClick={() => setDropdownOpen(!dropdownOpen)}\r\n-          >\r\n-            Upload Documents\r\n-          </button>\r\n-          \r\n-          {dropdownOpen && (\r\n-            <div className=\"dropdown-menu\">\r\n-              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"politicalDeclaration\")}>\r\n-                Political Declaration\r\n-                {uploadStatus.politicalDeclaration === \"uploaded\" && (\r\n-                  <span className=\"tick\">‚úì</span>\r\n-                )}\r\n-              </div>\r\n-              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"witnessTestimonies\")}>\r\n-                Witness Testimonies\r\n-                {uploadStatus.witnessTestimonies === \"uploaded\" && (\r\n-                  <span className=\"tick\">‚úì</span>\r\n-                )}\r\n-              </div>\r\n-              <div className=\"dropdown-item\" onClick={() => handleFileUpload(\"idDocument\")}>\r\n-                ID Document\r\n-                {uploadStatus.idDocument === \"uploaded\" && (\r\n-                  <span className=\"tick\">‚úì</span>\r\n-                )}\r\n-              </div>\r\n+            <div className=\"logout-section\">\r\n+              <button className=\"logout-btn\" onClick={handleLogout}>\r\n+                Logout\r\n+              </button>\r\n             </div>\r\n-          )}\r\n-        </div>\r\n+          </>\r\n+        )}\r\n       </div>\r\n \r\n-      {/* Certificate Modal */}\r\n-      {showCertificate && (\r\n-        <div className=\"certificate-overlay\">\r\n-          <div className=\"certificate-container\">\r\n-            <button\r\n-              className=\"close-certificate\"\r\n-              onClick={() => setShowCertificate(false)}\r\n-            >\r\n-              &times;\r\n-            </button>\r\n-            \r\n-            <div className=\"certificate-header\">\r\n-              <h2>Certificate of Completion</h2>\r\n-              <div className=\"certificate-seal\">‚úß</div>\r\n+      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n+        <div className=\"main-content\">\r\n+          {loadingUserData ? (\r\n+            <div className=\"loading-container\">\r\n+              <div className=\"loading-spinner\"></div>\r\n+              <p>Loading your data...</p>\r\n             </div>\r\n-            \r\n-            <div className=\"certificate-body\">\r\n-              <p className=\"certificate-issued\">This certifies that</p>\r\n-              <h3 className=\"certificate-name\">\r\n-                {userData.name}\r\n-              </h3>\r\n-              <p className=\"certificate-text\">\r\n-                Has successfully completed all required documentation\r\n-                for the sovereign process.\r\n-              </p>\r\n-              \r\n-              <div className=\"certificate-details\">\r\n-                <div className=\"certificate-detail\">\r\n-                  <span className=\"detail-label\">Date Issued</span>\r\n-                  <span>{new Date().toLocaleDateString()}</span>\r\n+          ) : (\r\n+            <>\r\n+              <h2>\r\n+                Welcome, {userData.fullNames} {userData.familyName}\r\n+              </h2>\r\n+\r\n+              <button\r\n+                className=\"public-view-btn\"\r\n+                onClick={() => setShowPublicView(!showPublicView)}\r\n+              >\r\n+                {showPublicView ? \"Hide Public View\" : \"Show Public View\"}\r\n+              </button>\r\n+\r\n+              {showPublicView ? (\r\n+                <div className=\"public-view-container\">\r\n+                  <h3>Users with Completed Documents</h3>\r\n+                  {loadingPublicView ? (\r\n+                    <div className=\"loading-container\">\r\n+                      <div className=\"loading-spinner\"></div>\r\n+                      <p>Loading public records...</p>\r\n+                    </div>\r\n+                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n+                    <p>No users have completed all documents yet</p>\r\n+                  ) : (\r\n+                    <div className=\"completed-users-list\">\r\n+                      {Array.isArray(publicViewUsers) &&\r\n+                        publicViewUsers.map((user) => (\r\n+                          <div\r\n+                            key={user._id}\r\n+                            className=\"completed-user\"\r\n+                            onClick={() => setSelectedUser(user)}\r\n+                          >\r\n+                            <div className=\"user-info\">\r\n+                              {user.profileImage && (\r\n+                                <img\r\n+                                  src={`http://localhost:5000${user.profileImage}`}\r\n+                                  alt=\"Profile\"\r\n+                                  className=\"user-avatar\"\r\n+                                />\r\n+                              )}\r\n+                              <span>\r\n+                                {user.fullNames} {user.familyName}\r\n+                              </span>\r\n+                            </div>\r\n+                            <span className=\"completed-badge\">\r\n+                              View Certificate\r\n+                            </span>\r\n+                          </div>\r\n+                        ))}\r\n+                    </div>\r\n+                  )}\r\n                 </div>\r\n-                <div className=\"certificate-detail\">\r\n-                  <span className=\"detail-label\">Document Number</span>\r\n-                  <span>#{Math.floor(Math.random() * 1000000)}</span>\r\n+              ) : (\r\n+                <div className=\"dashboard-info\">\r\n+                  <div className=\"completion-status\">\r\n+                    <h4>Your Document Completion:</h4>\r\n+                    <div className=\"progress-bar\">\r\n+                      <div\r\n+                        className=\"progress-fill\"\r\n+                        style={{\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n+                        }}\r\n+                      ></div>\r\n+                    </div>\r\n+                    <p>\r\n+                      {hasCompletedAllDocuments ? (\r\n+                        <span className=\"completed-text\">\r\n+                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                        </span>\r\n+                      ) : (\r\n+                        `${uploadedLabels.length} of 3 documents uploaded`\r\n+                      )}\r\n+                    </p>\r\n+                  </div>\r\n                 </div>\r\n-              </div>\r\n-              \r\n-              <div className=\"certificate-signatures\">\r\n-                <div className=\"signature-line\"></div>\r\n-                <p>Authorized Signature</p>\r\n-              </div>\r\n-            </div>\r\n-            \r\n-            <div className=\"certificate-footer\">\r\n-              <p>This certificate is digitally signed and verifiable</p>\r\n-            </div>\r\n-          </div>\r\n+              )}\r\n+            </>\r\n+          )}\r\n         </div>\r\n+      </div>\r\n+\r\n+      {selectedUser && (\r\n+        <SatisfactionCertificate\r\n+          user={selectedUser}\r\n+          onClose={() => setSelectedUser(null)}\r\n+        />\r\n       )}\r\n-    </div>\r\n+\r\n+      {showCertificate && (\r\n+        <SatisfactionCertificate\r\n+          user={userData}\r\n+          onClose={() => setShowCertificate(false)}\r\n+        />\r\n+      )}\r\n+    </>\r\n   );\r\n-}\r\n-\r\n-export default Home;\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753701785833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,21 +11,25 @@\n     const files = Array.from(e.target.files);\r\n     if (files.length === 0) return;\r\n \r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 50 * 1024 * 1024) {\r\n-      alert(\"Total folder size too large (max 50MB)\");\r\n+    if (totalSize > 1024 * 1024 * 1024) { // 1GB max\r\n+      alert(\"Total folder size too large (max 1GB)\");\r\n       return;\r\n     }\r\n \r\n     handleUpload(files);\r\n   };\r\n \r\n   const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-    files.forEach((file) => formData.append(\"files\", file));\r\n-    formData.append(\"label\", label);\r\n+    files.forEach((file) => {\r\n+      // Preserve folder structure by using relativePath\r\n+      const relativePath = file.webkitRelativePath || file.name;\r\n+      formData.append(\"files\", file, relativePath);\r\n+    });\r\n     formData.append(\"documentType\", documentType);\r\n+    formData.append(\"folderName\", label); // Use label as folder name\r\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n@@ -35,28 +39,28 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n-      alert(`‚úÖ ${files.length} files uploaded for ${label}`);\r\n+      alert(`‚úÖ Folder \"${label}\" uploaded successfully`);\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to upload files.\");\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to upload folder.\");\r\n     } finally {\r\n       setIsUploading(false);\r\n       if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n     }\r\n   };\r\n \r\n   const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n+    if (!window.confirm(`Are you sure you want to delete the \"${label}\" folder?`)) return;\r\n \r\n     try {\r\n       setIsDeleting(true);\r\n       const token = localStorage.getItem(\"token\");\r\n       await axios.post(\r\n         \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType },\r\n+        { documentType: \"folderUpload\", folderName: label },\r\n         {\r\n           headers: {\r\n             Authorization: `Bearer ${token}`,\r\n           },\r\n@@ -64,9 +68,9 @@\n       );\r\n       if (onDelete) onDelete(label);\r\n     } catch (error) {\r\n       console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete folder.\");\r\n     } finally {\r\n       setIsDeleting(false);\r\n     }\r\n   };\r\n@@ -110,12 +114,11 @@\n           type=\"file\"\r\n           ref={fileInputRef}\r\n           onChange={handleFolderUpload}\r\n           disabled={isUploading || isUploaded}\r\n-          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n-          multiple\r\n           webkitdirectory=\"true\"\r\n           directory=\"true\"\r\n+          multiple\r\n         />\r\n       </label>\r\n       <button\r\n         className=\"delete-btn\"\r\n@@ -169,17 +172,8 @@\n                         ID Document:{\" \"}\r\n                         {user.documentRequirements.idDocument || \"Not specified\"}\r\n                       </li>\r\n                     )}\r\n-                    {user.documentRequirements.photoWithWhiteBg && (\r\n-                      <li>Photo with White Background</li>\r\n-                    )}\r\n-                    {user.documentRequirements.redThumbprint && (\r\n-                      <li>Thumbprint (red ink)</li>\r\n-                    )}\r\n-                    {user.documentRequirements.utilityBill && (\r\n-                      <li>Utility Bill</li>\r\n-                    )}\r\n                   </ul>\r\n                 </div>\r\n               )}\r\n               {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n@@ -187,20 +181,24 @@\n                   <h4>\r\n                     928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n                   </h4>\r\n                   <ul>\r\n-                    <li>Act of Expatriation</li>\r\n-                    <li>Certificate of Assumed Name</li>\r\n-                    <li>Notice of Transfer of Reserved Name</li>\r\n-                    <li>Cancellation of All Prior Powers of Attorney</li>\r\n-                    <li>Paramount Claim of Life</li>\r\n-                    <li>Mandatory Notice</li>\r\n-                    <li>Common Carry Declaration Weapon</li>\r\n-                    <li>Solemn Record and Proclamation of Lawful Marriage</li>\r\n-                    <li>Baby Deed Affidavit Testimony</li>\r\n+                    {user.documentRequirements.witnessTestimonies.map((testimony, index) => (\r\n+                      <li key={index}>Witness Testimony {index + 1}</li>\r\n+                    ))}\r\n                   </ul>\r\n                 </div>\r\n               )}\r\n+              {user.documentRequirements?.folderUpload && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>Uploaded Folder:</h4>\r\n+                  <ul>\r\n+                    <li>Folder: {user.documentRequirements.folderUpload.folderName}</li>\r\n+                    <li>Files: {user.documentRequirements.folderUpload.files.length}</li>\r\n+                    <li>Uploaded: {new Date(user.documentRequirements.folderUpload.uploadedAt).toLocaleDateString()}</li>\r\n+                  </ul>\r\n+                </div>\r\n+              )}\r\n             </div>\r\n           )}\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n@@ -229,11 +227,9 @@\n   const [editingEmail, setEditingEmail] = useState(false);\r\n   const [tempName, setTempName] = useState(\"\");\r\n   const [tempEmail, setTempEmail] = useState(\"\");\r\n   const [publicViewUsers, setPublicViewUsers] = useState([]);\r\n-  const [showPublicView, setShowPublicView] = useState(\r\n-    localStorage.getItem(\"showPublicView\") === \"true\"\r\n-  );\r\n+  const [showPublicView, setShowPublicView] = useState(false);\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n   const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n@@ -255,13 +251,13 @@\n         },\r\n       });\r\n \r\n       const userData = {\r\n-        fullNames: response.data.user.fullNames || \"Unknown\",\r\n-        familyName: response.data.user.familyName || \"\",\r\n-        email: response.data.user.email || \"No email\",\r\n-        profileImage: response.data.user.profileImage || null,\r\n-        documentRequirements: response.data.user.documentRequirements || {},\r\n+        fullNames: response.data.name || response.data.fullNames || \"Unknown\",\r\n+        familyName: response.data.familyName || \"\",\r\n+        email: response.data.email || \"No email\",\r\n+        profileImage: response.data.profileImage || response.data.profilePic || null,\r\n+        documentRequirements: response.data.documentRequirements || {},\r\n       };\r\n \r\n       setUserData(userData);\r\n       setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n@@ -273,25 +269,16 @@\n           uploaded.push(\"528\");\r\n         if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n           uploaded.push(\"928\");\r\n         if (userData.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"Praecipe\");\r\n+          uploaded.push(\"ID Document\");\r\n+        if (userData.documentRequirements.folderUpload)\r\n+          uploaded.push(\"Folder Upload\");\r\n       }\r\n       setUploadedLabels(uploaded);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames: userData.fullNames,\r\n-          familyName: userData.familyName,\r\n-          email: userData.email,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n       localStorage.removeItem(\"token\");\r\n-      localStorage.removeItem(\"userData\");\r\n       window.location.href = \"/login\";\r\n     } finally {\r\n       setLoadingUserData(false);\r\n     }\r\n@@ -308,9 +295,9 @@\n             Authorization: `Bearer ${token}`,\r\n           },\r\n         }\r\n       );\r\n-      setPublicViewUsers(response.data);\r\n+      setPublicViewUsers(response.data.users || []);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch public view users:\", error);\r\n     } finally {\r\n       setLoadingPublicView(false);\r\n@@ -349,21 +336,12 @@\n       );\r\n \r\n       const updatedUser = {\r\n         ...userData,\r\n-        profileImage: response.data.filePath,\r\n+        profileImage: response.data.profilePic || response.data.filePath,\r\n       };\r\n \r\n       setUserData(updatedUser);\r\n-\r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          ...JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\r\n-          profileImage: response.data.filePath,\r\n-        })\r\n-      );\r\n-\r\n       alert(\"Profile image updated successfully!\");\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n@@ -412,18 +390,8 @@\n       setUserData(updatedUserData);\r\n       setTempName(`${fullNames} ${familyName}`);\r\n       setTempEmail(tempEmail);\r\n \r\n-      localStorage.setItem(\r\n-        \"userData\",\r\n-        JSON.stringify({\r\n-          fullNames,\r\n-          familyName,\r\n-          email: tempEmail,\r\n-          profileImage: userData.profileImage,\r\n-        })\r\n-      );\r\n-\r\n       setEditingName(false);\r\n       setEditingEmail(false);\r\n       alert(\"Profile updated successfully!\");\r\n     } catch (error) {\r\n@@ -435,9 +403,8 @@\n   };\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"token\");\r\n-    localStorage.removeItem(\"showPublicView\");\r\n     window.location.href = \"/login\";\r\n   };\r\n \r\n   const handleFileUploaded = (label) => {\r\n@@ -591,29 +558,36 @@\n             )}\r\n \r\n             <div className=\"document-uploads\">\r\n               <h3>Document Uploads</h3>\r\n-              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n-                <div key={label} className=\"upload-item\">\r\n-                  <FileUpload\r\n-                    label={label}\r\n-                    documentType={\r\n-                      label === \"528\"\r\n-                        ? \"politicalDeclaration\"\r\n-                        : label === \"928\"\r\n-                        ? \"witnessTestimonies\"\r\n-                        : \"idDocument\"\r\n-                    }\r\n-                    onFileUploaded={handleFileUploaded}\r\n-                    onDelete={handleFileDeleted}\r\n-                    isUploaded={\r\n-                      (label === \"528\" && userData.documentRequirements?.politicalDeclaration) ||\r\n-                      (label === \"928\" && userData.documentRequirements?.witnessTestimonies?.length > 0) ||\r\n-                      (label === \"Praecipe\" && userData.documentRequirements?.idDocumentFile)\r\n-                    }\r\n-                  />\r\n-                </div>\r\n-              ))}\r\n+              <FileUpload\r\n+                label=\"528 - Political Declaration\"\r\n+                documentType=\"politicalDeclaration\"\r\n+                onFileUploaded={handleFileUploaded}\r\n+                onDelete={handleFileDeleted}\r\n+                isUploaded={!!userData.documentRequirements?.politicalDeclaration}\r\n+              />\r\n+              <FileUpload\r\n+                label=\"928 - Witness Testimonies\"\r\n+                documentType=\"witnessTestimonies\"\r\n+                onFileUploaded={handleFileUploaded}\r\n+                onDelete={handleFileDeleted}\r\n+                isUploaded={userData.documentRequirements?.witnessTestimonies?.length > 0}\r\n+              />\r\n+              <FileUpload\r\n+                label=\"ID Document\"\r\n+                documentType=\"idDocument\"\r\n+                onFileUploaded={handleFileUploaded}\r\n+                onDelete={handleFileDeleted}\r\n+                isUploaded={!!userData.documentRequirements?.idDocumentFile}\r\n+              />\r\n+              <FileUpload\r\n+                label=\"Folder Upload\"\r\n+                documentType=\"folderUpload\"\r\n+                onFileUploaded={handleFileUploaded}\r\n+                onDelete={handleFileDeleted}\r\n+                isUploaded={!!userData.documentRequirements?.folderUpload}\r\n+              />\r\n             </div>\r\n \r\n             {hasCompletedAllDocuments && (\r\n               <div className=\"certificate-section\">\r\n@@ -662,36 +636,35 @@\n                     <div className=\"loading-container\">\r\n                       <div className=\"loading-spinner\"></div>\r\n                       <p>Loading public records...</p>\r\n                     </div>\r\n-                  ) : !publicViewUsers || publicViewUsers.length === 0 ? (\r\n+                  ) : publicViewUsers.length === 0 ? (\r\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n                     <div className=\"completed-users-list\">\r\n-                      {Array.isArray(publicViewUsers) &&\r\n-                        publicViewUsers.map((user) => (\r\n-                          <div\r\n-                            key={user._id}\r\n-                            className=\"completed-user\"\r\n-                            onClick={() => setSelectedUser(user)}\r\n-                          >\r\n-                            <div className=\"user-info\">\r\n-                              {user.profileImage && (\r\n-                                <img\r\n-                                  src={`http://localhost:5000${user.profileImage}`}\r\n-                                  alt=\"Profile\"\r\n-                                  className=\"user-avatar\"\r\n-                                />\r\n-                              )}\r\n-                              <span>\r\n-                                {user.fullNames} {user.familyName}\r\n-                              </span>\r\n-                            </div>\r\n-                            <span className=\"completed-badge\">\r\n-                              View Certificate\r\n+                      {publicViewUsers.map((user) => (\r\n+                        <div\r\n+                          key={user._id}\r\n+                          className=\"completed-user\"\r\n+                          onClick={() => setSelectedUser(user)}\r\n+                        >\r\n+                          <div className=\"user-info\">\r\n+                            {user.profileImage && (\r\n+                              <img\r\n+                                src={`http://localhost:5000${user.profileImage}`}\r\n+                                alt=\"Profile\"\r\n+                                className=\"user-avatar\"\r\n+                              />\r\n+                            )}\r\n+                            <span>\r\n+                              {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n-                        ))}\r\n+                          <span className=\"completed-badge\">\r\n+                            View Certificate\r\n+                          </span>\r\n+                        </div>\r\n+                      ))}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n               ) : (\r\n@@ -701,9 +674,9 @@\n                     <div className=\"progress-bar\">\r\n                       <div\r\n                         className=\"progress-fill\"\r\n                         style={{\r\n-                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n+                          width: `${(uploadedLabels.length / 4) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>\r\n@@ -711,9 +684,9 @@\n                         <span className=\"completed-text\">\r\n                           ‚úÖ All documents completed! You can now view your certificate.\r\n                         </span>\r\n                       ) : (\r\n-                        `${uploadedLabels.length} of 3 documents uploaded`\r\n+                        `${uploadedLabels.length} of 4 documents uploaded`\r\n                       )}\r\n                     </p>\r\n                   </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1753702638449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,14 @@\n   const fileInputRef = useRef(null);\r\n \r\n   const handleFolderUpload = (e) => {\r\n     const files = Array.from(e.target.files);\r\n-    if (files.length === 0) return;\r\n+    \r\n+    // Handle empty folder case\r\n+    if (files.length === 0) {\r\n+      handleUpload([]);\r\n+      return;\r\n+    }\r\n \r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n     if (totalSize > 1024 * 1024 * 1024) { // 1GB max\r\n       alert(\"Total folder size too large (max 1GB)\");\r\n@@ -21,15 +26,22 @@\n   };\r\n \r\n   const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-    files.forEach((file) => {\r\n-      // Preserve folder structure by using relativePath\r\n-      const relativePath = file.webkitRelativePath || file.name;\r\n-      formData.append(\"files\", file, relativePath);\r\n-    });\r\n+    \r\n+    // Handle empty folder case\r\n+    if (files.length === 0) {\r\n+      formData.append(\"emptyFolder\", \"true\");\r\n+      formData.append(\"folderName\", label);\r\n+    } else {\r\n+      files.forEach((file) => {\r\n+        const relativePath = file.webkitRelativePath || file.name;\r\n+        formData.append(\"files\", file, relativePath);\r\n+      });\r\n+    }\r\n+    \r\n     formData.append(\"documentType\", documentType);\r\n-    formData.append(\"folderName\", label); // Use label as folder name\r\n+    formData.append(\"folderName\", label);\r\n \r\n     try {\r\n       setIsUploading(true);\r\n       const token = localStorage.getItem(\"token\");\r\n@@ -39,9 +51,9 @@\n           Authorization: `Bearer ${token}`,\r\n         },\r\n       });\r\n \r\n-      alert(`‚úÖ Folder \"${label}\" uploaded successfully`);\r\n+      alert(`‚úÖ ${label} uploaded successfully`);\r\n       if (onFileUploaded) onFileUploaded(label);\r\n     } catch (error) {\r\n       console.error(\"Upload error:\", error);\r\n       alert(error.response?.data?.message || \"‚ùå Failed to upload folder.\");\r\n@@ -51,16 +63,16 @@\n     }\r\n   };\r\n \r\n   const handleDeleteClick = async () => {\r\n-    if (!window.confirm(`Are you sure you want to delete the \"${label}\" folder?`)) return;\r\n+    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n \r\n     try {\r\n       setIsDeleting(true);\r\n       const token = localStorage.getItem(\"token\");\r\n       await axios.post(\r\n         \"http://localhost:5000/api/home/delete-document\",\r\n-        { documentType: \"folderUpload\", folderName: label },\r\n+        { documentType },\r\n         {\r\n           headers: {\r\n             Authorization: `Bearer ${token}`,\r\n           },\r\n@@ -68,18 +80,18 @@\n       );\r\n       if (onDelete) onDelete(label);\r\n     } catch (error) {\r\n       console.error(\"Delete error:\", error);\r\n-      alert(error.response?.data?.message || \"‚ùå Failed to delete folder.\");\r\n+      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n     } finally {\r\n       setIsDeleting(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"file-upload-container\">\r\n       <label\r\n-        className=\"custum-file-upload\"\r\n+        className={`custum-file-upload ${isUploaded ? \"uploaded\" : \"\"}`}\r\n         style={{ opacity: isUploading ? 0.7 : 1 }}\r\n       >\r\n         <div className=\"icon\">\r\n           {isUploading ? (\r\n@@ -136,13 +148,8 @@\n   );\r\n }\r\n \r\n function SatisfactionCertificate({ user, onClose }) {\r\n-  const hasCompletedDocuments = \r\n-    user.documentRequirements?.politicalDeclaration && \r\n-    user.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n-    user.documentRequirements?.idDocumentFile;\r\n-\r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n@@ -158,49 +165,29 @@\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-          {hasCompletedDocuments && (\r\n-            <div className=\"completed-documents-section\">\r\n-              <h3>Completed Documents:</h3>\r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                  <ul>\r\n-                    <li>Political Declaration Document</li>\r\n-                    {user.documentRequirements.idDocumentFile && (\r\n-                      <li>\r\n-                        ID Document:{\" \"}\r\n-                        {user.documentRequirements.idDocument || \"Not specified\"}\r\n-                      </li>\r\n-                    )}\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>\r\n-                    928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:\r\n-                  </h4>\r\n-                  <ul>\r\n-                    {user.documentRequirements.witnessTestimonies.map((testimony, index) => (\r\n-                      <li key={index}>Witness Testimony {index + 1}</li>\r\n-                    ))}\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-              {user.documentRequirements?.folderUpload && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>Uploaded Folder:</h4>\r\n-                  <ul>\r\n-                    <li>Folder: {user.documentRequirements.folderUpload.folderName}</li>\r\n-                    <li>Files: {user.documentRequirements.folderUpload.files.length}</li>\r\n-                    <li>Uploaded: {new Date(user.documentRequirements.folderUpload.uploadedAt).toLocaleDateString()}</li>\r\n-                  </ul>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n+          <div className=\"completed-documents-section\">\r\n+            <h3>Completed Documents:</h3>\r\n+            {user.documentRequirements?.politicalDeclaration && (\r\n+              <div className=\"document-group\">\r\n+                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                <p>Document uploaded</p>\r\n+              </div>\r\n+            )}\r\n+            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+              <div className=\"document-group\">\r\n+                <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n+                <p>{user.documentRequirements.witnessTestimonies.length} testimonies uploaded</p>\r\n+              </div>\r\n+            )}\r\n+            {user.documentRequirements?.idDocumentFile && (\r\n+              <div className=\"document-group\">\r\n+                <h4>Praecipe - ID Document:</h4>\r\n+                <p>Document uploaded</p>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n             <p>\r\n               {user.fullNames} {user.familyName}\r\n@@ -251,9 +238,9 @@\n         },\r\n       });\r\n \r\n       const userData = {\r\n-        fullNames: response.data.name || response.data.fullNames || \"Unknown\",\r\n+        fullNames: response.data.fullNames || response.data.name || \"Unknown\",\r\n         familyName: response.data.familyName || \"\",\r\n         email: response.data.email || \"No email\",\r\n         profileImage: response.data.profileImage || response.data.profilePic || null,\r\n         documentRequirements: response.data.documentRequirements || {},\r\n@@ -262,19 +249,14 @@\n       setUserData(userData);\r\n       setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n       setTempEmail(userData.email);\r\n \r\n+      // Update uploaded labels based on document requirements\r\n       const uploaded = [];\r\n-      if (userData.documentRequirements) {\r\n-        if (userData.documentRequirements.politicalDeclaration)\r\n-          uploaded.push(\"528\");\r\n-        if (userData.documentRequirements.witnessTestimonies?.length > 0)\r\n-          uploaded.push(\"928\");\r\n-        if (userData.documentRequirements.idDocumentFile)\r\n-          uploaded.push(\"ID Document\");\r\n-        if (userData.documentRequirements.folderUpload)\r\n-          uploaded.push(\"Folder Upload\");\r\n-      }\r\n+      if (userData.documentRequirements?.politicalDeclaration) uploaded.push(\"528\");\r\n+      if (userData.documentRequirements?.witnessTestimonies?.length > 0) uploaded.push(\"928\");\r\n+      if (userData.documentRequirements?.idDocumentFile) uploaded.push(\"Praecipe\");\r\n+      \r\n       setUploadedLabels(uploaded);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n       localStorage.removeItem(\"token\");\r\n@@ -559,35 +541,28 @@\n \r\n             <div className=\"document-uploads\">\r\n               <h3>Document Uploads</h3>\r\n               <FileUpload\r\n-                label=\"528 - Political Declaration\"\r\n+                label=\"528\"\r\n                 documentType=\"politicalDeclaration\"\r\n                 onFileUploaded={handleFileUploaded}\r\n                 onDelete={handleFileDeleted}\r\n                 isUploaded={!!userData.documentRequirements?.politicalDeclaration}\r\n               />\r\n               <FileUpload\r\n-                label=\"928 - Witness Testimonies\"\r\n+                label=\"928\"\r\n                 documentType=\"witnessTestimonies\"\r\n                 onFileUploaded={handleFileUploaded}\r\n                 onDelete={handleFileDeleted}\r\n                 isUploaded={userData.documentRequirements?.witnessTestimonies?.length > 0}\r\n               />\r\n               <FileUpload\r\n-                label=\"ID Document\"\r\n+                label=\"Praecipe\"\r\n                 documentType=\"idDocument\"\r\n                 onFileUploaded={handleFileUploaded}\r\n                 onDelete={handleFileDeleted}\r\n                 isUploaded={!!userData.documentRequirements?.idDocumentFile}\r\n               />\r\n-              <FileUpload\r\n-                label=\"Folder Upload\"\r\n-                documentType=\"folderUpload\"\r\n-                onFileUploaded={handleFileUploaded}\r\n-                onDelete={handleFileDeleted}\r\n-                isUploaded={!!userData.documentRequirements?.folderUpload}\r\n-              />\r\n             </div>\r\n \r\n             {hasCompletedAllDocuments && (\r\n               <div className=\"certificate-section\">\r\n@@ -674,9 +649,9 @@\n                     <div className=\"progress-bar\">\r\n                       <div\r\n                         className=\"progress-fill\"\r\n                         style={{\r\n-                          width: `${(uploadedLabels.length / 4) * 100}%`,\r\n+                          width: `${(uploadedLabels.length / 3) * 100}%`,\r\n                         }}\r\n                       ></div>\r\n                     </div>\r\n                     <p>\r\n@@ -684,9 +659,9 @@\n                         <span className=\"completed-text\">\r\n                           ‚úÖ All documents completed! You can now view your certificate.\r\n                         </span>\r\n                       ) : (\r\n-                        `${uploadedLabels.length} of 4 documents uploaded`\r\n+                        `${uploadedLabels.length} of 3 documents uploaded`\r\n                       )}\r\n                     </p>\r\n                   </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1753703272755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,37 +92,16 @@\n       <label\r\n         className={`custum-file-upload ${isUploaded ? \"uploaded\" : \"\"}`}\r\n         style={{ opacity: isUploading ? 0.7 : 1 }}\r\n       >\r\n-        <div className=\"icon\">\r\n+        <div className=\"text\">\r\n+          <span>{label}</span>\r\n           {isUploading ? (\r\n             <div className=\"loading-spinner-small\"></div>\r\n           ) : isUploaded ? (\r\n-            <div className=\"upload-success\">‚úî</div>\r\n-          ) : (\r\n-            <svg\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              fill=\"#000000\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              width=\"48px\"\r\n-              height=\"48px\"\r\n-            >\r\n-              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n-              <path\r\n-                fill=\"#e8e8e8\"\r\n-                d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n-                9.11 4 6.6 5.64 5.35 8.04 \r\n-                2.34 8.36 0 10.91 0 14c0 3.31 \r\n-                2.69 6 6 6h13c2.76 0 5-2.24 \r\n-                5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n-                12h-2v4H8l4 4 4-4h-3v-4z\"\r\n-              />\r\n-            </svg>\r\n-          )}\r\n+            <span className=\"upload-success\">‚úì</span>\r\n+          ) : null}\r\n         </div>\r\n-        <div className=\"text\">\r\n-          <span>{label}</span>\r\n-        </div>\r\n         <input\r\n           type=\"file\"\r\n           ref={fileInputRef}\r\n           onChange={handleFolderUpload}\r\n@@ -206,9 +185,8 @@\n   const [userData, setUserData] = useState({\r\n     fullNames: \"Loading...\",\r\n     familyName: \"\",\r\n     email: \"Loading...\",\r\n-    profileImage: null,\r\n     documentRequirements: {},\r\n   });\r\n   const [editingName, setEditingName] = useState(false);\r\n   const [editingEmail, setEditingEmail] = useState(false);\r\n@@ -220,9 +198,8 @@\n   const [loadingUserData, setLoadingUserData] = useState(true);\r\n   const [loadingPublicView, setLoadingPublicView] = useState(false);\r\n   const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\r\n   const [showCertificate, setShowCertificate] = useState(false);\r\n-  const profileInputRef = useRef(null);\r\n \r\n   const fetchUserData = async () => {\r\n     try {\r\n       setLoadingUserData(true);\r\n@@ -241,9 +218,8 @@\n       const userData = {\r\n         fullNames: response.data.fullNames || response.data.name || \"Unknown\",\r\n         familyName: response.data.familyName || \"\",\r\n         email: response.data.email || \"No email\",\r\n-        profileImage: response.data.profileImage || response.data.profilePic || null,\r\n         documentRequirements: response.data.documentRequirements || {},\r\n       };\r\n \r\n       setUserData(userData);\r\n@@ -295,42 +271,8 @@\n       fetchPublicViewUsers();\r\n     }\r\n   }, [showPublicView]);\r\n \r\n-  const handleProfileImageChange = async (e) => {\r\n-    const file = e.target.files[0];\r\n-    if (!file) return;\r\n-\r\n-    try {\r\n-      const formData = new FormData();\r\n-      formData.append(\"file\", file);\r\n-      formData.append(\"type\", \"profileImage\");\r\n-\r\n-      const token = localStorage.getItem(\"token\");\r\n-      const response = await axios.post(\r\n-        \"http://localhost:5000/api/home/upload\",\r\n-        formData,\r\n-        {\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      const updatedUser = {\r\n-        ...userData,\r\n-        profileImage: response.data.profilePic || response.data.filePath,\r\n-      };\r\n-\r\n-      setUserData(updatedUser);\r\n-      alert(\"Profile image updated successfully!\");\r\n-    } catch (error) {\r\n-      console.error(\"Upload error:\", error);\r\n-      alert(error.response?.data?.message || \"Failed to upload profile image\");\r\n-    }\r\n-  };\r\n-\r\n   const saveUserData = async () => {\r\n     if (!tempName.trim() || !tempEmail.trim()) {\r\n       alert(\"Name and email cannot be empty\");\r\n       return;\r\n@@ -411,33 +353,11 @@\n       <div\r\n         className=\"sidebar-toggle\"\r\n         onClick={() => setSidebarOpen(!sidebarOpen)}\r\n       >\r\n-        {userData.profileImage ? (\r\n-          <img\r\n-            src={`http://localhost:5000${userData.profileImage}`}\r\n-            alt=\"Profile\"\r\n-            className=\"profile-img\"\r\n-            onError={(e) => {\r\n-              e.target.onerror = null;\r\n-              e.target.src = \"/default-profile.png\";\r\n-            }}\r\n-          />\r\n-        ) : (\r\n-          <div className=\"profile-placeholder\">\r\n-            {userData.fullNames.charAt(0).toUpperCase()}\r\n-          </div>\r\n-        )}\r\n+        {userData.fullNames.charAt(0).toUpperCase()}\r\n       </div>\r\n \r\n-      <input\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        style={{ display: \"none\" }}\r\n-        ref={profileInputRef}\r\n-        onChange={handleProfileImageChange}\r\n-      />\r\n-\r\n       <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n         <button className=\"back-btn\" onClick={() => setSidebarOpen(false)}>\r\n           &larr; Back\r\n         </button>\r\n@@ -449,26 +369,8 @@\n             <p>Loading user data...</p>\r\n           </div>\r\n         ) : (\r\n           <>\r\n-            <div\r\n-              className=\"profile-upload\"\r\n-              onClick={() => profileInputRef.current?.click()}\r\n-              title=\"Click to upload profile image\"\r\n-            >\r\n-              {userData.profileImage ? (\r\n-                <img\r\n-                  src={`http://localhost:5000${userData.profileImage}`}\r\n-                  alt=\"Profile\"\r\n-                  className=\"profile-image\"\r\n-                />\r\n-              ) : (\r\n-                <div className=\"profile-upload-placeholder\">\r\n-                  <span>+ Upload Profile Image</span>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-\r\n             <div className=\"editable-field\">\r\n               <label>Name:</label>\r\n               {editingName ? (\r\n                 <input\r\n@@ -622,15 +524,8 @@\n                           className=\"completed-user\"\r\n                           onClick={() => setSelectedUser(user)}\r\n                         >\r\n                           <div className=\"user-info\">\r\n-                            {user.profileImage && (\r\n-                              <img\r\n-                                src={`http://localhost:5000${user.profileImage}`}\r\n-                                alt=\"Profile\"\r\n-                                className=\"user-avatar\"\r\n-                              />\r\n-                            )}\r\n                             <span>\r\n                               {user.fullNames} {user.familyName}\r\n                             </span>\r\n                           </div>\r\n"
                },
                {
                    "date": 1753704198085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n               </div>\r\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n               <div className=\"document-group\">\r\n-                <h4>Praecipe - ID Document:</h4>\r\n+                <h4>Praecipe-Document:</h4>\r\n                 <p>Document uploaded</p>\r\n               </div>\r\n             )}\r\n           </div>\r\n"
                },
                {
                    "date": 1753704240491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n               <div className=\"document-group\">\r\n                 <h4>Praecipe-Document:</h4>\r\n-                <p>Document uploaded</p>\r\n+                <p>Document Uploaded</p>\r\n               </div>\r\n             )}\r\n           </div>\r\n           <div className=\"signature-section\">\r\n"
                },
                {
                    "date": 1753704282488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n               </div>\r\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n               <div className=\"document-group\">\r\n-                <h4>Praecipe-Document:</h4>\r\n+                <h4>Praecipe:</h4>\r\n                 <p>Document Uploaded</p>\r\n               </div>\r\n             )}\r\n           </div>\r\n"
                },
                {
                    "date": 1753704305193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n               <div className=\"document-group\">\r\n                 <h4>Praecipe:</h4>\r\n-                <p>Document Uploaded</p>\r\n+                <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n           </div>\r\n           <div className=\"signature-section\">\r\n"
                },
                {
                    "date": 1753704561985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,10 @@\n             <h3>Completed Documents:</h3>\r\n             {user.documentRequirements?.politicalDeclaration && (\r\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <p>Document uploaded</p>\r\n+                <h3>(3)Witness Testimony</h3>\r\n+                <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n               <div className=\"document-group\">\r\n"
                },
                {
                    "date": 1753704629460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n             <h3>Completed Documents:</h3>\r\n             {user.documentRequirements?.politicalDeclaration && (\r\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <h3>(3)Witness Testimony</h3>\r\n+                <h3>(3)Witness Testimony Affirming Political Status & Identity</h3>\r\n                 <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n"
                },
                {
                    "date": 1753704656674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n             <h3>Completed Documents:</h3>\r\n             {user.documentRequirements?.politicalDeclaration && (\r\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <h3>(3)Witness Testimony Affirming Political Status & Identity</h3>\r\n+                <h5>(3)Witness Testimony Affirming Political Status & Identity</h5>\r\n                 <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n"
                },
                {
                    "date": 1753704816928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,9 @@\n             {user.documentRequirements?.politicalDeclaration && (\r\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n                 <h5>(3)Witness Testimony Affirming Political Status & Identity</h5>\r\n+                <h5> Id-Document/Drivers-License/Passport</h5>\r\n                 <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n"
                },
                {
                    "date": 1753704900755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,8 +151,10 @@\n               <div className=\"document-group\">\r\n                 <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n                 <h5>(3)Witness Testimony Affirming Political Status & Identity</h5>\r\n                 <h5> Id-Document/Drivers-License/Passport</h5>\r\n+                <h5>Photo Withe Background</h5>\r\n+                <h5>Thumb-Print Red Ink</h5>\r\n                 <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n"
                },
                {
                    "date": 1753704969859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,8 +153,9 @@\n                 <h5>(3)Witness Testimony Affirming Political Status & Identity</h5>\r\n                 <h5> Id-Document/Drivers-License/Passport</h5>\r\n                 <h5>Photo Withe Background</h5>\r\n                 <h5>Thumb-Print Red Ink</h5>\r\n+                <h5>Utility-Bill</h5>\r\n                 <p>Document's Uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n"
                },
                {
                    "date": 1753705135915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,8 +160,9 @@\n             )}\r\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n               <div className=\"document-group\">\r\n                 <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n+                <h5>Certificate of Assumed Name<h6>Notice of Transfer of Reserved Name</h6></h5>\r\n                 <p>{user.documentRequirements.witnessTestimonies.length} testimonies uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n"
                },
                {
                    "date": 1753705463943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,14 @@\n             {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n               <div className=\"document-group\">\r\n                 <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n                 <h5>Certificate of Assumed Name<h6>Notice of Transfer of Reserved Name</h6></h5>\r\n+                <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n+                <h5>Paramount Claim of Life</h5>\r\n+                <h5>Mandatory Notice-Notice of Liability</h5>\r\n+                <h5>Baby Deed</h5>\r\n+                <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n+                <h5>Affidavit Testimony</h5>\r\n                 <p>{user.documentRequirements.witnessTestimonies.length} testimonies uploaded</p>\r\n               </div>\r\n             )}\r\n             {user.documentRequirements?.idDocumentFile && (\r\n"
                },
                {
                    "date": 1753705630817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,44 +144,58 @@\n               of maturity, hereby affirm the following testimony is true. I have\r\n               completed the fullness of the sovereign walk.\r\n             </p>\r\n           </div>\r\n-          <div className=\"completed-documents-section\">\r\n-            <h3>Completed Documents:</h3>\r\n-            {user.documentRequirements?.politicalDeclaration && (\r\n-              <div className=\"document-group\">\r\n-                <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                <h5>(3)Witness Testimony Affirming Political Status & Identity</h5>\r\n-                <h5> Id-Document/Drivers-License/Passport</h5>\r\n-                <h5>Photo Withe Background</h5>\r\n-                <h5>Thumb-Print Red Ink</h5>\r\n-                <h5>Utility-Bill</h5>\r\n-                <p>Document's Uploaded</p>\r\n-              </div>\r\n-            )}\r\n-            {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-              <div className=\"document-group\">\r\n-                <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n-                <h5>Certificate of Assumed Name<h6>Notice of Transfer of Reserved Name</h6></h5>\r\n-                <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n-                <h5>Paramount Claim of Life</h5>\r\n-                <h5>Mandatory Notice-Notice of Liability</h5>\r\n-                <h5>Baby Deed</h5>\r\n-                <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n-                <h5>Affidavit Testimony</h5>\r\n-                <p>{user.documentRequirements.witnessTestimonies.length} testimonies uploaded</p>\r\n-              </div>\r\n-            )}\r\n-            {user.documentRequirements?.idDocumentFile && (\r\n-              <div className=\"document-group\">\r\n-                <h4>Praecipe:</h4>\r\n-                <p>Document's Uploaded</p>\r\n-              </div>\r\n-            )}\r\n+          <div className=\"certificate-scroll-container\">\r\n+            <div className=\"completed-documents-section\">\r\n+              <h3>Completed Documents:</h3>\r\n+              \r\n+              {user.documentRequirements?.politicalDeclaration && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                  <div className=\"document-details\">\r\n+                    <h5>Witness Testimony Affirming Political Status & Identity</h5>\r\n+                    <h5>Id-Document/Drivers-License/Passport</h5>\r\n+                    <h5>Photo With White Background</h5>\r\n+                    <h5>Thumb-Print (Red Ink)</h5>\r\n+                    <h5>Utility Bill</h5>\r\n+                    <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+\r\n+              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n+                  <div className=\"document-details\">\r\n+                    <h5>Certificate of Assumed Name</h5>\r\n+                    <h6>Notice of Transfer of Reserved Name</h6>\r\n+                    <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n+                    <h5>Paramount Claim of Life</h5>\r\n+                    <h5>Mandatory Notice - Notice of Liability</h5>\r\n+                    <h5>Baby Deed</h5>\r\n+                    <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n+                    <h5>Affidavit Testimony</h5>\r\n+                    <p className=\"upload-status\">\r\n+                      ‚úÖ {user.documentRequirements.witnessTestimonies.length} testimonies uploaded\r\n+                    </p>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+\r\n+              {user.documentRequirements?.idDocumentFile && (\r\n+                <div className=\"document-group\">\r\n+                  <h4>Praecipe:</h4>\r\n+                  <div className=\"document-details\">\r\n+                    <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n           </div>\r\n           <div className=\"signature-section\">\r\n             <div className=\"signature-line\"></div>\r\n-            <p>\r\n+            <p className=\"signature-name\">\r\n               {user.fullNames} {user.familyName}\r\n             </p>\r\n             <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n           </div>\r\n@@ -189,9 +203,8 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-\r\n export default function Home() {\r\n   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n   const [uploadedLabels, setUploadedLabels] = useState([]);\r\n   const [userData, setUserData] = useState({\r\n"
                },
                {
                    "date": 1753706677568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,85 +126,112 @@\n     </div>\r\n   );\r\n }\r\n \r\n-function SatisfactionCertificate({ user, onClose }) {\r\n+function SatisfactionCertificate({ user, onClose, isPublicView = false }) {\r\n   return (\r\n     <div className=\"certificate-overlay\">\r\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-        <div className=\"certificate-header\">\r\n-          <h2>Affidavit Testimony of My Status</h2>\r\n-        </div>\r\n-        <div className=\"certificate-body\">\r\n-          <div className=\"affidavit-statement\">\r\n-            <p>\r\n-              I, a living soul being of sound mind, competent and over the age\r\n-              of maturity, hereby affirm the following testimony is true. I have\r\n-              completed the fullness of the sovereign walk.\r\n-            </p>\r\n-          </div>\r\n-          <div className=\"certificate-scroll-container\">\r\n-            <div className=\"completed-documents-section\">\r\n-              <h3>Completed Documents:</h3>\r\n-              \r\n-              {user.documentRequirements?.politicalDeclaration && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n-                  <div className=\"document-details\">\r\n-                    <h5>Witness Testimony Affirming Political Status & Identity</h5>\r\n-                    <h5>Id-Document/Drivers-License/Passport</h5>\r\n-                    <h5>Photo With White Background</h5>\r\n-                    <h5>Thumb-Print (Red Ink)</h5>\r\n-                    <h5>Utility Bill</h5>\r\n-                    <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n+        \r\n+        {!isPublicView ? (\r\n+          <>\r\n+            <div className=\"certificate-header\">\r\n+              <h2>Affidavit Testimony of My Status</h2>\r\n+            </div>\r\n+            <div className=\"certificate-body\">\r\n+              <div className=\"affidavit-statement\">\r\n+                <p>\r\n+                  I, a living soul being of sound mind, competent and over the age\r\n+                  of maturity, hereby affirm the following testimony is true. I have\r\n+                  completed the fullness of the sovereign walk.\r\n+                </p>\r\n+              </div>\r\n+              <div className=\"certificate-scroll-container\">\r\n+                <div className=\"completed-documents-section\">\r\n+                  <h3>Completed Documents:</h3>\r\n+                  \r\n+                  {user.documentRequirements?.politicalDeclaration && (\r\n+                    <div className=\"document-group\">\r\n+                      <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                      <div className=\"document-details\">\r\n+                        <h5>Witness Testimony Affirming Political Status & Identity</h5>\r\n+                        <h5>Id-Document/Drivers-License/Passport</h5>\r\n+                        <h5>Photo With White Background</h5>\r\n+                        <h5>Thumb-Print (Red Ink)</h5>\r\n+                        <h5>Utility Bill</h5>\r\n+                        <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n \r\n-              {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n-                  <div className=\"document-details\">\r\n-                    <h5>Certificate of Assumed Name</h5>\r\n-                    <h6>Notice of Transfer of Reserved Name</h6>\r\n-                    <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n-                    <h5>Paramount Claim of Life</h5>\r\n-                    <h5>Mandatory Notice - Notice of Liability</h5>\r\n-                    <h5>Baby Deed</h5>\r\n-                    <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n-                    <h5>Affidavit Testimony</h5>\r\n-                    <p className=\"upload-status\">\r\n-                      ‚úÖ {user.documentRequirements.witnessTestimonies.length} testimonies uploaded\r\n-                    </p>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n+                  {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                    <div className=\"document-group\">\r\n+                      <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n+                      <div className=\"document-details\">\r\n+                        <h5>Certificate of Assumed Name</h5>\r\n+                        <h6>Notice of Transfer of Reserved Name</h6>\r\n+                        <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n+                        <h5>Paramount Claim of Life</h5>\r\n+                        <h5>Mandatory Notice - Notice of Liability</h5>\r\n+                        <h5>Baby Deed</h5>\r\n+                        <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n+                        <h5>Affidavit Testimony</h5>\r\n+                        <p className=\"upload-status\">\r\n+                          ‚úÖ {user.documentRequirements.witnessTestimonies.length} testimonies uploaded\r\n+                        </p>\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n \r\n-              {user.documentRequirements?.idDocumentFile && (\r\n-                <div className=\"document-group\">\r\n-                  <h4>Praecipe:</h4>\r\n-                  <div className=\"document-details\">\r\n-                    <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n-                  </div>\r\n+                  {user.documentRequirements?.idDocumentFile && (\r\n+                    <div className=\"document-group\">\r\n+                      <h4>Praecipe:</h4>\r\n+                      <div className=\"document-details\">\r\n+                        <p className=\"upload-status\">‚úÖ Documents Uploaded</p>\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n                 </div>\r\n-              )}\r\n+              </div>\r\n+              <div className=\"signature-section\">\r\n+                <div className=\"signature-line\"></div>\r\n+                <p className=\"signature-name\">\r\n+                  {user.fullNames} {user.familyName}\r\n+                </p>\r\n+                <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+              </div>\r\n             </div>\r\n+          </>\r\n+        ) : (\r\n+          <div className=\"public-certificate-view\">\r\n+            <div className=\"certificate-header\">\r\n+              <h2>Certificate of Completion</h2>\r\n+            </div>\r\n+            <div className=\"certificate-body\">\r\n+              <div className=\"affidavit-statement\">\r\n+                <p>\r\n+                  This is to certify that {user.fullNames} {user.familyName} has \r\n+                  successfully completed all required documentation for sovereign status.\r\n+                </p>\r\n+              </div>\r\n+              <div className=\"signature-section\">\r\n+                <div className=\"signature-line\"></div>\r\n+                <p className=\"signature-name\">\r\n+                  {user.fullNames} {user.familyName}\r\n+                </p>\r\n+                <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+              </div>\r\n+            </div>\r\n           </div>\r\n-          <div className=\"signature-section\">\r\n-            <div className=\"signature-line\"></div>\r\n-            <p className=\"signature-name\">\r\n-              {user.fullNames} {user.familyName}\r\n-            </p>\r\n-            <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n-          </div>\r\n-        </div>\r\n+        )}\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n+\r\n export default function Home() {\r\n   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n   const [uploadedLabels, setUploadedLabels] = useState([]);\r\n   const [userData, setUserData] = useState({\r\n@@ -594,15 +621,17 @@\n       {selectedUser && (\r\n         <SatisfactionCertificate\r\n           user={selectedUser}\r\n           onClose={() => setSelectedUser(null)}\r\n+          isPublicView={true}\r\n         />\r\n       )}\r\n \r\n       {showCertificate && (\r\n         <SatisfactionCertificate\r\n           user={userData}\r\n           onClose={() => setShowCertificate(false)}\r\n+          isPublicView={false}\r\n         />\r\n       )}\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1753708822198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,10 @@\n                     <div className=\"document-group\">\r\n                       <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n                       <div className=\"document-details\">\r\n                         <h5>Certificate of Assumed Name</h5>\r\n-                        <h6>Notice of Transfer of Reserved Name</h6>\r\n+                        <h5>Notice of Transfer of Reserved Name</h5>\r\n+                        <h5>Act of Expatriation</h5>\r\n                         <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n                         <h5>Paramount Claim of Life</h5>\r\n                         <h5>Mandatory Notice - Notice of Liability</h5>\r\n                         <h5>Baby Deed</h5>\r\n"
                },
                {
                    "date": 1753709862288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,31 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import \"./Home.css\";\r\n \r\n-function FileUpload({ label, onFileUploaded, documentType, onDelete, isUploaded }) {\r\n+function FileUpload({\r\n+  label,\r\n+  onFileUploaded,\r\n+  documentType,\r\n+  onDelete,\r\n+  isUploaded,\r\n+}) {\r\n   const [isUploading, setIsUploading] = useState(false);\r\n   const [isDeleting, setIsDeleting] = useState(false);\r\n   const fileInputRef = useRef(null);\r\n \r\n   const handleFolderUpload = (e) => {\r\n     const files = Array.from(e.target.files);\r\n-    \r\n+\r\n     // Handle empty folder case\r\n     if (files.length === 0) {\r\n       handleUpload([]);\r\n       return;\r\n     }\r\n \r\n     const totalSize = files.reduce((sum, file) => sum + file.size, 0);\r\n-    if (totalSize > 1024 * 1024 * 1024) { // 1GB max\r\n+    if (totalSize > 1024 * 1024 * 1024) {\r\n+      // 1GB max\r\n       alert(\"Total folder size too large (max 1GB)\");\r\n       return;\r\n     }\r\n \r\n@@ -26,9 +33,9 @@\n   };\r\n \r\n   const handleUpload = async (files) => {\r\n     const formData = new FormData();\r\n-    \r\n+\r\n     // Handle empty folder case\r\n     if (files.length === 0) {\r\n       formData.append(\"emptyFolder\", \"true\");\r\n       formData.append(\"folderName\", label);\r\n@@ -37,9 +44,9 @@\n         const relativePath = file.webkitRelativePath || file.name;\r\n         formData.append(\"files\", file, relativePath);\r\n       });\r\n     }\r\n-    \r\n+\r\n     formData.append(\"documentType\", documentType);\r\n     formData.append(\"folderName\", label);\r\n \r\n     try {\r\n@@ -133,31 +140,36 @@\n       <div className=\"certificate-container\">\r\n         <button className=\"close-certificate\" onClick={onClose}>\r\n           &times;\r\n         </button>\r\n-        \r\n+\r\n         {!isPublicView ? (\r\n           <>\r\n             <div className=\"certificate-header\">\r\n               <h2>Affidavit Testimony of My Status</h2>\r\n             </div>\r\n             <div className=\"certificate-body\">\r\n               <div className=\"affidavit-statement\">\r\n                 <p>\r\n-                  I, a living soul being of sound mind, competent and over the age\r\n-                  of maturity, hereby affirm the following testimony is true. I have\r\n-                  completed the fullness of the sovereign walk.\r\n+                  I, a living soul being of sound mind, competent and over the\r\n+                  age of maturity, hereby affirm the following testimony is\r\n+                  true. I have completed the fullness of the sovereign walk.\r\n                 </p>\r\n               </div>\r\n               <div className=\"certificate-scroll-container\">\r\n                 <div className=\"completed-documents-section\">\r\n                   <h3>Completed Documents:</h3>\r\n-                  \r\n+\r\n                   {user.documentRequirements?.politicalDeclaration && (\r\n                     <div className=\"document-group\">\r\n-                      <h4>528 - Universal Public Declaration of Political Status:</h4>\r\n+                      <h4>\r\n+                        528 - Universal Public Declaration of Political Status:\r\n+                      </h4>\r\n                       <div className=\"document-details\">\r\n-                        <h5>Witness Testimony Affirming Political Status & Identity</h5>\r\n+                        <h5>\r\n+                          Witness Testimony Affirming Political Status &\r\n+                          Identity\r\n+                        </h5>\r\n                         <h5>Id-Document/Drivers-License/Passport</h5>\r\n                         <h5>Photo With White Background</h5>\r\n                         <h5>Thumb-Print (Red Ink)</h5>\r\n                         <h5>Utility Bill</h5>\r\n@@ -165,23 +177,31 @@\n                       </div>\r\n                     </div>\r\n                   )}\r\n \r\n-                  {user.documentRequirements?.witnessTestimonies?.length > 0 && (\r\n+                  {user.documentRequirements?.witnessTestimonies?.length >\r\n+                    0 && (\r\n                     <div className=\"document-group\">\r\n-                      <h4>928 - Acknowledgement, Acceptance and Deed of Re-Conveyance:</h4>\r\n+                      <h4>\r\n+                        928 - Acknowledgement, Acceptance and Deed of\r\n+                        Re-Conveyance:\r\n+                      </h4>\r\n                       <div className=\"document-details\">\r\n                         <h5>Certificate of Assumed Name</h5>\r\n                         <h5>Notice of Transfer of Reserved Name</h5>\r\n                         <h5>Act of Expatriation</h5>\r\n                         <h5>Cancellation of all Prior Powers of Attorney</h5>\r\n                         <h5>Paramount Claim of Life</h5>\r\n                         <h5>Mandatory Notice - Notice of Liability</h5>\r\n                         <h5>Baby Deed</h5>\r\n-                        <h5>Solemn Record and Proclamation of Lawful Marriage</h5>\r\n+                        <h5>\r\n+                          Solemn Record and Proclamation of Lawful Marriage\r\n+                        </h5>\r\n                         <h5>Affidavit Testimony</h5>\r\n                         <p className=\"upload-status\">\r\n-                          ‚úÖ {user.documentRequirements.witnessTestimonies.length} testimonies uploaded\r\n+                          ‚úÖ{\" \"}\r\n+                          {user.documentRequirements.witnessTestimonies.length}{\" \"}\r\n+                          testimonies uploaded\r\n                         </p>\r\n                       </div>\r\n                     </div>\r\n                   )}\r\n@@ -200,9 +220,11 @@\n                 <div className=\"signature-line\"></div>\r\n                 <p className=\"signature-name\">\r\n                   {user.fullNames} {user.familyName}\r\n                 </p>\r\n-                <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+                <p className=\"signature-date\">\r\n+                  {new Date().toLocaleDateString()}\r\n+                </p>\r\n               </div>\r\n             </div>\r\n           </>\r\n         ) : (\r\n@@ -212,18 +234,21 @@\n             </div>\r\n             <div className=\"certificate-body\">\r\n               <div className=\"affidavit-statement\">\r\n                 <p>\r\n-                  This is to certify that {user.fullNames} {user.familyName} has \r\n-                  successfully completed all required documentation for sovereign status.\r\n+                  This is to certify that {user.fullNames} {user.familyName} has\r\n+                  successfully completed all required documentation for\r\n+                  sovereign status.\r\n                 </p>\r\n               </div>\r\n               <div className=\"signature-section\">\r\n                 <div className=\"signature-line\"></div>\r\n                 <p className=\"signature-name\">\r\n                   {user.fullNames} {user.familyName}\r\n                 </p>\r\n-                <p className=\"signature-date\">{new Date().toLocaleDateString()}</p>\r\n+                <p className=\"signature-date\">\r\n+                  {new Date().toLocaleDateString()}\r\n+                </p>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         )}\r\n@@ -280,12 +305,15 @@\n       setTempEmail(userData.email);\r\n \r\n       // Update uploaded labels based on document requirements\r\n       const uploaded = [];\r\n-      if (userData.documentRequirements?.politicalDeclaration) uploaded.push(\"528\");\r\n-      if (userData.documentRequirements?.witnessTestimonies?.length > 0) uploaded.push(\"928\");\r\n-      if (userData.documentRequirements?.idDocumentFile) uploaded.push(\"Praecipe\");\r\n-      \r\n+      if (userData.documentRequirements?.politicalDeclaration)\r\n+        uploaded.push(\"528\");\r\n+      if (userData.documentRequirements?.witnessTestimonies?.length > 0)\r\n+        uploaded.push(\"928\");\r\n+      if (userData.documentRequirements?.idDocumentFile)\r\n+        uploaded.push(\"Praecipe\");\r\n+\r\n       setUploadedLabels(uploaded);\r\n     } catch (error) {\r\n       console.error(\"Failed to fetch user data:\", error);\r\n       localStorage.removeItem(\"token\");\r\n@@ -391,14 +419,14 @@\n     fetchUserData(); // Refresh user data to get latest document status\r\n   };\r\n \r\n   const handleFileDeleted = (label) => {\r\n-    setUploadedLabels(uploadedLabels.filter(l => l !== label));\r\n+    setUploadedLabels(uploadedLabels.filter((l) => l !== label));\r\n     fetchUserData(); // Refresh user data to get latest document status\r\n   };\r\n \r\n-  const hasCompletedAllDocuments = \r\n-    userData.documentRequirements?.politicalDeclaration && \r\n+  const hasCompletedAllDocuments =\r\n+    userData.documentRequirements?.politicalDeclaration &&\r\n     userData.documentRequirements?.witnessTestimonies?.length > 0 &&\r\n     userData.documentRequirements?.idDocumentFile;\r\n \r\n   return (\r\n@@ -500,16 +528,20 @@\n                 label=\"528\"\r\n                 documentType=\"politicalDeclaration\"\r\n                 onFileUploaded={handleFileUploaded}\r\n                 onDelete={handleFileDeleted}\r\n-                isUploaded={!!userData.documentRequirements?.politicalDeclaration}\r\n+                isUploaded={\r\n+                  !!userData.documentRequirements?.politicalDeclaration\r\n+                }\r\n               />\r\n               <FileUpload\r\n                 label=\"928\"\r\n                 documentType=\"witnessTestimonies\"\r\n                 onFileUploaded={handleFileUploaded}\r\n                 onDelete={handleFileDeleted}\r\n-                isUploaded={userData.documentRequirements?.witnessTestimonies?.length > 0}\r\n+                isUploaded={\r\n+                  userData.documentRequirements?.witnessTestimonies?.length > 0\r\n+                }\r\n               />\r\n               <FileUpload\r\n                 label=\"Praecipe\"\r\n                 documentType=\"idDocument\"\r\n@@ -520,9 +552,9 @@\n             </div>\r\n \r\n             {hasCompletedAllDocuments && (\r\n               <div className=\"certificate-section\">\r\n-                <button \r\n+                <button\r\n                   className=\"view-certificate-btn\"\r\n                   onClick={() => setShowCertificate(true)}\r\n                 >\r\n                   View My Certificate\r\n@@ -569,25 +601,27 @@\n                     </div>\r\n                   ) : publicViewUsers.length === 0 ? (\r\n                     <p>No users have completed all documents yet</p>\r\n                   ) : (\r\n-                    <div className=\"completed-users-list\">\r\n-                      {publicViewUsers.map((user) => (\r\n-                        <div\r\n-                          key={user._id}\r\n-                          className=\"completed-user\"\r\n-                          onClick={() => setSelectedUser(user)}\r\n-                        >\r\n-                          <div className=\"user-info\">\r\n-                            <span>\r\n-                              {user.fullNames} {user.familyName}\r\n+                    <div className=\"completed-users-scroll-container\">\r\n+                      <div className=\"completed-users-list\">\r\n+                        {publicViewUsers.map((user) => (\r\n+                          <div\r\n+                            key={user._id}\r\n+                            className=\"completed-user\"\r\n+                            onClick={() => setSelectedUser(user)}\r\n+                          >\r\n+                            <div className=\"user-info\">\r\n+                              <span>\r\n+                                {user.fullNames} {user.familyName}\r\n+                              </span>\r\n+                            </div>\r\n+                            <span className=\"completed-badge\">\r\n+                              View Certificate\r\n                             </span>\r\n                           </div>\r\n-                          <span className=\"completed-badge\">\r\n-                            View Certificate\r\n-                          </span>\r\n-                        </div>\r\n-                      ))}\r\n+                        ))}\r\n+                      </div>\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n               ) : (\r\n@@ -604,9 +638,10 @@\n                     </div>\r\n                     <p>\r\n                       {hasCompletedAllDocuments ? (\r\n                         <span className=\"completed-text\">\r\n-                          ‚úÖ All documents completed! You can now view your certificate.\r\n+                          ‚úÖ All documents completed! You can now view your\r\n+                          certificate.\r\n                         </span>\r\n                       ) : (\r\n                         `${uploadedLabels.length} of 3 documents uploaded`\r\n                       )}\r\n@@ -635,5 +670,5 @@\n         />\r\n       )}\r\n     </>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                }
            ],
            "date": 1753434643571,
            "name": "Commit-0",
            "content": "import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Home.css\";\r\n\r\nfunction FileUpload({ label, onFileUploaded, documentType, onDelete }) {\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"label\", label);\r\n    formData.append(\"documentType\", documentType);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/home/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      alert(`‚úÖ File uploaded for ${label}: ${response.data.message}`);\r\n      if (onFileUploaded) onFileUploaded(label);\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      alert(error.response?.data?.message || \"‚ùå Failed to upload file.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = async () => {\r\n    if (!window.confirm(`Are you sure you want to delete ${label}?`)) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/home/delete-document\",\r\n        { documentType },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      alert(response.data.message);\r\n      if (onDelete) onDelete(label);\r\n    } catch (error) {\r\n      console.error(\"Delete error:\", error);\r\n      alert(error.response?.data?.message || \"‚ùå Failed to delete document.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <label className=\"custum-file-upload\">\r\n        <div className=\"icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"48px\"\r\n            height=\"48px\"\r\n          >\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            <path\r\n              fill=\"#e8e8e8\"\r\n              d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 \r\n                 9.11 4 6.6 5.64 5.35 8.04 \r\n                 2.34 8.36 0 10.91 0 14c0 3.31 \r\n                 2.69 6 6 6h13c2.76 0 5-2.24 \r\n                 5-5 0-2.64-2.05-4.78-4.65-4.96zM13 \r\n                 12h-2v4H8l4 4 4-4h-3v-4z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className=\"text\">\r\n          <span>{label}</span>\r\n        </div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n      </label>\r\n      <button className=\"delete-btn\" onClick={handleDeleteClick} title={`Delete ${label}`}>\r\n        üóëÔ∏è Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Home() {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [uploadedLabels, setUploadedLabels] = useState([]);\r\n  const [userData, setUserData] = useState({\r\n    fullNames: \"Loading...\",\r\n    familyName: \"\",\r\n    email: \"Loading...\",\r\n    profileImage: null,\r\n    documentRequirements: {},\r\n  });\r\n  const [editingName, setEditingName] = useState(false);\r\n  const [editingEmail, setEditingEmail] = useState(false);\r\n  const [tempName, setTempName] = useState(\"\");\r\n  const [tempEmail, setTempEmail] = useState(\"\");\r\n  const profileInputRef = useRef(null);\r\n\r\n  // Fetch user data on mount, also after updates to keep UI synced\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setUserData(response.data);\r\n      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n      setTempEmail(response.data.email);\r\n\r\n      // Extract uploaded document labels\r\n      const uploaded = [];\r\n      if (response.data.documentRequirements) {\r\n        if (response.data.documentRequirements.politicalDeclaration)\r\n          uploaded.push(\"528\");\r\n        if (\r\n          response.data.documentRequirements.witnessTestimonies &&\r\n          response.data.documentRequirements.witnessTestimonies.length > 0\r\n        )\r\n          uploaded.push(\"928\");\r\n        if (response.data.documentRequirements.idDocumentFile)\r\n          uploaded.push(\"Praecipe\");\r\n      }\r\n      setUploadedLabels(uploaded);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch user data:\", error);\r\n      localStorage.removeItem(\"token\");\r\n      window.location.href = \"/login\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const toggleDropdown = () => setDropdownOpen((prev) => !prev);\r\n  const toggleSidebar = () => setSidebarOpen((prev) => !prev);\r\n\r\n  const handleFileUploaded = (label) => {\r\n    setUploadedLabels((prev) => [...new Set([...prev, label])]);\r\n    fetchUserData(); // Refresh user data after upload\r\n  };\r\n\r\n  const handleFileDeleted = (label) => {\r\n    setUploadedLabels((prev) => prev.filter((l) => l !== label));\r\n    fetchUserData(); // Refresh user data after delete\r\n  };\r\n\r\n  const handleProfileImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"type\", \"profileImage\");\r\n\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/home/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Update profile image locally & refresh user data\r\n      setUserData((prev) => ({\r\n        ...prev,\r\n        profileImage: response.data.filePath,\r\n      }));\r\n      alert(\"Profile image updated successfully!\");\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error(\"Error uploading profile image:\", error);\r\n      alert(\"Failed to upload profile image\");\r\n    }\r\n  };\r\n\r\n  const saveUserData = async () => {\r\n    try {\r\n      const [fullNames, familyName] = tempName.split(\" \");\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await axios.put(\r\n        \"http://localhost:5000/api/auth/update\",\r\n        {\r\n          fullNames,\r\n          familyName,\r\n          email: tempEmail,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      setUserData(response.data);\r\n      setTempName(`${response.data.fullNames} ${response.data.familyName}`);\r\n      setTempEmail(response.data.email);\r\n      setEditingName(false);\r\n      setEditingEmail(false);\r\n      alert(\"Profile updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      alert(error.response?.data?.message || \"Failed to update profile\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"sidebar-toggle\"\r\n        onClick={toggleSidebar}\r\n        title=\"Show Info / Upload Profile Pic\"\r\n      >\r\n        {userData.profileImage ? (\r\n          <img\r\n            src={`http://localhost:5000${userData.profileImage}`}\r\n            alt=\"Profile\"\r\n            className=\"profile-img\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              borderRadius: \"50%\",\r\n              width: \"36px\",\r\n              height: \"36px\",\r\n              objectFit: \"cover\",\r\n            }}\r\n          />\r\n        ) : (\r\n          \"i\"\r\n        )}\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        style={{ display: \"none\" }}\r\n        ref={profileInputRef}\r\n        onChange={handleProfileImageChange}\r\n      />\r\n\r\n      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n        <button className=\"back-btn\" onClick={toggleSidebar}>\r\n          &larr; Back\r\n        </button>\r\n        <h2>User Info</h2>\r\n\r\n        <div\r\n          className=\"profile-upload\"\r\n          onClick={() => profileInputRef.current?.click()}\r\n          title=\"Click to upload profile picture\"\r\n          style={{\r\n            marginBottom: \"1rem\",\r\n            cursor: \"pointer\",\r\n            width: 120,\r\n            height: 120,\r\n            borderRadius: \"50%\",\r\n            border: \"2px dashed #2f80ed\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            overflow: \"hidden\",\r\n            backgroundColor: \"#f0f0f0\",\r\n            color: \"#555\",\r\n            fontSize: \"1.2rem\",\r\n            userSelect: \"none\",\r\n          }}\r\n        >\r\n          {userData.profileImage ? (\r\n            <img\r\n              src={`http://localhost:5000${userData.profileImage}`}\r\n              alt=\"Profile\"\r\n              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n            />\r\n          ) : (\r\n            <span>Upload Profile Pic</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Editable Name */}\r\n        <div className=\"editable-field\">\r\n          <label>Name:</label>\r\n          {editingName ? (\r\n            <input\r\n              type=\"text\"\r\n              value={tempName}\r\n              onChange={(e) => setTempName(e.target.value)}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span>{tempName}</span>\r\n          )}\r\n          {!editingName && (\r\n            <button\r\n              className=\"edit-btn\"\r\n              title=\"Edit Name\"\r\n              onClick={() => setEditingName(true)}\r\n            >\r\n              ‚úèÔ∏è\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Editable Email */}\r\n        <div className=\"editable-field\">\r\n          <label>Email:</label>\r\n          {editingEmail ? (\r\n            <input\r\n              type=\"email\"\r\n              value={tempEmail}\r\n              onChange={(e) => setTempEmail(e.target.value)}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span>{tempEmail}</span>\r\n          )}\r\n          {!editingEmail && (\r\n            <button\r\n              className=\"edit-btn\"\r\n              title=\"Edit Email\"\r\n              onClick={() => setEditingEmail(true)}\r\n            >\r\n              ‚úèÔ∏è\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Save Button - Only shown when editing */}\r\n        {(editingName || editingEmail) && (\r\n          <div className=\"save-section\">\r\n            <button className=\"save-btn\" onClick={saveUserData}>\r\n              Save Changes\r\n            </button>\r\n            <button\r\n              className=\"cancel-btn\"\r\n              onClick={() => {\r\n                setEditingName(false);\r\n                setEditingEmail(false);\r\n                setTempName(`${userData.fullNames} ${userData.familyName}`);\r\n                setTempEmail(userData.email);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"logout-section\">\r\n          <button className=\"logout-btn\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`home-wrapper ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n        <div className=\"upload-container\">\r\n          <button className=\"upload-btn\" onClick={toggleDropdown}>\r\n            Upload Documents ‚ñº\r\n          </button>\r\n          {dropdownOpen && (\r\n            <div className=\"dropdown-menu\">\r\n              {[\"528\", \"928\", \"Praecipe\"].map((label) => (\r\n                <div key={label} className=\"dropdown-item\">\r\n                  <FileUpload\r\n                    label={label}\r\n                    onFileUploaded={handleFileUploaded}\r\n                    onDelete={handleFileDeleted}\r\n                    documentType={\r\n                      label === \"528\"\r\n                        ? \"politicalDeclaration\"\r\n                        : label === \"928\"\r\n                        ? \"witnessTestimonies\"\r\n                        : \"idDocument\"\r\n                    }\r\n                  />\r\n                  {uploadedLabels.includes(label) && (\r\n                    <span className=\"tick\">‚úî</span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}